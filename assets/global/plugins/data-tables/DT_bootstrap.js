$.extend(true, $.fn.dataTable.defaults, { sDom: "<'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>", sPaginationType: "bootstrap", oLanguage: { sLengthMenu: " _MENU_ records " } }); $.extend($.fn.dataTableExt.oStdClasses, { sWrapper: "dataTables_wrapper" }); $.fn.dataTableExt.oApi.fnPagingInfo = function (e) { return { iStart: e._iDisplayStart, iEnd: e.fnDisplayEnd(), iLength: e._iDisplayLength, iTotal: e.fnRecordsTotal(), iFilteredTotal: e.fnRecordsDisplay(), iPage: Math.ceil(e._iDisplayStart / e._iDisplayLength), iTotalPages: Math.ceil(e.fnRecordsDisplay() / e._iDisplayLength) } }; $.extend($.fn.dataTableExt.oPagination, { bootstrap: { fnInit: function (e, t, n) { var r = e.oLanguage.oPaginate; var i = function (t) { t.preventDefault(); if (e.oApi._fnPageChange(e, t.data.action)) { n(e) } }; $(t).append('<ul class="pagination">' + '<li class="prev disabled"><a href="#" title="' + r.sPrevious + '"><i class="fa fa-angle-left"></i></a></li>' + '<li class="next disabled"><a href="#" title="' + r.sNext + '"><i class="fa fa-angle-right"></i></a></li>' + "</ul>"); var s = $("a", t); $(s[0]).bind("click.DT", { action: "previous" }, i); $(s[1]).bind("click.DT", { action: "next" }, i) }, fnUpdate: function (e, t) { var n = 5; var r = e.oInstance.fnPagingInfo(); var i = e.aanFeatures.p; var s, o, u, a, f, l = Math.floor(n / 2); if (r.iTotalPages < n) { a = 1; f = r.iTotalPages } else if (r.iPage <= l) { a = 1; f = n } else if (r.iPage >= r.iTotalPages - l) { a = r.iTotalPages - n + 1; f = r.iTotalPages } else { a = r.iPage - l + 1; f = a + n - 1 } for (s = 0, iLen = i.length; s < iLen; s++) { if (r.iTotalPages < 0) { $(".pagination", i[s]).css("visibility", "hidden") } else { $(".pagination", i[s]).css("visibility", "visible") } $("li:gt(0)", i[s]).filter(":not(:last)").remove(); for (o = a; o <= f; o++) { u = o == r.iPage + 1 ? 'class="active"' : ""; $("<li " + u + '><a href="#">' + o + "</a></li>").insertBefore($("li:last", i[s])[0]).bind("click", function (n) { n.preventDefault(); e._iDisplayStart = (parseInt($("a", this).text(), 10) - 1) * r.iLength; t(e) }) } if (r.iPage === 0) { $("li:first", i[s]).addClass("disabled") } else { $("li:first", i[s]).removeClass("disabled") } if (r.iPage === r.iTotalPages - 1 || r.iTotalPages === 0) { $("li:last", i[s]).addClass("disabled") } else { $("li:last", i[s]).removeClass("disabled") } } } } }); $.extend($.fn.dataTableExt.oPagination, { bootstrap_full_number: { fnInit: function (e, t, n) { var r = e.oLanguage.oPaginate; var i = function (t) { t.preventDefault(); if (e.oApi._fnPageChange(e, t.data.action)) { n(e) } }; $(t).append('<ul class="pagination">' + '<li class="prev disabled"><a href="#" title="' + r.sFirst + '"><i class="fa fa-angle-double-left"></i></a></li>' + '<li class="prev disabled"><a href="#" title="' + r.sPrevious + '"><i class="fa fa-angle-left"></i></a></li>' + '<li class="next disabled"><a href="#" title="' + r.sNext + '"><i class="fa fa-angle-right"></i></a></li>' + '<li class="next disabled"><a href="#" title="' + r.sLast + '"><i class="fa fa-angle-double-right"></i></a></li>' + "</ul>"); var s = $("a", t); $(s[0]).bind("click.DT", { action: "first" }, i); $(s[1]).bind("click.DT", { action: "previous" }, i); $(s[2]).bind("click.DT", { action: "next" }, i); $(s[3]).bind("click.DT", { action: "last" }, i) }, fnUpdate: function (e, t) { var n = 5; var r = e.oInstance.fnPagingInfo(); var i = e.aanFeatures.p; var s, o, u, a, f, l = Math.floor(n / 2); if (r.iTotalPages < n) { a = 1; f = r.iTotalPages } else if (r.iPage <= l) { a = 1; f = n } else if (r.iPage >= r.iTotalPages - l) { a = r.iTotalPages - n + 1; f = r.iTotalPages } else { a = r.iPage - l + 1; f = a + n - 1 } for (s = 0, iLen = i.length; s < iLen; s++) { if (r.iTotalPages < 0) { $(".pagination", i[s]).css("visibility", "hidden") } else { $(".pagination", i[s]).css("visibility", "visible") } $("li:gt(1)", i[s]).filter(":not(.next)").remove(); for (o = a; o <= f; o++) { u = o == r.iPage + 1 ? 'class="active"' : ""; $("<li " + u + '><a href="#">' + o + "</a></li>").insertBefore($("li.next:first", i[s])[0]).bind("click", function (n) { n.preventDefault(); e._iDisplayStart = (parseInt($("a", this).text(), 10) - 1) * r.iLength; t(e) }) } if (r.iPage === 0) { $("li.prev", i[s]).addClass("disabled") } else { $("li.prev", i[s]).removeClass("disabled") } if (r.iPage === r.iTotalPages - 1 || r.iTotalPages === 0) { $("li.next", i[s]).addClass("disabled") } else { $("li.next", i[s]).removeClass("disabled") } } } } }); $.extend($.fn.dataTableExt.oPagination, { bootstrap_extended: { fnInit: function (e, t, n) { var r = e.oLanguage.oPaginate; var i = e.oInstance.fnPagingInfo(); var s = function (t) { t.preventDefault(); if (e.oApi._fnPageChange(e, t.data.action)) { n(e) } }; $(t).append('<div class="pagination-panel"> ' + r.sPage + " " + '<a href="#" class="btn btn-sm default prev disabled" title="' + r.sPrevious + '"><i class="fa fa-angle-left"></i></a>' + '<input type="text" class="pagination-panel-input form-control input-mini input-inline input-sm" maxlenght="5" style="text-align:center; margin: 0 5px;">' + '<a href="#" class="btn btn-sm default next disabled" title="' + r.sNext + '"><i class="fa fa-angle-right"></i></a> ' + r.sPageOf + ' <span class="pagination-panel-total"></span>' + "</div>"); var o = $("a", t); $(o[0]).bind("click.DT", { action: "previous" }, s); $(o[1]).bind("click.DT", { action: "next" }, s); $(".pagination-panel-input", t).bind("change.DT", function (t) { var r = e.oInstance.fnPagingInfo(); t.preventDefault(); var i = parseInt($(this).val()); if (i > 0 && i <= r.iTotalPages) { if (e.oApi._fnPageChange(e, i - 1)) { n(e) } } else { $(this).val(r.iPage + 1) } }); $(".pagination-panel-input", t).bind("keypress.DT", function (t) { var r = e.oInstance.fnPagingInfo(); if (t.which == 13) { var i = parseInt($(this).val()); if (i > 0 && i <= e.oInstance.fnPagingInfo().iTotalPages) { if (e.oApi._fnPageChange(e, i - 1)) { n(e) } } else { $(this).val(r.iPage + 1) } t.preventDefault() } }) }, fnUpdate: function (e, t) { var n = 5; var r = e.oInstance.fnPagingInfo(); var i = e.aanFeatures.p; var s, o, u, a, f, l = Math.floor(n / 2); if (r.iTotalPages < n) { a = 1; f = r.iTotalPages } else if (r.iPage <= l) { a = 1; f = n } else if (r.iPage >= r.iTotalPages - l) { a = r.iTotalPages - n + 1; f = r.iTotalPages } else { a = r.iPage - l + 1; f = a + n - 1 } for (s = 0, iLen = i.length; s < iLen; s++) { var c = $(i[s]).parents(".dataTables_wrapper"); if (r.iTotalPages < 0) { $(".dataTables_paginate, .dataTables_length .seperator", c).hide() } else { $(".dataTables_paginate, .dataTables_length .seperator", c).show() } $(".pagination-panel-total", i[s]).html(r.iTotalPages); $(".pagination-panel-input", i[s]).val(r.iPage + 1); $("li:gt(1)", i[s]).filter(":not(.next)").remove(); for (o = a; o <= f; o++) { u = o == r.iPage + 1 ? 'class="active"' : ""; $("<li " + u + '><a href="#">' + o + "</a></li>").insertBefore($("li.next:first", i[s])[0]).bind("click", function (n) { n.preventDefault(); e._iDisplayStart = (parseInt($("a", this).text(), 10) - 1) * r.iLength; t(e) }) } if (r.iPage === 0) { $("a.prev", i[s]).addClass("disabled") } else { $("a.prev", i[s]).removeClass("disabled") } if (r.iPage === r.iTotalPages - 1 || r.iTotalPages === 0) { $("a.next", i[s]).addClass("disabled") } else { $("a.next", i[s]).removeClass("disabled") } } } } }); if ($.fn.DataTable.TableTools) { $.extend(true, $.fn.DataTable.TableTools.classes, { print: { info: "DTTT_Print_Info" }, container: "btn-group", buttons: { normal: "btn default", disabled: "btn default disabled" }, collection: { container: "DTTT_dropdown dropdown-menu", buttons: { normal: "", disabled: "disabled" } } }); $.extend(true, $.fn.DataTable.TableTools.DEFAULTS.oTags, { collection: { container: "ul", button: "li", liner: "a" } }) } $.fn.dataTableExt.oApi.fnSetFilteringDelay = function (e, t) { var n = this; if (t === undefined) { t = 250 } this.each(function (e) { $.fn.dataTableExt.iApiIndex = e; var r = this, i = null, s = null, o = $("input", n.fnSettings().aanFeatures.f); o.unbind("keyup search input").bind("keyup", function () { var u = r; if (s === null || s != o.val()) { window.clearTimeout(i); s = o.val(); i = window.setTimeout(function () { $.fn.dataTableExt.iApiIndex = e; n.fnFilter(o.val()) }, t) } }); return this }); return this }