#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBToms")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertTBAddress(TBAddress instance);
  partial void UpdateTBAddress(TBAddress instance);
  partial void DeleteTBAddress(TBAddress instance);
  partial void InsertTBWishlist(TBWishlist instance);
  partial void UpdateTBWishlist(TBWishlist instance);
  partial void DeleteTBWishlist(TBWishlist instance);
  partial void InsertTBAttribute(TBAttribute instance);
  partial void UpdateTBAttribute(TBAttribute instance);
  partial void DeleteTBAttribute(TBAttribute instance);
  partial void InsertTBCarrier(TBCarrier instance);
  partial void UpdateTBCarrier(TBCarrier instance);
  partial void DeleteTBCarrier(TBCarrier instance);
  partial void InsertTBCategory(TBCategory instance);
  partial void UpdateTBCategory(TBCategory instance);
  partial void DeleteTBCategory(TBCategory instance);
  partial void InsertTBCity(TBCity instance);
  partial void UpdateTBCity(TBCity instance);
  partial void DeleteTBCity(TBCity instance);
  partial void InsertTBConfiguration(TBConfiguration instance);
  partial void UpdateTBConfiguration(TBConfiguration instance);
  partial void DeleteTBConfiguration(TBConfiguration instance);
  partial void InsertTBCountry(TBCountry instance);
  partial void UpdateTBCountry(TBCountry instance);
  partial void DeleteTBCountry(TBCountry instance);
  partial void InsertTBCurrency(TBCurrency instance);
  partial void UpdateTBCurrency(TBCurrency instance);
  partial void DeleteTBCurrency(TBCurrency instance);
  partial void InsertTBCustomer(TBCustomer instance);
  partial void UpdateTBCustomer(TBCustomer instance);
  partial void DeleteTBCustomer(TBCustomer instance);
  partial void InsertTBCustomer_Group(TBCustomer_Group instance);
  partial void UpdateTBCustomer_Group(TBCustomer_Group instance);
  partial void DeleteTBCustomer_Group(TBCustomer_Group instance);
  partial void InsertTBDistrict(TBDistrict instance);
  partial void UpdateTBDistrict(TBDistrict instance);
  partial void DeleteTBDistrict(TBDistrict instance);
  partial void InsertTBEmployee(TBEmployee instance);
  partial void UpdateTBEmployee(TBEmployee instance);
  partial void DeleteTBEmployee(TBEmployee instance);
  partial void InsertTBLog_Error(TBLog_Error instance);
  partial void UpdateTBLog_Error(TBLog_Error instance);
  partial void DeleteTBLog_Error(TBLog_Error instance);
  partial void InsertTBLog_Order(TBLog_Order instance);
  partial void UpdateTBLog_Order(TBLog_Order instance);
  partial void DeleteTBLog_Order(TBLog_Order instance);
  partial void InsertTBLog_Stock(TBLog_Stock instance);
  partial void UpdateTBLog_Stock(TBLog_Stock instance);
  partial void DeleteTBLog_Stock(TBLog_Stock instance);
  partial void InsertTBManufacturer(TBManufacturer instance);
  partial void UpdateTBManufacturer(TBManufacturer instance);
  partial void DeleteTBManufacturer(TBManufacturer instance);
  partial void InsertTBMenu(TBMenu instance);
  partial void UpdateTBMenu(TBMenu instance);
  partial void DeleteTBMenu(TBMenu instance);
  partial void InsertTBNewsletter(TBNewsletter instance);
  partial void UpdateTBNewsletter(TBNewsletter instance);
  partial void DeleteTBNewsletter(TBNewsletter instance);
  partial void InsertTBOrder_Detail(TBOrder_Detail instance);
  partial void UpdateTBOrder_Detail(TBOrder_Detail instance);
  partial void DeleteTBOrder_Detail(TBOrder_Detail instance);
  partial void InsertTBOrder_Status(TBOrder_Status instance);
  partial void UpdateTBOrder_Status(TBOrder_Status instance);
  partial void DeleteTBOrder_Status(TBOrder_Status instance);
  partial void InsertTBOrder_temp(TBOrder_temp instance);
  partial void UpdateTBOrder_temp(TBOrder_temp instance);
  partial void DeleteTBOrder_temp(TBOrder_temp instance);
  partial void InsertTBPage(TBPage instance);
  partial void UpdateTBPage(TBPage instance);
  partial void DeleteTBPage(TBPage instance);
  partial void InsertTBPageCategory(TBPageCategory instance);
  partial void UpdateTBPageCategory(TBPageCategory instance);
  partial void DeleteTBPageCategory(TBPageCategory instance);
  partial void InsertTBPageCategory_Post(TBPageCategory_Post instance);
  partial void UpdateTBPageCategory_Post(TBPageCategory_Post instance);
  partial void DeleteTBPageCategory_Post(TBPageCategory_Post instance);
  partial void InsertTBPageMedia(TBPageMedia instance);
  partial void UpdateTBPageMedia(TBPageMedia instance);
  partial void DeleteTBPageMedia(TBPageMedia instance);
  partial void InsertTBPayment_Confirmation(TBPayment_Confirmation instance);
  partial void UpdateTBPayment_Confirmation(TBPayment_Confirmation instance);
  partial void DeleteTBPayment_Confirmation(TBPayment_Confirmation instance);
  partial void InsertTBPayment_Method(TBPayment_Method instance);
  partial void UpdateTBPayment_Method(TBPayment_Method instance);
  partial void DeleteTBPayment_Method(TBPayment_Method instance);
  partial void InsertTBPost(TBPost instance);
  partial void UpdateTBPost(TBPost instance);
  partial void DeleteTBPost(TBPost instance);
  partial void InsertTBPostMedia(TBPostMedia instance);
  partial void UpdateTBPostMedia(TBPostMedia instance);
  partial void DeleteTBPostMedia(TBPostMedia instance);
  partial void InsertTBProduct(TBProduct instance);
  partial void UpdateTBProduct(TBProduct instance);
  partial void DeleteTBProduct(TBProduct instance);
  partial void InsertTBProduct_Category(TBProduct_Category instance);
  partial void UpdateTBProduct_Category(TBProduct_Category instance);
  partial void DeleteTBProduct_Category(TBProduct_Category instance);
  partial void InsertTBProduct_Combination(TBProduct_Combination instance);
  partial void UpdateTBProduct_Combination(TBProduct_Combination instance);
  partial void DeleteTBProduct_Combination(TBProduct_Combination instance);
  partial void InsertTBProduct_Combination_Currency(TBProduct_Combination_Currency instance);
  partial void UpdateTBProduct_Combination_Currency(TBProduct_Combination_Currency instance);
  partial void DeleteTBProduct_Combination_Currency(TBProduct_Combination_Currency instance);
  partial void InsertTBProduct_Combination_Detail(TBProduct_Combination_Detail instance);
  partial void UpdateTBProduct_Combination_Detail(TBProduct_Combination_Detail instance);
  partial void DeleteTBProduct_Combination_Detail(TBProduct_Combination_Detail instance);
  partial void InsertTBProduct_Combination_Photo(TBProduct_Combination_Photo instance);
  partial void UpdateTBProduct_Combination_Photo(TBProduct_Combination_Photo instance);
  partial void DeleteTBProduct_Combination_Photo(TBProduct_Combination_Photo instance);
  partial void InsertTBProduct_Currency(TBProduct_Currency instance);
  partial void UpdateTBProduct_Currency(TBProduct_Currency instance);
  partial void DeleteTBProduct_Currency(TBProduct_Currency instance);
  partial void InsertTBProduct_Photo(TBProduct_Photo instance);
  partial void UpdateTBProduct_Photo(TBProduct_Photo instance);
  partial void DeleteTBProduct_Photo(TBProduct_Photo instance);
  partial void InsertTBPromo(TBPromo instance);
  partial void UpdateTBPromo(TBPromo instance);
  partial void DeleteTBPromo(TBPromo instance);
  partial void InsertTBProvince(TBProvince instance);
  partial void UpdateTBProvince(TBProvince instance);
  partial void DeleteTBProvince(TBProvince instance);
  partial void InsertTBRole(TBRole instance);
  partial void UpdateTBRole(TBRole instance);
  partial void DeleteTBRole(TBRole instance);
  partial void InsertTBRole_Menu(TBRole_Menu instance);
  partial void UpdateTBRole_Menu(TBRole_Menu instance);
  partial void DeleteTBRole_Menu(TBRole_Menu instance);
  partial void InsertTBRole_OrderStatus(TBRole_OrderStatus instance);
  partial void UpdateTBRole_OrderStatus(TBRole_OrderStatus instance);
  partial void DeleteTBRole_OrderStatus(TBRole_OrderStatus instance);
  partial void InsertTBShipping(TBShipping instance);
  partial void UpdateTBShipping(TBShipping instance);
  partial void DeleteTBShipping(TBShipping instance);
  partial void InsertTBValue(TBValue instance);
  partial void UpdateTBValue(TBValue instance);
  partial void DeleteTBValue(TBValue instance);
  partial void InsertTBVoucher(TBVoucher instance);
  partial void UpdateTBVoucher(TBVoucher instance);
  partial void DeleteTBVoucher(TBVoucher instance);
  partial void InsertTBCustomer_Product(TBCustomer_Product instance);
  partial void UpdateTBCustomer_Product(TBCustomer_Product instance);
  partial void DeleteTBCustomer_Product(TBCustomer_Product instance);
  partial void InsertTBOrder(TBOrder instance);
  partial void UpdateTBOrder(TBOrder instance);
  partial void DeleteTBOrder(TBOrder instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DBTomsConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<TBAddress> TBAddresses
	{
		get
		{
			return this.GetTable<TBAddress>();
		}
	}
	
	public System.Data.Linq.Table<TBWishlist> TBWishlists
	{
		get
		{
			return this.GetTable<TBWishlist>();
		}
	}
	
	public System.Data.Linq.Table<TBAttribute> TBAttributes
	{
		get
		{
			return this.GetTable<TBAttribute>();
		}
	}
	
	public System.Data.Linq.Table<TBCarrier> TBCarriers
	{
		get
		{
			return this.GetTable<TBCarrier>();
		}
	}
	
	public System.Data.Linq.Table<TBCategory> TBCategories
	{
		get
		{
			return this.GetTable<TBCategory>();
		}
	}
	
	public System.Data.Linq.Table<TBCity> TBCities
	{
		get
		{
			return this.GetTable<TBCity>();
		}
	}
	
	public System.Data.Linq.Table<TBConfiguration> TBConfigurations
	{
		get
		{
			return this.GetTable<TBConfiguration>();
		}
	}
	
	public System.Data.Linq.Table<TBCountry> TBCountries
	{
		get
		{
			return this.GetTable<TBCountry>();
		}
	}
	
	public System.Data.Linq.Table<TBCurrency> TBCurrencies
	{
		get
		{
			return this.GetTable<TBCurrency>();
		}
	}
	
	public System.Data.Linq.Table<TBCustomer> TBCustomers
	{
		get
		{
			return this.GetTable<TBCustomer>();
		}
	}
	
	public System.Data.Linq.Table<TBCustomer_Group> TBCustomer_Groups
	{
		get
		{
			return this.GetTable<TBCustomer_Group>();
		}
	}
	
	public System.Data.Linq.Table<TBDistrict> TBDistricts
	{
		get
		{
			return this.GetTable<TBDistrict>();
		}
	}
	
	public System.Data.Linq.Table<TBEmployee> TBEmployees
	{
		get
		{
			return this.GetTable<TBEmployee>();
		}
	}
	
	public System.Data.Linq.Table<TBLog_Error> TBLog_Errors
	{
		get
		{
			return this.GetTable<TBLog_Error>();
		}
	}
	
	public System.Data.Linq.Table<TBLog_Order> TBLog_Orders
	{
		get
		{
			return this.GetTable<TBLog_Order>();
		}
	}
	
	public System.Data.Linq.Table<TBLog_Stock> TBLog_Stocks
	{
		get
		{
			return this.GetTable<TBLog_Stock>();
		}
	}
	
	public System.Data.Linq.Table<TBManufacturer> TBManufacturers
	{
		get
		{
			return this.GetTable<TBManufacturer>();
		}
	}
	
	public System.Data.Linq.Table<TBMenu> TBMenus
	{
		get
		{
			return this.GetTable<TBMenu>();
		}
	}
	
	public System.Data.Linq.Table<TBNewsletter> TBNewsletters
	{
		get
		{
			return this.GetTable<TBNewsletter>();
		}
	}
	
	public System.Data.Linq.Table<TBOrder_Detail> TBOrder_Details
	{
		get
		{
			return this.GetTable<TBOrder_Detail>();
		}
	}
	
	public System.Data.Linq.Table<TBOrder_Status> TBOrder_Status
	{
		get
		{
			return this.GetTable<TBOrder_Status>();
		}
	}
	
	public System.Data.Linq.Table<TBOrder_temp> TBOrder_temps
	{
		get
		{
			return this.GetTable<TBOrder_temp>();
		}
	}
	
	public System.Data.Linq.Table<TBPage> TBPages
	{
		get
		{
			return this.GetTable<TBPage>();
		}
	}
	
	public System.Data.Linq.Table<TBPageCategory> TBPageCategories
	{
		get
		{
			return this.GetTable<TBPageCategory>();
		}
	}
	
	public System.Data.Linq.Table<TBPageCategory_Post> TBPageCategory_Posts
	{
		get
		{
			return this.GetTable<TBPageCategory_Post>();
		}
	}
	
	public System.Data.Linq.Table<TBPageMedia> TBPageMedias
	{
		get
		{
			return this.GetTable<TBPageMedia>();
		}
	}
	
	public System.Data.Linq.Table<TBPayment_Confirmation> TBPayment_Confirmations
	{
		get
		{
			return this.GetTable<TBPayment_Confirmation>();
		}
	}
	
	public System.Data.Linq.Table<TBPayment_Method> TBPayment_Methods
	{
		get
		{
			return this.GetTable<TBPayment_Method>();
		}
	}
	
	public System.Data.Linq.Table<TBPost> TBPosts
	{
		get
		{
			return this.GetTable<TBPost>();
		}
	}
	
	public System.Data.Linq.Table<TBPostMedia> TBPostMedias
	{
		get
		{
			return this.GetTable<TBPostMedia>();
		}
	}
	
	public System.Data.Linq.Table<TBProduct> TBProducts
	{
		get
		{
			return this.GetTable<TBProduct>();
		}
	}
	
	public System.Data.Linq.Table<TBProduct_Category> TBProduct_Categories
	{
		get
		{
			return this.GetTable<TBProduct_Category>();
		}
	}
	
	public System.Data.Linq.Table<TBProduct_Combination> TBProduct_Combinations
	{
		get
		{
			return this.GetTable<TBProduct_Combination>();
		}
	}
	
	public System.Data.Linq.Table<TBProduct_Combination_Currency> TBProduct_Combination_Currencies
	{
		get
		{
			return this.GetTable<TBProduct_Combination_Currency>();
		}
	}
	
	public System.Data.Linq.Table<TBProduct_Combination_Detail> TBProduct_Combination_Details
	{
		get
		{
			return this.GetTable<TBProduct_Combination_Detail>();
		}
	}
	
	public System.Data.Linq.Table<TBProduct_Combination_Photo> TBProduct_Combination_Photos
	{
		get
		{
			return this.GetTable<TBProduct_Combination_Photo>();
		}
	}
	
	public System.Data.Linq.Table<TBProduct_Currency> TBProduct_Currencies
	{
		get
		{
			return this.GetTable<TBProduct_Currency>();
		}
	}
	
	public System.Data.Linq.Table<TBProduct_Photo> TBProduct_Photos
	{
		get
		{
			return this.GetTable<TBProduct_Photo>();
		}
	}
	
	public System.Data.Linq.Table<TBPromo> TBPromos
	{
		get
		{
			return this.GetTable<TBPromo>();
		}
	}
	
	public System.Data.Linq.Table<TBProvince> TBProvinces
	{
		get
		{
			return this.GetTable<TBProvince>();
		}
	}
	
	public System.Data.Linq.Table<TBRole> TBRoles
	{
		get
		{
			return this.GetTable<TBRole>();
		}
	}
	
	public System.Data.Linq.Table<TBRole_Menu> TBRole_Menus
	{
		get
		{
			return this.GetTable<TBRole_Menu>();
		}
	}
	
	public System.Data.Linq.Table<TBRole_OrderStatus> TBRole_OrderStatus
	{
		get
		{
			return this.GetTable<TBRole_OrderStatus>();
		}
	}
	
	public System.Data.Linq.Table<TBShipping> TBShippings
	{
		get
		{
			return this.GetTable<TBShipping>();
		}
	}
	
	public System.Data.Linq.Table<TBValue> TBValues
	{
		get
		{
			return this.GetTable<TBValue>();
		}
	}
	
	public System.Data.Linq.Table<TBVoucher> TBVouchers
	{
		get
		{
			return this.GetTable<TBVoucher>();
		}
	}
	
	public System.Data.Linq.Table<TBCustomer_Product> TBCustomer_Products
	{
		get
		{
			return this.GetTable<TBCustomer_Product>();
		}
	}
	
	public System.Data.Linq.Table<TBOrder> TBOrders
	{
		get
		{
			return this.GetTable<TBOrder>();
		}
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Value_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Value_GetDetailResult> FUNC_Value_GetDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDValue", DbType="Int")] System.Nullable<int> iDValue)
	{
		return this.CreateMethodCallQuery<FUNC_Value_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDValue);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_GetSizeCombination_ByIDProduct")]
	public ISingleResult<SP_GetSizeCombination_ByIDProductResult> SP_GetSizeCombination_ByIDProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idproduct_param)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idproduct_param);
		return ((ISingleResult<SP_GetSizeCombination_ByIDProductResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_GetSizeCombination_ByIDProductAndIDColor")]
	public ISingleResult<SP_GetSizeCombination_ByIDProductAndIDColorResult> SP_GetSizeCombination_ByIDProductAndIDColor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idproduct_param, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idcolor_param)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idproduct_param, idcolor_param);
		return ((ISingleResult<SP_GetSizeCombination_ByIDProductAndIDColorResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_Customer")]
	public ISingleResult<SP_Insert_CustomerResult> SP_Insert_Customer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCUstomer_group, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string firtsName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> birthday, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> isSubscribe, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateInsert, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dateLastUpdate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCUstomer_group, firtsName, lastName, gender, email, password, phoneNumber, birthday, isSubscribe, dateInsert, dateLastUpdate);
		return ((ISingleResult<SP_Insert_CustomerResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Insert_LogStock")]
	public int SP_Insert_LogStock([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Text")] string desc, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idEmployee, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCombination, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string productName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string type, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qty, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="InsertDate", DbType="DateTime")] System.Nullable<System.DateTime> insertDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), desc, idEmployee, idCombination, productName, username, type, qty, insertDate);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_RegisterGuestCustomer")]
	public ISingleResult<SP_RegisterGuestCustomerResult> SP_RegisterGuestCustomer([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string phoneNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> birthday, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCountry, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idProvince, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCity, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idDistrict, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Text")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(10)")] string postalCode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Text")] string additionalInfo)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), firstName, lastName, gender, email, password, phoneNumber, birthday, idCountry, idProvince, idCity, idDistrict, address, postalCode, additionalInfo);
		return ((ISingleResult<SP_RegisterGuestCustomerResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Report_GetCategoryDistribution")]
	public ISingleResult<SP_Report_GetCategoryDistributionResult> SP_Report_GetCategoryDistribution([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate);
		return ((ISingleResult<SP_Report_GetCategoryDistributionResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Report_GetCityDistribution")]
	public ISingleResult<SP_Report_GetCityDistributionResult> SP_Report_GetCityDistribution([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate);
		return ((ISingleResult<SP_Report_GetCityDistributionResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Report_GetManufacturerDistribution")]
	public ISingleResult<SP_Report_GetManufacturerDistributionResult> SP_Report_GetManufacturerDistribution([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate);
		return ((ISingleResult<SP_Report_GetManufacturerDistributionResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Report_GetProvinceDistribution")]
	public ISingleResult<SP_Report_GetProvinceDistributionResult> SP_Report_GetProvinceDistribution([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> endDate)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate);
		return ((ISingleResult<SP_Report_GetProvinceDistributionResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Stats_GetBestCategories")]
	public ISingleResult<SP_Stats_GetBestCategoriesResult> SP_Stats_GetBestCategories()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<SP_Stats_GetBestCategoriesResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Stats_GetBestCustomer")]
	public ISingleResult<SP_Stats_GetBestCustomerResult> SP_Stats_GetBestCustomer()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<SP_Stats_GetBestCustomerResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Stats_GetBestManufacturer")]
	public ISingleResult<SP_Stats_GetBestManufacturerResult> SP_Stats_GetBestManufacturer()
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
		return ((ISingleResult<SP_Stats_GetBestManufacturerResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_Update_Qty")]
	public int SP_Update_Qty([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string refCombination, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> qty)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), refCombination, qty);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Attribute_GetAll", IsComposable=true)]
	public IQueryable<FUNC_Attribute_GetAllResult> FUNC_Attribute_GetAll()
	{
		return this.CreateMethodCallQuery<FUNC_Attribute_GetAllResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Attribute_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Attribute_GetDetailResult> FUNC_Attribute_GetDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDAttribute", DbType="Int")] System.Nullable<int> iDAttribute)
	{
		return this.CreateMethodCallQuery<FUNC_Attribute_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDAttribute);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Category_GetAll", IsComposable=true)]
	public IQueryable<FUNC_Category_GetAllResult> FUNC_Category_GetAll()
	{
		return this.CreateMethodCallQuery<FUNC_Category_GetAllResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Category_GetData_ByIDCategoryParent", IsComposable=true)]
	public IQueryable<FUNC_Category_GetData_ByIDCategoryParentResult> FUNC_Category_GetData_ByIDCategoryParent([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCategoryParent", DbType="Int")] System.Nullable<int> iDCategoryParent)
	{
		return this.CreateMethodCallQuery<FUNC_Category_GetData_ByIDCategoryParentResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCategoryParent);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Category_GetData_ByIDCategoryParentNull", IsComposable=true)]
	public IQueryable<FUNC_Category_GetData_ByIDCategoryParentNullResult> FUNC_Category_GetData_ByIDCategoryParentNull()
	{
		return this.CreateMethodCallQuery<FUNC_Category_GetData_ByIDCategoryParentNullResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Category_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Category_GetDetailResult> FUNC_Category_GetDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCategory", DbType="Int")] System.Nullable<int> iDCategory)
	{
		return this.CreateMethodCallQuery<FUNC_Category_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCategory);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_GetColor_ByIDProduct", IsComposable=true)]
	public IQueryable<FUNC_GetColor_ByIDProductResult> FUNC_GetColor_ByIDProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idProduct)
	{
		return this.CreateMethodCallQuery<FUNC_GetColor_ByIDProductResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProduct);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_GetSize_ByIDProductAndIDColor", IsComposable=true)]
	public IQueryable<FUNC_GetSize_ByIDProductAndIDColorResult> FUNC_GetSize_ByIDProductAndIDColor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idProduct, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idColor)
	{
		return this.CreateMethodCallQuery<FUNC_GetSize_ByIDProductAndIDColorResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProduct, idColor);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Manufacturer_GetAll", IsComposable=true)]
	public IQueryable<FUNC_Manufacturer_GetAllResult> FUNC_Manufacturer_GetAll()
	{
		return this.CreateMethodCallQuery<FUNC_Manufacturer_GetAllResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Manufacturer_GetData_ByActive", IsComposable=true)]
	public IQueryable<FUNC_Manufacturer_GetData_ByActiveResult> FUNC_Manufacturer_GetData_ByActive([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Active", DbType="Bit")] System.Nullable<bool> active)
	{
		return this.CreateMethodCallQuery<FUNC_Manufacturer_GetData_ByActiveResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), active);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Manufacturer_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Manufacturer_GetDetailResult> FUNC_Manufacturer_GetDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDManufacturer", DbType="Int")] System.Nullable<int> iDManufacturer)
	{
		return this.CreateMethodCallQuery<FUNC_Manufacturer_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDManufacturer);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Page_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Page_GetDetailResult> FUNC_Page_GetDetail()
	{
		return this.CreateMethodCallQuery<FUNC_Page_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Page_GetDetail_Information", IsComposable=true)]
	public IQueryable<FUNC_Page_GetDetail_InformationResult> FUNC_Page_GetDetail_Information([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDPage", DbType="Int")] System.Nullable<int> iDPage)
	{
		return this.CreateMethodCallQuery<FUNC_Page_GetDetail_InformationResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDPage);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Page_Photo_GetData_ByIDPage", IsComposable=true)]
	public IQueryable<FUNC_Page_Photo_GetData_ByIDPageResult> FUNC_Page_Photo_GetData_ByIDPage([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDPage", DbType="Int")] System.Nullable<int> iDPage)
	{
		return this.CreateMethodCallQuery<FUNC_Page_Photo_GetData_ByIDPageResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDPage);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Page_Photo_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Page_Photo_GetDetailResult> FUNC_Page_Photo_GetDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDPageMedia", DbType="Int")] System.Nullable<int> iDPageMedia)
	{
		return this.CreateMethodCallQuery<FUNC_Page_Photo_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDPageMedia);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Post_GetDetail_Information", IsComposable=true)]
	public IQueryable<FUNC_Post_GetDetail_InformationResult> FUNC_Post_GetDetail_Information([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDPost", DbType="Int")] System.Nullable<int> iDPost)
	{
		return this.CreateMethodCallQuery<FUNC_Post_GetDetail_InformationResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDPost);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Post_Photo_GetData_ByIDPost", IsComposable=true)]
	public IQueryable<FUNC_Post_Photo_GetData_ByIDPostResult> FUNC_Post_Photo_GetData_ByIDPost([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDPost", DbType="Int")] System.Nullable<int> iDPost)
	{
		return this.CreateMethodCallQuery<FUNC_Post_Photo_GetData_ByIDPostResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDPost);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Post_Photo_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Post_Photo_GetDetailResult> FUNC_Post_Photo_GetDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDPostMedia", DbType="Int")] System.Nullable<int> iDPostMedia)
	{
		return this.CreateMethodCallQuery<FUNC_Post_Photo_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDPostMedia);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Category_GetAll", IsComposable=true)]
	public IQueryable<FUNC_Product_Category_GetAllResult> FUNC_Product_Category_GetAll()
	{
		return this.CreateMethodCallQuery<FUNC_Product_Category_GetAllResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Category_GetData_ByIDProduct", IsComposable=true)]
	public IQueryable<FUNC_Product_Category_GetData_ByIDProductResult> FUNC_Product_Category_GetData_ByIDProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDProduct", DbType="Int")] System.Nullable<int> iDProduct)
	{
		return this.CreateMethodCallQuery<FUNC_Product_Category_GetData_ByIDProductResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDProduct);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Category_GetData_Default", IsComposable=true)]
	public IQueryable<FUNC_Product_Category_GetData_DefaultResult> FUNC_Product_Category_GetData_Default([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDProduct", DbType="Int")] System.Nullable<int> iDProduct)
	{
		return this.CreateMethodCallQuery<FUNC_Product_Category_GetData_DefaultResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDProduct);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Category_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Product_Category_GetDetailResult> FUNC_Product_Category_GetDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDProduct_Category", DbType="Int")] System.Nullable<int> iDProduct_Category)
	{
		return this.CreateMethodCallQuery<FUNC_Product_Category_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDProduct_Category);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Combination_Getdata_ByIDProduct", IsComposable=true)]
	public IQueryable<FUNC_Product_Combination_Getdata_ByIDProductResult> FUNC_Product_Combination_Getdata_ByIDProduct([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idProduct)
	{
		return this.CreateMethodCallQuery<FUNC_Product_Combination_Getdata_ByIDProductResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idProduct);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Combination_GetDetail_ByIDCombination", IsComposable=true)]
	public IQueryable<FUNC_Product_Combination_GetDetail_ByIDCombinationResult> FUNC_Product_Combination_GetDetail_ByIDCombination([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> idCombination)
	{
		return this.CreateMethodCallQuery<FUNC_Product_Combination_GetDetail_ByIDCombinationResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), idCombination);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Combination_Photo_GetData_ByIDProduct_Combination", IsComposable=true)]
	public IQueryable<FUNC_Product_Combination_Photo_GetData_ByIDProduct_CombinationResult> FUNC_Product_Combination_Photo_GetData_ByIDProduct_Combination([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDProduct_Combination", DbType="Int")] System.Nullable<int> iDProduct_Combination)
	{
		return this.CreateMethodCallQuery<FUNC_Product_Combination_Photo_GetData_ByIDProduct_CombinationResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDProduct_Combination);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetAll", IsComposable=true)]
	public IQueryable<FUNC_Product_GetAllResult> FUNC_Product_GetAll()
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetAllResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetAll_ByIDCategory", IsComposable=true)]
	public IQueryable<FUNC_Product_GetAll_ByIDCategoryResult> FUNC_Product_GetAll_ByIDCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCategory", DbType="Int")] System.Nullable<int> iDCategory)
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetAll_ByIDCategoryResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCategory);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetAll_ByIDCategory_And_PriceRange", IsComposable=true)]
	public IQueryable<FUNC_Product_GetAll_ByIDCategory_And_PriceRangeResult> FUNC_Product_GetAll_ByIDCategory_And_PriceRange([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCategory", DbType="Int")] System.Nullable<int> iDCategory, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MinPrice", DbType="Decimal(18,0)")] System.Nullable<decimal> minPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxPrice", DbType="Decimal(18,0)")] System.Nullable<decimal> maxPrice)
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetAll_ByIDCategory_And_PriceRangeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDCategory, minPrice, maxPrice);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetAll_ByIDValue", IsComposable=true)]
	public IQueryable<FUNC_Product_GetAll_ByIDValueResult> FUNC_Product_GetAll_ByIDValue([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDValue", DbType="Int")] System.Nullable<int> iDValue)
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetAll_ByIDValueResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDValue);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetAll_ByIDValue_And_IDCategory", IsComposable=true)]
	public IQueryable<FUNC_Product_GetAll_ByIDValue_And_IDCategoryResult> FUNC_Product_GetAll_ByIDValue_And_IDCategory([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDValue", DbType="Int")] System.Nullable<int> iDValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCategory", DbType="Int")] System.Nullable<int> iDCategory)
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetAll_ByIDValue_And_IDCategoryResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDValue, iDCategory);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetAll_ByIDValue_And_IDCategory_And_PriceRange", IsComposable=true)]
	public IQueryable<FUNC_Product_GetAll_ByIDValue_And_IDCategory_And_PriceRangeResult> FUNC_Product_GetAll_ByIDValue_And_IDCategory_And_PriceRange([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDValue", DbType="Int")] System.Nullable<int> iDValue, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDCategory", DbType="Int")] System.Nullable<int> iDCategory, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MinPrice", DbType="Decimal(18,0)")] System.Nullable<decimal> minPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MaxPrice", DbType="Decimal(18,0)")] System.Nullable<decimal> maxPrice)
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetAll_ByIDValue_And_IDCategory_And_PriceRangeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDValue, iDCategory, minPrice, maxPrice);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetAll_Currency", IsComposable=true)]
	public IQueryable<FUNC_Product_GetAll_CurrencyResult> FUNC_Product_GetAll_Currency([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> currencyID)
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetAll_CurrencyResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), currencyID);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetAll_Information", IsComposable=true)]
	public IQueryable<FUNC_Product_GetAll_InformationResult> FUNC_Product_GetAll_Information()
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetAll_InformationResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Product_GetDetailResult> FUNC_Product_GetDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDProduct", DbType="Int")] System.Nullable<int> iDProduct)
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDProduct);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetDetail_Currency", IsComposable=true)]
	public IQueryable<FUNC_Product_GetDetail_CurrencyResult> FUNC_Product_GetDetail_Currency([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> productID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> currencyID)
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetDetail_CurrencyResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), productID, currencyID);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetDetail_Information", IsComposable=true)]
	public IQueryable<FUNC_Product_GetDetail_InformationResult> FUNC_Product_GetDetail_Information([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDProduct", DbType="Int")] System.Nullable<int> iDProduct)
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetDetail_InformationResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDProduct);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_GetTable", IsComposable=true)]
	public IQueryable<FUNC_Product_GetTableResult> FUNC_Product_GetTable()
	{
		return this.CreateMethodCallQuery<FUNC_Product_GetTableResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Photo_GetAll", IsComposable=true)]
	public IQueryable<FUNC_Product_Photo_GetAllResult> FUNC_Product_Photo_GetAll()
	{
		return this.CreateMethodCallQuery<FUNC_Product_Photo_GetAllResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Photo_GetData_ByIDProduct", IsComposable=true)]
	public IQueryable<FUNC_Product_Photo_GetData_ByIDProductResult> FUNC_Product_Photo_GetData_ByIDProduct([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDProduct", DbType="Int")] System.Nullable<int> iDProduct)
	{
		return this.CreateMethodCallQuery<FUNC_Product_Photo_GetData_ByIDProductResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDProduct);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Product_Photo_GetDetail", IsComposable=true)]
	public IQueryable<FUNC_Product_Photo_GetDetailResult> FUNC_Product_Photo_GetDetail([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDProduct_Photo", DbType="Int")] System.Nullable<int> iDProduct_Photo)
	{
		return this.CreateMethodCallQuery<FUNC_Product_Photo_GetDetailResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDProduct_Photo);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Role_Menu_GetData_ByIDRole", IsComposable=true)]
	public IQueryable<FUNC_Role_Menu_GetData_ByIDRoleResult> FUNC_Role_Menu_GetData_ByIDRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDRole", DbType="Int")] System.Nullable<int> iDRole)
	{
		return this.CreateMethodCallQuery<FUNC_Role_Menu_GetData_ByIDRoleResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDRole);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Role_OrderStatus_GetData_ByIDRole", IsComposable=true)]
	public IQueryable<FUNC_Role_OrderStatus_GetData_ByIDRoleResult> FUNC_Role_OrderStatus_GetData_ByIDRole([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDRole", DbType="Int")] System.Nullable<int> iDRole)
	{
		return this.CreateMethodCallQuery<FUNC_Role_OrderStatus_GetData_ByIDRoleResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDRole);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Value_GetAll", IsComposable=true)]
	public IQueryable<FUNC_Value_GetAllResult> FUNC_Value_GetAll()
	{
		return this.CreateMethodCallQuery<FUNC_Value_GetAllResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FUNC_Value_GetData_ByIDAttribute", IsComposable=true)]
	public IQueryable<FUNC_Value_GetData_ByIDAttributeResult> FUNC_Value_GetData_ByIDAttribute([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IDAttribute", DbType="Int")] System.Nullable<int> iDAttribute)
	{
		return this.CreateMethodCallQuery<FUNC_Value_GetData_ByIDAttributeResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), iDAttribute);
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBAddress")]
public partial class TBAddress : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDAddress;
	
	private int _IDCustomer;
	
	private int _IDCountry;
	
	private int _IDProvince;
	
	private int _IDCity;
	
	private int _IDDistrict;
	
	private string _PeopleName;
	
	private string _Name;
	
	private string _Address;
	
	private string _Phone;
	
	private string _PostalCode;
	
	private bool _Active;
	
	private string _AdditionalInformation;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBOrder> _TBOrders;
	
	private EntitySet<TBOrder> _TBOrders1;
	
	private EntityRef<TBCity> _TBCity;
	
	private EntityRef<TBCountry> _TBCountry;
	
	private EntityRef<TBCustomer> _TBCustomer;
	
	private EntityRef<TBDistrict> _TBDistrict;
	
	private EntityRef<TBProvince> _TBProvince;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAddressChanging(int value);
    partial void OnIDAddressChanged();
    partial void OnIDCustomerChanging(int value);
    partial void OnIDCustomerChanged();
    partial void OnIDCountryChanging(int value);
    partial void OnIDCountryChanged();
    partial void OnIDProvinceChanging(int value);
    partial void OnIDProvinceChanged();
    partial void OnIDCityChanging(int value);
    partial void OnIDCityChanged();
    partial void OnIDDistrictChanging(int value);
    partial void OnIDDistrictChanged();
    partial void OnPeopleNameChanging(string value);
    partial void OnPeopleNameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnAdditionalInformationChanging(string value);
    partial void OnAdditionalInformationChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBAddress()
	{
		this._TBOrders = new EntitySet<TBOrder>(new Action<TBOrder>(this.attach_TBOrders), new Action<TBOrder>(this.detach_TBOrders));
		this._TBOrders1 = new EntitySet<TBOrder>(new Action<TBOrder>(this.attach_TBOrders1), new Action<TBOrder>(this.detach_TBOrders1));
		this._TBCity = default(EntityRef<TBCity>);
		this._TBCountry = default(EntityRef<TBCountry>);
		this._TBCustomer = default(EntityRef<TBCustomer>);
		this._TBDistrict = default(EntityRef<TBDistrict>);
		this._TBProvince = default(EntityRef<TBProvince>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAddress", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDAddress
	{
		get
		{
			return this._IDAddress;
		}
		set
		{
			if ((this._IDAddress != value))
			{
				this.OnIDAddressChanging(value);
				this.SendPropertyChanging();
				this._IDAddress = value;
				this.SendPropertyChanged("IDAddress");
				this.OnIDAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer", DbType="Int NOT NULL")]
	public int IDCustomer
	{
		get
		{
			return this._IDCustomer;
		}
		set
		{
			if ((this._IDCustomer != value))
			{
				if (this._TBCustomer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCustomerChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer = value;
				this.SendPropertyChanged("IDCustomer");
				this.OnIDCustomerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCountry", DbType="Int NOT NULL")]
	public int IDCountry
	{
		get
		{
			return this._IDCountry;
		}
		set
		{
			if ((this._IDCountry != value))
			{
				if (this._TBCountry.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCountryChanging(value);
				this.SendPropertyChanging();
				this._IDCountry = value;
				this.SendPropertyChanged("IDCountry");
				this.OnIDCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProvince", DbType="Int NOT NULL")]
	public int IDProvince
	{
		get
		{
			return this._IDProvince;
		}
		set
		{
			if ((this._IDProvince != value))
			{
				if (this._TBProvince.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProvinceChanging(value);
				this.SendPropertyChanging();
				this._IDProvince = value;
				this.SendPropertyChanged("IDProvince");
				this.OnIDProvinceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCity", DbType="Int NOT NULL")]
	public int IDCity
	{
		get
		{
			return this._IDCity;
		}
		set
		{
			if ((this._IDCity != value))
			{
				if (this._TBCity.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCityChanging(value);
				this.SendPropertyChanging();
				this._IDCity = value;
				this.SendPropertyChanged("IDCity");
				this.OnIDCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDistrict", DbType="Int NOT NULL")]
	public int IDDistrict
	{
		get
		{
			return this._IDDistrict;
		}
		set
		{
			if ((this._IDDistrict != value))
			{
				if (this._TBDistrict.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDDistrictChanging(value);
				this.SendPropertyChanging();
				this._IDDistrict = value;
				this.SendPropertyChanged("IDDistrict");
				this.OnIDDistrictChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PeopleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string PeopleName
	{
		get
		{
			return this._PeopleName;
		}
		set
		{
			if ((this._PeopleName != value))
			{
				this.OnPeopleNameChanging(value);
				this.SendPropertyChanging();
				this._PeopleName = value;
				this.SendPropertyChanged("PeopleName");
				this.OnPeopleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string PostalCode
	{
		get
		{
			return this._PostalCode;
		}
		set
		{
			if ((this._PostalCode != value))
			{
				this.OnPostalCodeChanging(value);
				this.SendPropertyChanging();
				this._PostalCode = value;
				this.SendPropertyChanged("PostalCode");
				this.OnPostalCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalInformation", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string AdditionalInformation
	{
		get
		{
			return this._AdditionalInformation;
		}
		set
		{
			if ((this._AdditionalInformation != value))
			{
				this.OnAdditionalInformationChanging(value);
				this.SendPropertyChanging();
				this._AdditionalInformation = value;
				this.SendPropertyChanged("AdditionalInformation");
				this.OnAdditionalInformationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBAddress_TBOrder", Storage="_TBOrders", ThisKey="IDAddress", OtherKey="IDDeliveryAddress")]
	public EntitySet<TBOrder> TBOrders
	{
		get
		{
			return this._TBOrders;
		}
		set
		{
			this._TBOrders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBAddress_TBOrder1", Storage="_TBOrders1", ThisKey="IDAddress", OtherKey="IDBillingAddress")]
	public EntitySet<TBOrder> TBOrders1
	{
		get
		{
			return this._TBOrders1;
		}
		set
		{
			this._TBOrders1.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCity_TBAddress", Storage="_TBCity", ThisKey="IDCity", OtherKey="IDCity", IsForeignKey=true)]
	public TBCity TBCity
	{
		get
		{
			return this._TBCity.Entity;
		}
		set
		{
			TBCity previousValue = this._TBCity.Entity;
			if (((previousValue != value) 
						|| (this._TBCity.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCity.Entity = null;
					previousValue.TBAddresses.Remove(this);
				}
				this._TBCity.Entity = value;
				if ((value != null))
				{
					value.TBAddresses.Add(this);
					this._IDCity = value.IDCity;
				}
				else
				{
					this._IDCity = default(int);
				}
				this.SendPropertyChanged("TBCity");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCountry_TBAddress", Storage="_TBCountry", ThisKey="IDCountry", OtherKey="IDCountry", IsForeignKey=true)]
	public TBCountry TBCountry
	{
		get
		{
			return this._TBCountry.Entity;
		}
		set
		{
			TBCountry previousValue = this._TBCountry.Entity;
			if (((previousValue != value) 
						|| (this._TBCountry.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCountry.Entity = null;
					previousValue.TBAddresses.Remove(this);
				}
				this._TBCountry.Entity = value;
				if ((value != null))
				{
					value.TBAddresses.Add(this);
					this._IDCountry = value.IDCountry;
				}
				else
				{
					this._IDCountry = default(int);
				}
				this.SendPropertyChanged("TBCountry");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBAddress", Storage="_TBCustomer", ThisKey="IDCustomer", OtherKey="IDCustomer", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBCustomer TBCustomer
	{
		get
		{
			return this._TBCustomer.Entity;
		}
		set
		{
			TBCustomer previousValue = this._TBCustomer.Entity;
			if (((previousValue != value) 
						|| (this._TBCustomer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCustomer.Entity = null;
					previousValue.TBAddresses.Remove(this);
				}
				this._TBCustomer.Entity = value;
				if ((value != null))
				{
					value.TBAddresses.Add(this);
					this._IDCustomer = value.IDCustomer;
				}
				else
				{
					this._IDCustomer = default(int);
				}
				this.SendPropertyChanged("TBCustomer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBDistrict_TBAddress", Storage="_TBDistrict", ThisKey="IDDistrict", OtherKey="IDDistrict", IsForeignKey=true)]
	public TBDistrict TBDistrict
	{
		get
		{
			return this._TBDistrict.Entity;
		}
		set
		{
			TBDistrict previousValue = this._TBDistrict.Entity;
			if (((previousValue != value) 
						|| (this._TBDistrict.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBDistrict.Entity = null;
					previousValue.TBAddresses.Remove(this);
				}
				this._TBDistrict.Entity = value;
				if ((value != null))
				{
					value.TBAddresses.Add(this);
					this._IDDistrict = value.IDDistrict;
				}
				else
				{
					this._IDDistrict = default(int);
				}
				this.SendPropertyChanged("TBDistrict");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProvince_TBAddress", Storage="_TBProvince", ThisKey="IDProvince", OtherKey="IDProvince", IsForeignKey=true)]
	public TBProvince TBProvince
	{
		get
		{
			return this._TBProvince.Entity;
		}
		set
		{
			TBProvince previousValue = this._TBProvince.Entity;
			if (((previousValue != value) 
						|| (this._TBProvince.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProvince.Entity = null;
					previousValue.TBAddresses.Remove(this);
				}
				this._TBProvince.Entity = value;
				if ((value != null))
				{
					value.TBAddresses.Add(this);
					this._IDProvince = value.IDProvince;
				}
				else
				{
					this._IDProvince = default(int);
				}
				this.SendPropertyChanged("TBProvince");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBAddress = this;
	}
	
	private void detach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBAddress = null;
	}
	
	private void attach_TBOrders1(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBAddress1 = this;
	}
	
	private void detach_TBOrders1(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBAddress1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBWishlist")]
public partial class TBWishlist : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDWishlist;
	
	private int _IDProduct_Combination;
	
	private System.Nullable<int> _IDCustomer;
	
	private string _Email;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntityRef<TBCustomer> _TBCustomer;
	
	private EntityRef<TBProduct_Combination> _TBProduct_Combination;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDWishlistChanging(int value);
    partial void OnIDWishlistChanged();
    partial void OnIDProduct_CombinationChanging(int value);
    partial void OnIDProduct_CombinationChanged();
    partial void OnIDCustomerChanging(System.Nullable<int> value);
    partial void OnIDCustomerChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBWishlist()
	{
		this._TBCustomer = default(EntityRef<TBCustomer>);
		this._TBProduct_Combination = default(EntityRef<TBProduct_Combination>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDWishlist", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDWishlist
	{
		get
		{
			return this._IDWishlist;
		}
		set
		{
			if ((this._IDWishlist != value))
			{
				this.OnIDWishlistChanging(value);
				this.SendPropertyChanging();
				this._IDWishlist = value;
				this.SendPropertyChanged("IDWishlist");
				this.OnIDWishlistChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int NOT NULL")]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				if (this._TBProduct_Combination.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProduct_CombinationChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination = value;
				this.SendPropertyChanged("IDProduct_Combination");
				this.OnIDProduct_CombinationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer", DbType="Int")]
	public System.Nullable<int> IDCustomer
	{
		get
		{
			return this._IDCustomer;
		}
		set
		{
			if ((this._IDCustomer != value))
			{
				if (this._TBCustomer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCustomerChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer = value;
				this.SendPropertyChanged("IDCustomer");
				this.OnIDCustomerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBWishlist", Storage="_TBCustomer", ThisKey="IDCustomer", OtherKey="IDCustomer", IsForeignKey=true)]
	public TBCustomer TBCustomer
	{
		get
		{
			return this._TBCustomer.Entity;
		}
		set
		{
			TBCustomer previousValue = this._TBCustomer.Entity;
			if (((previousValue != value) 
						|| (this._TBCustomer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCustomer.Entity = null;
					previousValue.TBWishlists.Remove(this);
				}
				this._TBCustomer.Entity = value;
				if ((value != null))
				{
					value.TBWishlists.Add(this);
					this._IDCustomer = value.IDCustomer;
				}
				else
				{
					this._IDCustomer = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBCustomer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBWishlist", Storage="_TBProduct_Combination", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination", IsForeignKey=true)]
	public TBProduct_Combination TBProduct_Combination
	{
		get
		{
			return this._TBProduct_Combination.Entity;
		}
		set
		{
			TBProduct_Combination previousValue = this._TBProduct_Combination.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct_Combination.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct_Combination.Entity = null;
					previousValue.TBWishlists.Remove(this);
				}
				this._TBProduct_Combination.Entity = value;
				if ((value != null))
				{
					value.TBWishlists.Add(this);
					this._IDProduct_Combination = value.IDProduct_Combination;
				}
				else
				{
					this._IDProduct_Combination = default(int);
				}
				this.SendPropertyChanged("TBProduct_Combination");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBAttribute")]
public partial class TBAttribute : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDAttribute;
	
	private string _Name;
	
	private bool _IsColor;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBValue> _TBValues;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAttributeChanging(int value);
    partial void OnIDAttributeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsColorChanging(bool value);
    partial void OnIsColorChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBAttribute()
	{
		this._TBValues = new EntitySet<TBValue>(new Action<TBValue>(this.attach_TBValues), new Action<TBValue>(this.detach_TBValues));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAttribute", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDAttribute
	{
		get
		{
			return this._IDAttribute;
		}
		set
		{
			if ((this._IDAttribute != value))
			{
				this.OnIDAttributeChanging(value);
				this.SendPropertyChanging();
				this._IDAttribute = value;
				this.SendPropertyChanged("IDAttribute");
				this.OnIDAttributeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsColor", DbType="Bit NOT NULL")]
	public bool IsColor
	{
		get
		{
			return this._IsColor;
		}
		set
		{
			if ((this._IsColor != value))
			{
				this.OnIsColorChanging(value);
				this.SendPropertyChanging();
				this._IsColor = value;
				this.SendPropertyChanged("IsColor");
				this.OnIsColorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBAttribute_TBValue", Storage="_TBValues", ThisKey="IDAttribute", OtherKey="IDAttribute")]
	public EntitySet<TBValue> TBValues
	{
		get
		{
			return this._TBValues;
		}
		set
		{
			this._TBValues.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBValues(TBValue entity)
	{
		this.SendPropertyChanging();
		entity.TBAttribute = this;
	}
	
	private void detach_TBValues(TBValue entity)
	{
		this.SendPropertyChanging();
		entity.TBAttribute = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBCarrier")]
public partial class TBCarrier : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDCarrier;
	
	private string _Name;
	
	private string _Image;
	
	private string _Information;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBShipping> _TBShippings;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCarrierChanging(int value);
    partial void OnIDCarrierChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnInformationChanging(string value);
    partial void OnInformationChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBCarrier()
	{
		this._TBShippings = new EntitySet<TBShipping>(new Action<TBShipping>(this.attach_TBShippings), new Action<TBShipping>(this.detach_TBShippings));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCarrier", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDCarrier
	{
		get
		{
			return this._IDCarrier;
		}
		set
		{
			if ((this._IDCarrier != value))
			{
				this.OnIDCarrierChanging(value);
				this.SendPropertyChanging();
				this._IDCarrier = value;
				this.SendPropertyChanged("IDCarrier");
				this.OnIDCarrierChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(50)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Information", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Information
	{
		get
		{
			return this._Information;
		}
		set
		{
			if ((this._Information != value))
			{
				this.OnInformationChanging(value);
				this.SendPropertyChanging();
				this._Information = value;
				this.SendPropertyChanged("Information");
				this.OnInformationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCarrier_TBShipping", Storage="_TBShippings", ThisKey="IDCarrier", OtherKey="IDCarrier")]
	public EntitySet<TBShipping> TBShippings
	{
		get
		{
			return this._TBShippings;
		}
		set
		{
			this._TBShippings.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBShippings(TBShipping entity)
	{
		this.SendPropertyChanging();
		entity.TBCarrier = this;
	}
	
	private void detach_TBShippings(TBShipping entity)
	{
		this.SendPropertyChanging();
		entity.TBCarrier = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBCategory")]
public partial class TBCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDCategory;
	
	private System.Nullable<int> _IDCategoryParent;
	
	private System.Nullable<int> _IDPromo;
	
	private string _Image;
	
	private string _Name;
	
	private string _Description;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBCategory> _TBCategories;
	
	private EntitySet<TBProduct_Category> _TBProduct_Categories;
	
	private EntityRef<TBCategory> _TBCategory1;
	
	private EntityRef<TBPromo> _TBPromo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCategoryChanging(int value);
    partial void OnIDCategoryChanged();
    partial void OnIDCategoryParentChanging(System.Nullable<int> value);
    partial void OnIDCategoryParentChanged();
    partial void OnIDPromoChanging(System.Nullable<int> value);
    partial void OnIDPromoChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBCategory()
	{
		this._TBCategories = new EntitySet<TBCategory>(new Action<TBCategory>(this.attach_TBCategories), new Action<TBCategory>(this.detach_TBCategories));
		this._TBProduct_Categories = new EntitySet<TBProduct_Category>(new Action<TBProduct_Category>(this.attach_TBProduct_Categories), new Action<TBProduct_Category>(this.detach_TBProduct_Categories));
		this._TBCategory1 = default(EntityRef<TBCategory>);
		this._TBPromo = default(EntityRef<TBPromo>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this.OnIDCategoryChanging(value);
				this.SendPropertyChanging();
				this._IDCategory = value;
				this.SendPropertyChanged("IDCategory");
				this.OnIDCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategoryParent", DbType="Int")]
	public System.Nullable<int> IDCategoryParent
	{
		get
		{
			return this._IDCategoryParent;
		}
		set
		{
			if ((this._IDCategoryParent != value))
			{
				if (this._TBCategory1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCategoryParentChanging(value);
				this.SendPropertyChanging();
				this._IDCategoryParent = value;
				this.SendPropertyChanged("IDCategoryParent");
				this.OnIDCategoryParentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPromo", DbType="Int")]
	public System.Nullable<int> IDPromo
	{
		get
		{
			return this._IDPromo;
		}
		set
		{
			if ((this._IDPromo != value))
			{
				if (this._TBPromo.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDPromoChanging(value);
				this.SendPropertyChanging();
				this._IDPromo = value;
				this.SendPropertyChanged("IDPromo");
				this.OnIDPromoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(20)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCategory_TBCategory", Storage="_TBCategories", ThisKey="IDCategory", OtherKey="IDCategoryParent")]
	public EntitySet<TBCategory> TBCategories
	{
		get
		{
			return this._TBCategories;
		}
		set
		{
			this._TBCategories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCategory_TBProduct_Category", Storage="_TBProduct_Categories", ThisKey="IDCategory", OtherKey="IDCategory")]
	public EntitySet<TBProduct_Category> TBProduct_Categories
	{
		get
		{
			return this._TBProduct_Categories;
		}
		set
		{
			this._TBProduct_Categories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCategory_TBCategory", Storage="_TBCategory1", ThisKey="IDCategoryParent", OtherKey="IDCategory", IsForeignKey=true)]
	public TBCategory TBCategory1
	{
		get
		{
			return this._TBCategory1.Entity;
		}
		set
		{
			TBCategory previousValue = this._TBCategory1.Entity;
			if (((previousValue != value) 
						|| (this._TBCategory1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCategory1.Entity = null;
					previousValue.TBCategories.Remove(this);
				}
				this._TBCategory1.Entity = value;
				if ((value != null))
				{
					value.TBCategories.Add(this);
					this._IDCategoryParent = value.IDCategory;
				}
				else
				{
					this._IDCategoryParent = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBCategory1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPromo_TBCategory", Storage="_TBPromo", ThisKey="IDPromo", OtherKey="IDPromo", IsForeignKey=true)]
	public TBPromo TBPromo
	{
		get
		{
			return this._TBPromo.Entity;
		}
		set
		{
			TBPromo previousValue = this._TBPromo.Entity;
			if (((previousValue != value) 
						|| (this._TBPromo.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBPromo.Entity = null;
					previousValue.TBCategories.Remove(this);
				}
				this._TBPromo.Entity = value;
				if ((value != null))
				{
					value.TBCategories.Add(this);
					this._IDPromo = value.IDPromo;
				}
				else
				{
					this._IDPromo = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBPromo");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBCategories(TBCategory entity)
	{
		this.SendPropertyChanging();
		entity.TBCategory1 = this;
	}
	
	private void detach_TBCategories(TBCategory entity)
	{
		this.SendPropertyChanging();
		entity.TBCategory1 = null;
	}
	
	private void attach_TBProduct_Categories(TBProduct_Category entity)
	{
		this.SendPropertyChanging();
		entity.TBCategory = this;
	}
	
	private void detach_TBProduct_Categories(TBProduct_Category entity)
	{
		this.SendPropertyChanging();
		entity.TBCategory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBCity")]
public partial class TBCity : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDCity;
	
	private int _IDProvince;
	
	private string _Name;
	
	private string _CityType;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBAddress> _TBAddresses;
	
	private EntitySet<TBDistrict> _TBDistricts;
	
	private EntityRef<TBProvince> _TBProvince;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCityChanging(int value);
    partial void OnIDCityChanged();
    partial void OnIDProvinceChanging(int value);
    partial void OnIDProvinceChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCityTypeChanging(string value);
    partial void OnCityTypeChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBCity()
	{
		this._TBAddresses = new EntitySet<TBAddress>(new Action<TBAddress>(this.attach_TBAddresses), new Action<TBAddress>(this.detach_TBAddresses));
		this._TBDistricts = new EntitySet<TBDistrict>(new Action<TBDistrict>(this.attach_TBDistricts), new Action<TBDistrict>(this.detach_TBDistricts));
		this._TBProvince = default(EntityRef<TBProvince>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCity", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDCity
	{
		get
		{
			return this._IDCity;
		}
		set
		{
			if ((this._IDCity != value))
			{
				this.OnIDCityChanging(value);
				this.SendPropertyChanging();
				this._IDCity = value;
				this.SendPropertyChanged("IDCity");
				this.OnIDCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProvince", DbType="Int NOT NULL")]
	public int IDProvince
	{
		get
		{
			return this._IDProvince;
		}
		set
		{
			if ((this._IDProvince != value))
			{
				if (this._TBProvince.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProvinceChanging(value);
				this.SendPropertyChanging();
				this._IDProvince = value;
				this.SendPropertyChanged("IDProvince");
				this.OnIDProvinceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string CityType
	{
		get
		{
			return this._CityType;
		}
		set
		{
			if ((this._CityType != value))
			{
				this.OnCityTypeChanging(value);
				this.SendPropertyChanging();
				this._CityType = value;
				this.SendPropertyChanged("CityType");
				this.OnCityTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCity_TBAddress", Storage="_TBAddresses", ThisKey="IDCity", OtherKey="IDCity")]
	public EntitySet<TBAddress> TBAddresses
	{
		get
		{
			return this._TBAddresses;
		}
		set
		{
			this._TBAddresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCity_TBDistrict", Storage="_TBDistricts", ThisKey="IDCity", OtherKey="IDCity")]
	public EntitySet<TBDistrict> TBDistricts
	{
		get
		{
			return this._TBDistricts;
		}
		set
		{
			this._TBDistricts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProvince_TBCity", Storage="_TBProvince", ThisKey="IDProvince", OtherKey="IDProvince", IsForeignKey=true)]
	public TBProvince TBProvince
	{
		get
		{
			return this._TBProvince.Entity;
		}
		set
		{
			TBProvince previousValue = this._TBProvince.Entity;
			if (((previousValue != value) 
						|| (this._TBProvince.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProvince.Entity = null;
					previousValue.TBCities.Remove(this);
				}
				this._TBProvince.Entity = value;
				if ((value != null))
				{
					value.TBCities.Add(this);
					this._IDProvince = value.IDProvince;
				}
				else
				{
					this._IDProvince = default(int);
				}
				this.SendPropertyChanged("TBProvince");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBCity = this;
	}
	
	private void detach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBCity = null;
	}
	
	private void attach_TBDistricts(TBDistrict entity)
	{
		this.SendPropertyChanging();
		entity.TBCity = this;
	}
	
	private void detach_TBDistricts(TBDistrict entity)
	{
		this.SendPropertyChanging();
		entity.TBCity = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBConfiguration")]
public partial class TBConfiguration : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDConfiguration;
	
	private string _Name;
	
	private string _Value;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDConfigurationChanging(int value);
    partial void OnIDConfigurationChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBConfiguration()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDConfiguration", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDConfiguration
	{
		get
		{
			return this._IDConfiguration;
		}
		set
		{
			if ((this._IDConfiguration != value))
			{
				this.OnIDConfigurationChanging(value);
				this.SendPropertyChanging();
				this._IDConfiguration = value;
				this.SendPropertyChanged("IDConfiguration");
				this.OnIDConfigurationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBCountry")]
public partial class TBCountry : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDCountry;
	
	private string _Name;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBAddress> _TBAddresses;
	
	private EntitySet<TBProvince> _TBProvinces;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCountryChanging(int value);
    partial void OnIDCountryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBCountry()
	{
		this._TBAddresses = new EntitySet<TBAddress>(new Action<TBAddress>(this.attach_TBAddresses), new Action<TBAddress>(this.detach_TBAddresses));
		this._TBProvinces = new EntitySet<TBProvince>(new Action<TBProvince>(this.attach_TBProvinces), new Action<TBProvince>(this.detach_TBProvinces));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCountry", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDCountry
	{
		get
		{
			return this._IDCountry;
		}
		set
		{
			if ((this._IDCountry != value))
			{
				this.OnIDCountryChanging(value);
				this.SendPropertyChanging();
				this._IDCountry = value;
				this.SendPropertyChanged("IDCountry");
				this.OnIDCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCountry_TBAddress", Storage="_TBAddresses", ThisKey="IDCountry", OtherKey="IDCountry")]
	public EntitySet<TBAddress> TBAddresses
	{
		get
		{
			return this._TBAddresses;
		}
		set
		{
			this._TBAddresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCountry_TBProvince", Storage="_TBProvinces", ThisKey="IDCountry", OtherKey="IDCountry")]
	public EntitySet<TBProvince> TBProvinces
	{
		get
		{
			return this._TBProvinces;
		}
		set
		{
			this._TBProvinces.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBCountry = this;
	}
	
	private void detach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBCountry = null;
	}
	
	private void attach_TBProvinces(TBProvince entity)
	{
		this.SendPropertyChanging();
		entity.TBCountry = this;
	}
	
	private void detach_TBProvinces(TBProvince entity)
	{
		this.SendPropertyChanging();
		entity.TBCountry = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBCurrency")]
public partial class TBCurrency : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDCurrency;
	
	private string _Name;
	
	private string _ISOCode;
	
	private string _ISOCodeNumeric;
	
	private string _Sign;
	
	private System.Nullable<bool> _blank;
	
	private string _Format;
	
	private System.Nullable<bool> _Decimal;
	
	private decimal _ConversionRate;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private bool _Active;
	
	private bool _IsDefault;
	
	private EntitySet<TBProduct_Currency> _TBProduct_Currencies;
	
	private EntitySet<TBOrder> _TBOrders;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCurrencyChanging(int value);
    partial void OnIDCurrencyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnISOCodeChanging(string value);
    partial void OnISOCodeChanged();
    partial void OnISOCodeNumericChanging(string value);
    partial void OnISOCodeNumericChanged();
    partial void OnSignChanging(string value);
    partial void OnSignChanged();
    partial void OnblankChanging(System.Nullable<bool> value);
    partial void OnblankChanged();
    partial void OnFormatChanging(string value);
    partial void OnFormatChanged();
    partial void OnDecimalChanging(System.Nullable<bool> value);
    partial void OnDecimalChanged();
    partial void OnConversionRateChanging(decimal value);
    partial void OnConversionRateChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    #endregion
	
	public TBCurrency()
	{
		this._TBProduct_Currencies = new EntitySet<TBProduct_Currency>(new Action<TBProduct_Currency>(this.attach_TBProduct_Currencies), new Action<TBProduct_Currency>(this.detach_TBProduct_Currencies));
		this._TBOrders = new EntitySet<TBOrder>(new Action<TBOrder>(this.attach_TBOrders), new Action<TBOrder>(this.detach_TBOrders));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCurrency", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDCurrency
	{
		get
		{
			return this._IDCurrency;
		}
		set
		{
			if ((this._IDCurrency != value))
			{
				this.OnIDCurrencyChanging(value);
				this.SendPropertyChanging();
				this._IDCurrency = value;
				this.SendPropertyChanged("IDCurrency");
				this.OnIDCurrencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISOCode", DbType="NVarChar(3)")]
	public string ISOCode
	{
		get
		{
			return this._ISOCode;
		}
		set
		{
			if ((this._ISOCode != value))
			{
				this.OnISOCodeChanging(value);
				this.SendPropertyChanging();
				this._ISOCode = value;
				this.SendPropertyChanged("ISOCode");
				this.OnISOCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISOCodeNumeric", DbType="NVarChar(3)")]
	public string ISOCodeNumeric
	{
		get
		{
			return this._ISOCodeNumeric;
		}
		set
		{
			if ((this._ISOCodeNumeric != value))
			{
				this.OnISOCodeNumericChanging(value);
				this.SendPropertyChanging();
				this._ISOCodeNumeric = value;
				this.SendPropertyChanged("ISOCodeNumeric");
				this.OnISOCodeNumericChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign", DbType="NVarChar(8)")]
	public string Sign
	{
		get
		{
			return this._Sign;
		}
		set
		{
			if ((this._Sign != value))
			{
				this.OnSignChanging(value);
				this.SendPropertyChanging();
				this._Sign = value;
				this.SendPropertyChanged("Sign");
				this.OnSignChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blank", DbType="Bit")]
	public System.Nullable<bool> blank
	{
		get
		{
			return this._blank;
		}
		set
		{
			if ((this._blank != value))
			{
				this.OnblankChanging(value);
				this.SendPropertyChanging();
				this._blank = value;
				this.SendPropertyChanged("blank");
				this.OnblankChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Format", DbType="NVarChar(50)")]
	public string Format
	{
		get
		{
			return this._Format;
		}
		set
		{
			if ((this._Format != value))
			{
				this.OnFormatChanging(value);
				this.SendPropertyChanging();
				this._Format = value;
				this.SendPropertyChanged("Format");
				this.OnFormatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Decimal", DbType="Bit")]
	public System.Nullable<bool> Decimal
	{
		get
		{
			return this._Decimal;
		}
		set
		{
			if ((this._Decimal != value))
			{
				this.OnDecimalChanging(value);
				this.SendPropertyChanging();
				this._Decimal = value;
				this.SendPropertyChanged("Decimal");
				this.OnDecimalChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionRate", DbType="Decimal(18,0) NOT NULL")]
	public decimal ConversionRate
	{
		get
		{
			return this._ConversionRate;
		}
		set
		{
			if ((this._ConversionRate != value))
			{
				this.OnConversionRateChanging(value);
				this.SendPropertyChanging();
				this._ConversionRate = value;
				this.SendPropertyChanged("ConversionRate");
				this.OnConversionRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
	public bool IsDefault
	{
		get
		{
			return this._IsDefault;
		}
		set
		{
			if ((this._IsDefault != value))
			{
				this.OnIsDefaultChanging(value);
				this.SendPropertyChanging();
				this._IsDefault = value;
				this.SendPropertyChanged("IsDefault");
				this.OnIsDefaultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCurrency_TBProduct_Currency", Storage="_TBProduct_Currencies", ThisKey="IDCurrency", OtherKey="IDCurrency")]
	public EntitySet<TBProduct_Currency> TBProduct_Currencies
	{
		get
		{
			return this._TBProduct_Currencies;
		}
		set
		{
			this._TBProduct_Currencies.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCurrency_TBOrder", Storage="_TBOrders", ThisKey="IDCurrency", OtherKey="IDCurrency")]
	public EntitySet<TBOrder> TBOrders
	{
		get
		{
			return this._TBOrders;
		}
		set
		{
			this._TBOrders.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBProduct_Currencies(TBProduct_Currency entity)
	{
		this.SendPropertyChanging();
		entity.TBCurrency = this;
	}
	
	private void detach_TBProduct_Currencies(TBProduct_Currency entity)
	{
		this.SendPropertyChanging();
		entity.TBCurrency = null;
	}
	
	private void attach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBCurrency = this;
	}
	
	private void detach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBCurrency = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBCustomer")]
public partial class TBCustomer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDCustomer;
	
	private System.Nullable<int> _IDCustomer_Group;
	
	private string _FirstName;
	
	private string _LastName;
	
	private string _Gender;
	
	private string _Email;
	
	private string _Password;
	
	private string _PhoneNumber;
	
	private System.DateTime _Birthday;
	
	private bool _IsSubscribe;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBAddress> _TBAddresses;
	
	private EntitySet<TBWishlist> _TBWishlists;
	
	private EntitySet<TBVoucher> _TBVouchers;
	
	private EntitySet<TBCustomer_Product> _TBCustomer_Products;
	
	private EntitySet<TBOrder> _TBOrders;
	
	private EntityRef<TBCustomer_Group> _TBCustomer_Group;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCustomerChanging(int value);
    partial void OnIDCustomerChanged();
    partial void OnIDCustomer_GroupChanging(System.Nullable<int> value);
    partial void OnIDCustomer_GroupChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnBirthdayChanging(System.DateTime value);
    partial void OnBirthdayChanged();
    partial void OnIsSubscribeChanging(bool value);
    partial void OnIsSubscribeChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBCustomer()
	{
		this._TBAddresses = new EntitySet<TBAddress>(new Action<TBAddress>(this.attach_TBAddresses), new Action<TBAddress>(this.detach_TBAddresses));
		this._TBWishlists = new EntitySet<TBWishlist>(new Action<TBWishlist>(this.attach_TBWishlists), new Action<TBWishlist>(this.detach_TBWishlists));
		this._TBVouchers = new EntitySet<TBVoucher>(new Action<TBVoucher>(this.attach_TBVouchers), new Action<TBVoucher>(this.detach_TBVouchers));
		this._TBCustomer_Products = new EntitySet<TBCustomer_Product>(new Action<TBCustomer_Product>(this.attach_TBCustomer_Products), new Action<TBCustomer_Product>(this.detach_TBCustomer_Products));
		this._TBOrders = new EntitySet<TBOrder>(new Action<TBOrder>(this.attach_TBOrders), new Action<TBOrder>(this.detach_TBOrders));
		this._TBCustomer_Group = default(EntityRef<TBCustomer_Group>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDCustomer
	{
		get
		{
			return this._IDCustomer;
		}
		set
		{
			if ((this._IDCustomer != value))
			{
				this.OnIDCustomerChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer = value;
				this.SendPropertyChanged("IDCustomer");
				this.OnIDCustomerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer_Group", DbType="Int")]
	public System.Nullable<int> IDCustomer_Group
	{
		get
		{
			return this._IDCustomer_Group;
		}
		set
		{
			if ((this._IDCustomer_Group != value))
			{
				if (this._TBCustomer_Group.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCustomer_GroupChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer_Group = value;
				this.SendPropertyChanged("IDCustomer_Group");
				this.OnIDCustomer_GroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this.OnFirstNameChanging(value);
				this.SendPropertyChanging();
				this._FirstName = value;
				this.SendPropertyChanged("FirstName");
				this.OnFirstNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this.OnLastNameChanging(value);
				this.SendPropertyChanging();
				this._LastName = value;
				this.SendPropertyChanged("LastName");
				this.OnLastNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
	public string Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
	public string PhoneNumber
	{
		get
		{
			return this._PhoneNumber;
		}
		set
		{
			if ((this._PhoneNumber != value))
			{
				this.OnPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._PhoneNumber = value;
				this.SendPropertyChanged("PhoneNumber");
				this.OnPhoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="Date NOT NULL")]
	public System.DateTime Birthday
	{
		get
		{
			return this._Birthday;
		}
		set
		{
			if ((this._Birthday != value))
			{
				this.OnBirthdayChanging(value);
				this.SendPropertyChanging();
				this._Birthday = value;
				this.SendPropertyChanged("Birthday");
				this.OnBirthdayChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSubscribe", DbType="Bit NOT NULL")]
	public bool IsSubscribe
	{
		get
		{
			return this._IsSubscribe;
		}
		set
		{
			if ((this._IsSubscribe != value))
			{
				this.OnIsSubscribeChanging(value);
				this.SendPropertyChanging();
				this._IsSubscribe = value;
				this.SendPropertyChanged("IsSubscribe");
				this.OnIsSubscribeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBAddress", Storage="_TBAddresses", ThisKey="IDCustomer", OtherKey="IDCustomer")]
	public EntitySet<TBAddress> TBAddresses
	{
		get
		{
			return this._TBAddresses;
		}
		set
		{
			this._TBAddresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBWishlist", Storage="_TBWishlists", ThisKey="IDCustomer", OtherKey="IDCustomer")]
	public EntitySet<TBWishlist> TBWishlists
	{
		get
		{
			return this._TBWishlists;
		}
		set
		{
			this._TBWishlists.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBVoucher", Storage="_TBVouchers", ThisKey="IDCustomer", OtherKey="IDCustomer")]
	public EntitySet<TBVoucher> TBVouchers
	{
		get
		{
			return this._TBVouchers;
		}
		set
		{
			this._TBVouchers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBCustomer_Product", Storage="_TBCustomer_Products", ThisKey="IDCustomer", OtherKey="IDCustomer")]
	public EntitySet<TBCustomer_Product> TBCustomer_Products
	{
		get
		{
			return this._TBCustomer_Products;
		}
		set
		{
			this._TBCustomer_Products.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBOrder", Storage="_TBOrders", ThisKey="IDCustomer", OtherKey="IDCustomer")]
	public EntitySet<TBOrder> TBOrders
	{
		get
		{
			return this._TBOrders;
		}
		set
		{
			this._TBOrders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_Group_TBCustomer", Storage="_TBCustomer_Group", ThisKey="IDCustomer_Group", OtherKey="IDCustomer_Group", IsForeignKey=true)]
	public TBCustomer_Group TBCustomer_Group
	{
		get
		{
			return this._TBCustomer_Group.Entity;
		}
		set
		{
			TBCustomer_Group previousValue = this._TBCustomer_Group.Entity;
			if (((previousValue != value) 
						|| (this._TBCustomer_Group.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCustomer_Group.Entity = null;
					previousValue.TBCustomers.Remove(this);
				}
				this._TBCustomer_Group.Entity = value;
				if ((value != null))
				{
					value.TBCustomers.Add(this);
					this._IDCustomer_Group = value.IDCustomer_Group;
				}
				else
				{
					this._IDCustomer_Group = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBCustomer_Group");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = this;
	}
	
	private void detach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = null;
	}
	
	private void attach_TBWishlists(TBWishlist entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = this;
	}
	
	private void detach_TBWishlists(TBWishlist entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = null;
	}
	
	private void attach_TBVouchers(TBVoucher entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = this;
	}
	
	private void detach_TBVouchers(TBVoucher entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = null;
	}
	
	private void attach_TBCustomer_Products(TBCustomer_Product entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = this;
	}
	
	private void detach_TBCustomer_Products(TBCustomer_Product entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = null;
	}
	
	private void attach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = this;
	}
	
	private void detach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBCustomer_Group")]
public partial class TBCustomer_Group : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDCustomer_Group;
	
	private string _Name;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBCustomer> _TBCustomers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCustomer_GroupChanging(int value);
    partial void OnIDCustomer_GroupChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBCustomer_Group()
	{
		this._TBCustomers = new EntitySet<TBCustomer>(new Action<TBCustomer>(this.attach_TBCustomers), new Action<TBCustomer>(this.detach_TBCustomers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer_Group", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDCustomer_Group
	{
		get
		{
			return this._IDCustomer_Group;
		}
		set
		{
			if ((this._IDCustomer_Group != value))
			{
				this.OnIDCustomer_GroupChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer_Group = value;
				this.SendPropertyChanged("IDCustomer_Group");
				this.OnIDCustomer_GroupChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_Group_TBCustomer", Storage="_TBCustomers", ThisKey="IDCustomer_Group", OtherKey="IDCustomer_Group")]
	public EntitySet<TBCustomer> TBCustomers
	{
		get
		{
			return this._TBCustomers;
		}
		set
		{
			this._TBCustomers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBCustomers(TBCustomer entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer_Group = this;
	}
	
	private void detach_TBCustomers(TBCustomer entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer_Group = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBDistrict")]
public partial class TBDistrict : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDDistrict;
	
	private int _IDCity;
	
	private string _Name;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _dateLastUpdate;
	
	private EntitySet<TBAddress> _TBAddresses;
	
	private EntitySet<TBShipping> _TBShippings;
	
	private EntityRef<TBCity> _TBCity;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDistrictChanging(int value);
    partial void OnIDDistrictChanged();
    partial void OnIDCityChanging(int value);
    partial void OnIDCityChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OndateLastUpdateChanging(System.DateTime value);
    partial void OndateLastUpdateChanged();
    #endregion
	
	public TBDistrict()
	{
		this._TBAddresses = new EntitySet<TBAddress>(new Action<TBAddress>(this.attach_TBAddresses), new Action<TBAddress>(this.detach_TBAddresses));
		this._TBShippings = new EntitySet<TBShipping>(new Action<TBShipping>(this.attach_TBShippings), new Action<TBShipping>(this.detach_TBShippings));
		this._TBCity = default(EntityRef<TBCity>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDistrict", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDDistrict
	{
		get
		{
			return this._IDDistrict;
		}
		set
		{
			if ((this._IDDistrict != value))
			{
				this.OnIDDistrictChanging(value);
				this.SendPropertyChanging();
				this._IDDistrict = value;
				this.SendPropertyChanged("IDDistrict");
				this.OnIDDistrictChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCity", DbType="Int NOT NULL")]
	public int IDCity
	{
		get
		{
			return this._IDCity;
		}
		set
		{
			if ((this._IDCity != value))
			{
				if (this._TBCity.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCityChanging(value);
				this.SendPropertyChanging();
				this._IDCity = value;
				this.SendPropertyChanged("IDCity");
				this.OnIDCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime dateLastUpdate
	{
		get
		{
			return this._dateLastUpdate;
		}
		set
		{
			if ((this._dateLastUpdate != value))
			{
				this.OndateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._dateLastUpdate = value;
				this.SendPropertyChanged("dateLastUpdate");
				this.OndateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBDistrict_TBAddress", Storage="_TBAddresses", ThisKey="IDDistrict", OtherKey="IDDistrict")]
	public EntitySet<TBAddress> TBAddresses
	{
		get
		{
			return this._TBAddresses;
		}
		set
		{
			this._TBAddresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBDistrict_TBShipping", Storage="_TBShippings", ThisKey="IDDistrict", OtherKey="IDDistrict")]
	public EntitySet<TBShipping> TBShippings
	{
		get
		{
			return this._TBShippings;
		}
		set
		{
			this._TBShippings.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCity_TBDistrict", Storage="_TBCity", ThisKey="IDCity", OtherKey="IDCity", IsForeignKey=true)]
	public TBCity TBCity
	{
		get
		{
			return this._TBCity.Entity;
		}
		set
		{
			TBCity previousValue = this._TBCity.Entity;
			if (((previousValue != value) 
						|| (this._TBCity.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCity.Entity = null;
					previousValue.TBDistricts.Remove(this);
				}
				this._TBCity.Entity = value;
				if ((value != null))
				{
					value.TBDistricts.Add(this);
					this._IDCity = value.IDCity;
				}
				else
				{
					this._IDCity = default(int);
				}
				this.SendPropertyChanged("TBCity");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBDistrict = this;
	}
	
	private void detach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBDistrict = null;
	}
	
	private void attach_TBShippings(TBShipping entity)
	{
		this.SendPropertyChanging();
		entity.TBDistrict = this;
	}
	
	private void detach_TBShippings(TBShipping entity)
	{
		this.SendPropertyChanging();
		entity.TBDistrict = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBEmployee")]
public partial class TBEmployee : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDEmployee;
	
	private int _IDRole;
	
	private string _Name;
	
	private string _Email;
	
	private string _Password;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.Nullable<System.DateTime> _DateLastUpdate;
	
	private EntitySet<TBLog_Order> _TBLog_Orders;
	
	private EntitySet<TBLog_Stock> _TBLog_Stocks;
	
	private EntityRef<TBRole> _TBRole;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEmployeeChanging(int value);
    partial void OnIDEmployeeChanged();
    partial void OnIDRoleChanging(int value);
    partial void OnIDRoleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBEmployee()
	{
		this._TBLog_Orders = new EntitySet<TBLog_Order>(new Action<TBLog_Order>(this.attach_TBLog_Orders), new Action<TBLog_Order>(this.detach_TBLog_Orders));
		this._TBLog_Stocks = new EntitySet<TBLog_Stock>(new Action<TBLog_Stock>(this.attach_TBLog_Stocks), new Action<TBLog_Stock>(this.detach_TBLog_Stocks));
		this._TBRole = default(EntityRef<TBRole>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmployee", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDEmployee
	{
		get
		{
			return this._IDEmployee;
		}
		set
		{
			if ((this._IDEmployee != value))
			{
				this.OnIDEmployeeChanging(value);
				this.SendPropertyChanging();
				this._IDEmployee = value;
				this.SendPropertyChanged("IDEmployee");
				this.OnIDEmployeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRole", DbType="Int NOT NULL")]
	public int IDRole
	{
		get
		{
			return this._IDRole;
		}
		set
		{
			if ((this._IDRole != value))
			{
				if (this._TBRole.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDRoleChanging(value);
				this.SendPropertyChanging();
				this._IDRole = value;
				this.SendPropertyChanged("IDRole");
				this.OnIDRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBEmployee_TBLog_Order", Storage="_TBLog_Orders", ThisKey="IDEmployee", OtherKey="IDEmployee")]
	public EntitySet<TBLog_Order> TBLog_Orders
	{
		get
		{
			return this._TBLog_Orders;
		}
		set
		{
			this._TBLog_Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBEmployee_TBLog_Stock", Storage="_TBLog_Stocks", ThisKey="IDEmployee", OtherKey="IDEmployee")]
	public EntitySet<TBLog_Stock> TBLog_Stocks
	{
		get
		{
			return this._TBLog_Stocks;
		}
		set
		{
			this._TBLog_Stocks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBRole_TBEmployee", Storage="_TBRole", ThisKey="IDRole", OtherKey="IDRole", IsForeignKey=true)]
	public TBRole TBRole
	{
		get
		{
			return this._TBRole.Entity;
		}
		set
		{
			TBRole previousValue = this._TBRole.Entity;
			if (((previousValue != value) 
						|| (this._TBRole.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBRole.Entity = null;
					previousValue.TBEmployees.Remove(this);
				}
				this._TBRole.Entity = value;
				if ((value != null))
				{
					value.TBEmployees.Add(this);
					this._IDRole = value.IDRole;
				}
				else
				{
					this._IDRole = default(int);
				}
				this.SendPropertyChanged("TBRole");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBLog_Orders(TBLog_Order entity)
	{
		this.SendPropertyChanging();
		entity.TBEmployee = this;
	}
	
	private void detach_TBLog_Orders(TBLog_Order entity)
	{
		this.SendPropertyChanging();
		entity.TBEmployee = null;
	}
	
	private void attach_TBLog_Stocks(TBLog_Stock entity)
	{
		this.SendPropertyChanging();
		entity.TBEmployee = this;
	}
	
	private void detach_TBLog_Stocks(TBLog_Stock entity)
	{
		this.SendPropertyChanging();
		entity.TBEmployee = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLog_Error")]
public partial class TBLog_Error : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _ErrorMessage;
	
	private string _StackTrace;
	
	private System.Nullable<System.DateTime> _DateInsert;
	
	private System.Nullable<System.DateTime> _DateLastUpdate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnErrorMessageChanging(string value);
    partial void OnErrorMessageChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    partial void OnDateInsertChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBLog_Error()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErrorMessage", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ErrorMessage
	{
		get
		{
			return this._ErrorMessage;
		}
		set
		{
			if ((this._ErrorMessage != value))
			{
				this.OnErrorMessageChanging(value);
				this.SendPropertyChanging();
				this._ErrorMessage = value;
				this.SendPropertyChanged("ErrorMessage");
				this.OnErrorMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackTrace", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string StackTrace
	{
		get
		{
			return this._StackTrace;
		}
		set
		{
			if ((this._StackTrace != value))
			{
				this.OnStackTraceChanging(value);
				this.SendPropertyChanging();
				this._StackTrace = value;
				this.SendPropertyChanged("StackTrace");
				this.OnStackTraceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLog_Order")]
public partial class TBLog_Order : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _IDEmployee;
	
	private System.Nullable<int> _IDOrder;
	
	private string _Reference;
	
	private string _OrderStatus;
	
	private string _UserName;
	
	private string _Description;
	
	private System.Nullable<System.DateTime> _DateInsert;
	
	private string _CustomerName;
	
	private EntityRef<TBEmployee> _TBEmployee;
	
	private EntityRef<TBOrder> _TBOrder;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDEmployeeChanging(System.Nullable<int> value);
    partial void OnIDEmployeeChanged();
    partial void OnIDOrderChanging(System.Nullable<int> value);
    partial void OnIDOrderChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnOrderStatusChanging(string value);
    partial void OnOrderStatusChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateInsertChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInsertChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    #endregion
	
	public TBLog_Order()
	{
		this._TBEmployee = default(EntityRef<TBEmployee>);
		this._TBOrder = default(EntityRef<TBOrder>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmployee", DbType="Int")]
	public System.Nullable<int> IDEmployee
	{
		get
		{
			return this._IDEmployee;
		}
		set
		{
			if ((this._IDEmployee != value))
			{
				if (this._TBEmployee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDEmployeeChanging(value);
				this.SendPropertyChanging();
				this._IDEmployee = value;
				this.SendPropertyChanged("IDEmployee");
				this.OnIDEmployeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrder", DbType="Int")]
	public System.Nullable<int> IDOrder
	{
		get
		{
			return this._IDOrder;
		}
		set
		{
			if ((this._IDOrder != value))
			{
				if (this._TBOrder.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDOrderChanging(value);
				this.SendPropertyChanging();
				this._IDOrder = value;
				this.SendPropertyChanged("IDOrder");
				this.OnIDOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(50)")]
	public string Reference
	{
		get
		{
			return this._Reference;
		}
		set
		{
			if ((this._Reference != value))
			{
				this.OnReferenceChanging(value);
				this.SendPropertyChanging();
				this._Reference = value;
				this.SendPropertyChanged("Reference");
				this.OnReferenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderStatus", DbType="NVarChar(100)")]
	public string OrderStatus
	{
		get
		{
			return this._OrderStatus;
		}
		set
		{
			if ((this._OrderStatus != value))
			{
				this.OnOrderStatusChanging(value);
				this.SendPropertyChanging();
				this._OrderStatus = value;
				this.SendPropertyChanged("OrderStatus");
				this.OnOrderStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(MAX)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(MAX)")]
	public string CustomerName
	{
		get
		{
			return this._CustomerName;
		}
		set
		{
			if ((this._CustomerName != value))
			{
				this.OnCustomerNameChanging(value);
				this.SendPropertyChanging();
				this._CustomerName = value;
				this.SendPropertyChanged("CustomerName");
				this.OnCustomerNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBEmployee_TBLog_Order", Storage="_TBEmployee", ThisKey="IDEmployee", OtherKey="IDEmployee", IsForeignKey=true)]
	public TBEmployee TBEmployee
	{
		get
		{
			return this._TBEmployee.Entity;
		}
		set
		{
			TBEmployee previousValue = this._TBEmployee.Entity;
			if (((previousValue != value) 
						|| (this._TBEmployee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBEmployee.Entity = null;
					previousValue.TBLog_Orders.Remove(this);
				}
				this._TBEmployee.Entity = value;
				if ((value != null))
				{
					value.TBLog_Orders.Add(this);
					this._IDEmployee = value.IDEmployee;
				}
				else
				{
					this._IDEmployee = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBEmployee");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_TBLog_Order", Storage="_TBOrder", ThisKey="IDOrder", OtherKey="IDOrder", IsForeignKey=true)]
	public TBOrder TBOrder
	{
		get
		{
			return this._TBOrder.Entity;
		}
		set
		{
			TBOrder previousValue = this._TBOrder.Entity;
			if (((previousValue != value) 
						|| (this._TBOrder.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBOrder.Entity = null;
					previousValue.TBLog_Orders.Remove(this);
				}
				this._TBOrder.Entity = value;
				if ((value != null))
				{
					value.TBLog_Orders.Add(this);
					this._IDOrder = value.IDOrder;
				}
				else
				{
					this._IDOrder = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBOrder");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBLog_Stock")]
public partial class TBLog_Stock : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private System.Nullable<int> _IDEmployee;
	
	private int _IDProduct_Combination;
	
	private string _ProductName;
	
	private string _UserName;
	
	private string _Type;
	
	private string _Description;
	
	private int _Quantity;
	
	private System.DateTime _InsertDate;
	
	private System.Nullable<int> _InitialQuantity;
	
	private System.Nullable<int> _LastQuantity;
	
	private EntityRef<TBEmployee> _TBEmployee;
	
	private EntityRef<TBProduct_Combination> _TBProduct_Combination;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDEmployeeChanging(System.Nullable<int> value);
    partial void OnIDEmployeeChanged();
    partial void OnIDProduct_CombinationChanging(int value);
    partial void OnIDProduct_CombinationChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnInsertDateChanging(System.DateTime value);
    partial void OnInsertDateChanged();
    partial void OnInitialQuantityChanging(System.Nullable<int> value);
    partial void OnInitialQuantityChanged();
    partial void OnLastQuantityChanging(System.Nullable<int> value);
    partial void OnLastQuantityChanged();
    #endregion
	
	public TBLog_Stock()
	{
		this._TBEmployee = default(EntityRef<TBEmployee>);
		this._TBProduct_Combination = default(EntityRef<TBProduct_Combination>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEmployee", DbType="Int")]
	public System.Nullable<int> IDEmployee
	{
		get
		{
			return this._IDEmployee;
		}
		set
		{
			if ((this._IDEmployee != value))
			{
				if (this._TBEmployee.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDEmployeeChanging(value);
				this.SendPropertyChanging();
				this._IDEmployee = value;
				this.SendPropertyChanged("IDEmployee");
				this.OnIDEmployeeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int NOT NULL")]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				if (this._TBProduct_Combination.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProduct_CombinationChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination = value;
				this.SendPropertyChanged("IDProduct_Combination");
				this.OnIDProduct_CombinationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string ProductName
	{
		get
		{
			return this._ProductName;
		}
		set
		{
			if ((this._ProductName != value))
			{
				this.OnProductNameChanging(value);
				this.SendPropertyChanging();
				this._ProductName = value;
				this.SendPropertyChanged("ProductName");
				this.OnProductNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime NOT NULL")]
	public System.DateTime InsertDate
	{
		get
		{
			return this._InsertDate;
		}
		set
		{
			if ((this._InsertDate != value))
			{
				this.OnInsertDateChanging(value);
				this.SendPropertyChanging();
				this._InsertDate = value;
				this.SendPropertyChanged("InsertDate");
				this.OnInsertDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitialQuantity", DbType="Int")]
	public System.Nullable<int> InitialQuantity
	{
		get
		{
			return this._InitialQuantity;
		}
		set
		{
			if ((this._InitialQuantity != value))
			{
				this.OnInitialQuantityChanging(value);
				this.SendPropertyChanging();
				this._InitialQuantity = value;
				this.SendPropertyChanged("InitialQuantity");
				this.OnInitialQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastQuantity", DbType="Int")]
	public System.Nullable<int> LastQuantity
	{
		get
		{
			return this._LastQuantity;
		}
		set
		{
			if ((this._LastQuantity != value))
			{
				this.OnLastQuantityChanging(value);
				this.SendPropertyChanging();
				this._LastQuantity = value;
				this.SendPropertyChanged("LastQuantity");
				this.OnLastQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBEmployee_TBLog_Stock", Storage="_TBEmployee", ThisKey="IDEmployee", OtherKey="IDEmployee", IsForeignKey=true)]
	public TBEmployee TBEmployee
	{
		get
		{
			return this._TBEmployee.Entity;
		}
		set
		{
			TBEmployee previousValue = this._TBEmployee.Entity;
			if (((previousValue != value) 
						|| (this._TBEmployee.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBEmployee.Entity = null;
					previousValue.TBLog_Stocks.Remove(this);
				}
				this._TBEmployee.Entity = value;
				if ((value != null))
				{
					value.TBLog_Stocks.Add(this);
					this._IDEmployee = value.IDEmployee;
				}
				else
				{
					this._IDEmployee = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBEmployee");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBLog_Stock", Storage="_TBProduct_Combination", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination", IsForeignKey=true)]
	public TBProduct_Combination TBProduct_Combination
	{
		get
		{
			return this._TBProduct_Combination.Entity;
		}
		set
		{
			TBProduct_Combination previousValue = this._TBProduct_Combination.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct_Combination.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct_Combination.Entity = null;
					previousValue.TBLog_Stocks.Remove(this);
				}
				this._TBProduct_Combination.Entity = value;
				if ((value != null))
				{
					value.TBLog_Stocks.Add(this);
					this._IDProduct_Combination = value.IDProduct_Combination;
				}
				else
				{
					this._IDProduct_Combination = default(int);
				}
				this.SendPropertyChanged("TBProduct_Combination");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBManufacturer")]
public partial class TBManufacturer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDManufacturer;
	
	private string _Logo;
	
	private string _Name;
	
	private string _Email;
	
	private string _Phone;
	
	private string _Address;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBProduct> _TBProducts;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDManufacturerChanging(int value);
    partial void OnIDManufacturerChanged();
    partial void OnLogoChanging(string value);
    partial void OnLogoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBManufacturer()
	{
		this._TBProducts = new EntitySet<TBProduct>(new Action<TBProduct>(this.attach_TBProducts), new Action<TBProduct>(this.detach_TBProducts));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this.OnIDManufacturerChanging(value);
				this.SendPropertyChanging();
				this._IDManufacturer = value;
				this.SendPropertyChanged("IDManufacturer");
				this.OnIDManufacturerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="NVarChar(20)")]
	public string Logo
	{
		get
		{
			return this._Logo;
		}
		set
		{
			if ((this._Logo != value))
			{
				this.OnLogoChanging(value);
				this.SendPropertyChanging();
				this._Logo = value;
				this.SendPropertyChanged("Logo");
				this.OnLogoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this.OnPhoneChanging(value);
				this.SendPropertyChanging();
				this._Phone = value;
				this.SendPropertyChanged("Phone");
				this.OnPhoneChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this.OnShortDescriptionChanging(value);
				this.SendPropertyChanging();
				this._ShortDescription = value;
				this.SendPropertyChanged("ShortDescription");
				this.OnShortDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBManufacturer_TBProduct", Storage="_TBProducts", ThisKey="IDManufacturer", OtherKey="IDManufacturer")]
	public EntitySet<TBProduct> TBProducts
	{
		get
		{
			return this._TBProducts;
		}
		set
		{
			this._TBProducts.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBProducts(TBProduct entity)
	{
		this.SendPropertyChanging();
		entity.TBManufacturer = this;
	}
	
	private void detach_TBProducts(TBProduct entity)
	{
		this.SendPropertyChanging();
		entity.TBManufacturer = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBMenu")]
public partial class TBMenu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDMenu;
	
	private System.Nullable<int> _IDMenuParent;
	
	private string _Name;
	
	private string _Link;
	
	private string _Icon;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBMenu> _TBMenus;
	
	private EntitySet<TBRole_Menu> _TBRole_Menus;
	
	private EntityRef<TBMenu> _TBMenu1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDMenuChanging(int value);
    partial void OnIDMenuChanged();
    partial void OnIDMenuParentChanging(System.Nullable<int> value);
    partial void OnIDMenuParentChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnIconChanging(string value);
    partial void OnIconChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBMenu()
	{
		this._TBMenus = new EntitySet<TBMenu>(new Action<TBMenu>(this.attach_TBMenus), new Action<TBMenu>(this.detach_TBMenus));
		this._TBRole_Menus = new EntitySet<TBRole_Menu>(new Action<TBRole_Menu>(this.attach_TBRole_Menus), new Action<TBRole_Menu>(this.detach_TBRole_Menus));
		this._TBMenu1 = default(EntityRef<TBMenu>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMenu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDMenu
	{
		get
		{
			return this._IDMenu;
		}
		set
		{
			if ((this._IDMenu != value))
			{
				this.OnIDMenuChanging(value);
				this.SendPropertyChanging();
				this._IDMenu = value;
				this.SendPropertyChanged("IDMenu");
				this.OnIDMenuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMenuParent", DbType="Int")]
	public System.Nullable<int> IDMenuParent
	{
		get
		{
			return this._IDMenuParent;
		}
		set
		{
			if ((this._IDMenuParent != value))
			{
				if (this._TBMenu1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDMenuParentChanging(value);
				this.SendPropertyChanging();
				this._IDMenuParent = value;
				this.SendPropertyChanged("IDMenuParent");
				this.OnIDMenuParentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this.OnLinkChanging(value);
				this.SendPropertyChanging();
				this._Link = value;
				this.SendPropertyChanged("Link");
				this.OnLinkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="NVarChar(100)")]
	public string Icon
	{
		get
		{
			return this._Icon;
		}
		set
		{
			if ((this._Icon != value))
			{
				this.OnIconChanging(value);
				this.SendPropertyChanging();
				this._Icon = value;
				this.SendPropertyChanged("Icon");
				this.OnIconChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBMenu_TBMenu", Storage="_TBMenus", ThisKey="IDMenu", OtherKey="IDMenuParent")]
	public EntitySet<TBMenu> TBMenus
	{
		get
		{
			return this._TBMenus;
		}
		set
		{
			this._TBMenus.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBMenu_TBRole_Menu", Storage="_TBRole_Menus", ThisKey="IDMenu", OtherKey="IDMenu")]
	public EntitySet<TBRole_Menu> TBRole_Menus
	{
		get
		{
			return this._TBRole_Menus;
		}
		set
		{
			this._TBRole_Menus.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBMenu_TBMenu", Storage="_TBMenu1", ThisKey="IDMenuParent", OtherKey="IDMenu", IsForeignKey=true)]
	public TBMenu TBMenu1
	{
		get
		{
			return this._TBMenu1.Entity;
		}
		set
		{
			TBMenu previousValue = this._TBMenu1.Entity;
			if (((previousValue != value) 
						|| (this._TBMenu1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBMenu1.Entity = null;
					previousValue.TBMenus.Remove(this);
				}
				this._TBMenu1.Entity = value;
				if ((value != null))
				{
					value.TBMenus.Add(this);
					this._IDMenuParent = value.IDMenu;
				}
				else
				{
					this._IDMenuParent = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBMenu1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBMenus(TBMenu entity)
	{
		this.SendPropertyChanging();
		entity.TBMenu1 = this;
	}
	
	private void detach_TBMenus(TBMenu entity)
	{
		this.SendPropertyChanging();
		entity.TBMenu1 = null;
	}
	
	private void attach_TBRole_Menus(TBRole_Menu entity)
	{
		this.SendPropertyChanging();
		entity.TBMenu = this;
	}
	
	private void detach_TBRole_Menus(TBRole_Menu entity)
	{
		this.SendPropertyChanging();
		entity.TBMenu = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBNewsletter")]
public partial class TBNewsletter : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDNewsletter;
	
	private string _Email;
	
	private System.Nullable<bool> _Deflag;
	
	private System.Nullable<System.DateTime> _DateInsert;
	
	private System.Nullable<System.DateTime> _DateLastUpdate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDNewsletterChanging(int value);
    partial void OnIDNewsletterChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDeflagChanging(System.Nullable<bool> value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBNewsletter()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNewsletter", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDNewsletter
	{
		get
		{
			return this._IDNewsletter;
		}
		set
		{
			if ((this._IDNewsletter != value))
			{
				this.OnIDNewsletterChanging(value);
				this.SendPropertyChanging();
				this._IDNewsletter = value;
				this.SendPropertyChanged("IDNewsletter");
				this.OnIDNewsletterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(200)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit")]
	public System.Nullable<bool> Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBOrder_Detail")]
public partial class TBOrder_Detail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDOrder_Detail;
	
	private int _IDOrder;
	
	private int _IDProduct;
	
	private int _IDProduct_Combination;
	
	private System.Nullable<int> _IDCurrency;
	
	private string _Product_Name;
	
	private decimal _Weight;
	
	private decimal _Discount;
	
	private decimal _Price;
	
	private decimal _OriginalPrice;
	
	private int _Quantity;
	
	private EntityRef<TBProduct> _TBProduct;
	
	private EntityRef<TBProduct_Combination> _TBProduct_Combination;
	
	private EntityRef<TBOrder> _TBOrder;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDOrder_DetailChanging(int value);
    partial void OnIDOrder_DetailChanged();
    partial void OnIDOrderChanging(int value);
    partial void OnIDOrderChanged();
    partial void OnIDProductChanging(int value);
    partial void OnIDProductChanged();
    partial void OnIDProduct_CombinationChanging(int value);
    partial void OnIDProduct_CombinationChanged();
    partial void OnIDCurrencyChanging(System.Nullable<int> value);
    partial void OnIDCurrencyChanged();
    partial void OnProduct_NameChanging(string value);
    partial void OnProduct_NameChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnOriginalPriceChanging(decimal value);
    partial void OnOriginalPriceChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
	
	public TBOrder_Detail()
	{
		this._TBProduct = default(EntityRef<TBProduct>);
		this._TBProduct_Combination = default(EntityRef<TBProduct_Combination>);
		this._TBOrder = default(EntityRef<TBOrder>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrder_Detail", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDOrder_Detail
	{
		get
		{
			return this._IDOrder_Detail;
		}
		set
		{
			if ((this._IDOrder_Detail != value))
			{
				this.OnIDOrder_DetailChanging(value);
				this.SendPropertyChanging();
				this._IDOrder_Detail = value;
				this.SendPropertyChanged("IDOrder_Detail");
				this.OnIDOrder_DetailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrder", DbType="Int NOT NULL")]
	public int IDOrder
	{
		get
		{
			return this._IDOrder;
		}
		set
		{
			if ((this._IDOrder != value))
			{
				if (this._TBOrder.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDOrderChanging(value);
				this.SendPropertyChanging();
				this._IDOrder = value;
				this.SendPropertyChanged("IDOrder");
				this.OnIDOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				if (this._TBProduct.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProductChanging(value);
				this.SendPropertyChanging();
				this._IDProduct = value;
				this.SendPropertyChanged("IDProduct");
				this.OnIDProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int NOT NULL")]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				if (this._TBProduct_Combination.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProduct_CombinationChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination = value;
				this.SendPropertyChanged("IDProduct_Combination");
				this.OnIDProduct_CombinationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCurrency", DbType="Int")]
	public System.Nullable<int> IDCurrency
	{
		get
		{
			return this._IDCurrency;
		}
		set
		{
			if ((this._IDCurrency != value))
			{
				this.OnIDCurrencyChanging(value);
				this.SendPropertyChanging();
				this._IDCurrency = value;
				this.SendPropertyChanged("IDCurrency");
				this.OnIDCurrencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Product_Name
	{
		get
		{
			return this._Product_Name;
		}
		set
		{
			if ((this._Product_Name != value))
			{
				this.OnProduct_NameChanging(value);
				this.SendPropertyChanging();
				this._Product_Name = value;
				this.SendPropertyChanged("Product_Name");
				this.OnProduct_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalPrice", DbType="Money NOT NULL")]
	public decimal OriginalPrice
	{
		get
		{
			return this._OriginalPrice;
		}
		set
		{
			if ((this._OriginalPrice != value))
			{
				this.OnOriginalPriceChanging(value);
				this.SendPropertyChanging();
				this._OriginalPrice = value;
				this.SendPropertyChanged("OriginalPrice");
				this.OnOriginalPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBOrder_Detail", Storage="_TBProduct", ThisKey="IDProduct", OtherKey="IDProduct", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBProduct TBProduct
	{
		get
		{
			return this._TBProduct.Entity;
		}
		set
		{
			TBProduct previousValue = this._TBProduct.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct.Entity = null;
					previousValue.TBOrder_Details.Remove(this);
				}
				this._TBProduct.Entity = value;
				if ((value != null))
				{
					value.TBOrder_Details.Add(this);
					this._IDProduct = value.IDProduct;
				}
				else
				{
					this._IDProduct = default(int);
				}
				this.SendPropertyChanged("TBProduct");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBOrder_Detail", Storage="_TBProduct_Combination", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination", IsForeignKey=true)]
	public TBProduct_Combination TBProduct_Combination
	{
		get
		{
			return this._TBProduct_Combination.Entity;
		}
		set
		{
			TBProduct_Combination previousValue = this._TBProduct_Combination.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct_Combination.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct_Combination.Entity = null;
					previousValue.TBOrder_Details.Remove(this);
				}
				this._TBProduct_Combination.Entity = value;
				if ((value != null))
				{
					value.TBOrder_Details.Add(this);
					this._IDProduct_Combination = value.IDProduct_Combination;
				}
				else
				{
					this._IDProduct_Combination = default(int);
				}
				this.SendPropertyChanged("TBProduct_Combination");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_TBOrder_Detail", Storage="_TBOrder", ThisKey="IDOrder", OtherKey="IDOrder", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBOrder TBOrder
	{
		get
		{
			return this._TBOrder.Entity;
		}
		set
		{
			TBOrder previousValue = this._TBOrder.Entity;
			if (((previousValue != value) 
						|| (this._TBOrder.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBOrder.Entity = null;
					previousValue.TBOrder_Details.Remove(this);
				}
				this._TBOrder.Entity = value;
				if ((value != null))
				{
					value.TBOrder_Details.Add(this);
					this._IDOrder = value.IDOrder;
				}
				else
				{
					this._IDOrder = default(int);
				}
				this.SendPropertyChanged("TBOrder");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBOrder_Status")]
public partial class TBOrder_Status : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDOrderStatus;
	
	private string _Name;
	
	private bool _SendEmail;
	
	private string _Color;
	
	private bool _Logable;
	
	private bool _Delivery;
	
	private bool _Shipped;
	
	private bool _Paid;
	
	private bool _Restock;
	
	private string _EmailTemplate;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBRole_OrderStatus> _TBRole_OrderStatus;
	
	private EntitySet<TBOrder> _TBOrders;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDOrderStatusChanging(int value);
    partial void OnIDOrderStatusChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSendEmailChanging(bool value);
    partial void OnSendEmailChanged();
    partial void OnColorChanging(string value);
    partial void OnColorChanged();
    partial void OnLogableChanging(bool value);
    partial void OnLogableChanged();
    partial void OnDeliveryChanging(bool value);
    partial void OnDeliveryChanged();
    partial void OnShippedChanging(bool value);
    partial void OnShippedChanged();
    partial void OnPaidChanging(bool value);
    partial void OnPaidChanged();
    partial void OnRestockChanging(bool value);
    partial void OnRestockChanged();
    partial void OnEmailTemplateChanging(string value);
    partial void OnEmailTemplateChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBOrder_Status()
	{
		this._TBRole_OrderStatus = new EntitySet<TBRole_OrderStatus>(new Action<TBRole_OrderStatus>(this.attach_TBRole_OrderStatus), new Action<TBRole_OrderStatus>(this.detach_TBRole_OrderStatus));
		this._TBOrders = new EntitySet<TBOrder>(new Action<TBOrder>(this.attach_TBOrders), new Action<TBOrder>(this.detach_TBOrders));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrderStatus", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDOrderStatus
	{
		get
		{
			return this._IDOrderStatus;
		}
		set
		{
			if ((this._IDOrderStatus != value))
			{
				this.OnIDOrderStatusChanging(value);
				this.SendPropertyChanging();
				this._IDOrderStatus = value;
				this.SendPropertyChanged("IDOrderStatus");
				this.OnIDOrderStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendEmail", DbType="Bit NOT NULL")]
	public bool SendEmail
	{
		get
		{
			return this._SendEmail;
		}
		set
		{
			if ((this._SendEmail != value))
			{
				this.OnSendEmailChanging(value);
				this.SendPropertyChanging();
				this._SendEmail = value;
				this.SendPropertyChanged("SendEmail");
				this.OnSendEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="NVarChar(10)")]
	public string Color
	{
		get
		{
			return this._Color;
		}
		set
		{
			if ((this._Color != value))
			{
				this.OnColorChanging(value);
				this.SendPropertyChanging();
				this._Color = value;
				this.SendPropertyChanged("Color");
				this.OnColorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logable", DbType="Bit NOT NULL")]
	public bool Logable
	{
		get
		{
			return this._Logable;
		}
		set
		{
			if ((this._Logable != value))
			{
				this.OnLogableChanging(value);
				this.SendPropertyChanging();
				this._Logable = value;
				this.SendPropertyChanged("Logable");
				this.OnLogableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delivery", DbType="Bit NOT NULL")]
	public bool Delivery
	{
		get
		{
			return this._Delivery;
		}
		set
		{
			if ((this._Delivery != value))
			{
				this.OnDeliveryChanging(value);
				this.SendPropertyChanging();
				this._Delivery = value;
				this.SendPropertyChanged("Delivery");
				this.OnDeliveryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipped", DbType="Bit NOT NULL")]
	public bool Shipped
	{
		get
		{
			return this._Shipped;
		}
		set
		{
			if ((this._Shipped != value))
			{
				this.OnShippedChanging(value);
				this.SendPropertyChanging();
				this._Shipped = value;
				this.SendPropertyChanged("Shipped");
				this.OnShippedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit NOT NULL")]
	public bool Paid
	{
		get
		{
			return this._Paid;
		}
		set
		{
			if ((this._Paid != value))
			{
				this.OnPaidChanging(value);
				this.SendPropertyChanging();
				this._Paid = value;
				this.SendPropertyChanged("Paid");
				this.OnPaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Restock", DbType="Bit NOT NULL")]
	public bool Restock
	{
		get
		{
			return this._Restock;
		}
		set
		{
			if ((this._Restock != value))
			{
				this.OnRestockChanging(value);
				this.SendPropertyChanging();
				this._Restock = value;
				this.SendPropertyChanged("Restock");
				this.OnRestockChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailTemplate", DbType="NVarChar(200)")]
	public string EmailTemplate
	{
		get
		{
			return this._EmailTemplate;
		}
		set
		{
			if ((this._EmailTemplate != value))
			{
				this.OnEmailTemplateChanging(value);
				this.SendPropertyChanging();
				this._EmailTemplate = value;
				this.SendPropertyChanged("EmailTemplate");
				this.OnEmailTemplateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_Status_TBRole_OrderStatus", Storage="_TBRole_OrderStatus", ThisKey="IDOrderStatus", OtherKey="IDOrderStatus")]
	public EntitySet<TBRole_OrderStatus> TBRole_OrderStatus
	{
		get
		{
			return this._TBRole_OrderStatus;
		}
		set
		{
			this._TBRole_OrderStatus.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_Status_TBOrder", Storage="_TBOrders", ThisKey="IDOrderStatus", OtherKey="IDOrderStatus")]
	public EntitySet<TBOrder> TBOrders
	{
		get
		{
			return this._TBOrders;
		}
		set
		{
			this._TBOrders.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBRole_OrderStatus(TBRole_OrderStatus entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder_Status = this;
	}
	
	private void detach_TBRole_OrderStatus(TBRole_OrderStatus entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder_Status = null;
	}
	
	private void attach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder_Status = this;
	}
	
	private void detach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder_Status = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBOrder_temp")]
public partial class TBOrder_temp : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _AnonID;
	
	private string _EncodedData;
	
	private System.Nullable<System.DateTime> _Created;
	
	private System.Nullable<System.DateTime> _Modified;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAnonIDChanging(string value);
    partial void OnAnonIDChanged();
    partial void OnEncodedDataChanging(string value);
    partial void OnEncodedDataChanged();
    partial void OnCreatedChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedChanged();
    partial void OnModifiedChanging(System.Nullable<System.DateTime> value);
    partial void OnModifiedChanged();
    #endregion
	
	public TBOrder_temp()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnonID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string AnonID
	{
		get
		{
			return this._AnonID;
		}
		set
		{
			if ((this._AnonID != value))
			{
				this.OnAnonIDChanging(value);
				this.SendPropertyChanging();
				this._AnonID = value;
				this.SendPropertyChanged("AnonID");
				this.OnAnonIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EncodedData", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string EncodedData
	{
		get
		{
			return this._EncodedData;
		}
		set
		{
			if ((this._EncodedData != value))
			{
				this.OnEncodedDataChanging(value);
				this.SendPropertyChanging();
				this._EncodedData = value;
				this.SendPropertyChanged("EncodedData");
				this.OnEncodedDataChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime")]
	public System.Nullable<System.DateTime> Created
	{
		get
		{
			return this._Created;
		}
		set
		{
			if ((this._Created != value))
			{
				this.OnCreatedChanging(value);
				this.SendPropertyChanging();
				this._Created = value;
				this.SendPropertyChanged("Created");
				this.OnCreatedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modified", DbType="DateTime")]
	public System.Nullable<System.DateTime> Modified
	{
		get
		{
			return this._Modified;
		}
		set
		{
			if ((this._Modified != value))
			{
				this.OnModifiedChanging(value);
				this.SendPropertyChanging();
				this._Modified = value;
				this.SendPropertyChanged("Modified");
				this.OnModifiedChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPage")]
public partial class TBPage : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDPage;
	
	private string _Page_Title;
	
	private string _Page_ShortContent;
	
	private string _Page_Content;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBPageCategory> _TBPageCategories;
	
	private EntitySet<TBPageMedia> _TBPageMedias;
	
	private EntitySet<TBPost> _TBPosts;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPageChanging(int value);
    partial void OnIDPageChanged();
    partial void OnPage_TitleChanging(string value);
    partial void OnPage_TitleChanged();
    partial void OnPage_ShortContentChanging(string value);
    partial void OnPage_ShortContentChanged();
    partial void OnPage_ContentChanging(string value);
    partial void OnPage_ContentChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBPage()
	{
		this._TBPageCategories = new EntitySet<TBPageCategory>(new Action<TBPageCategory>(this.attach_TBPageCategories), new Action<TBPageCategory>(this.detach_TBPageCategories));
		this._TBPageMedias = new EntitySet<TBPageMedia>(new Action<TBPageMedia>(this.attach_TBPageMedias), new Action<TBPageMedia>(this.detach_TBPageMedias));
		this._TBPosts = new EntitySet<TBPost>(new Action<TBPost>(this.attach_TBPosts), new Action<TBPost>(this.detach_TBPosts));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPage", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDPage
	{
		get
		{
			return this._IDPage;
		}
		set
		{
			if ((this._IDPage != value))
			{
				this.OnIDPageChanging(value);
				this.SendPropertyChanging();
				this._IDPage = value;
				this.SendPropertyChanged("IDPage");
				this.OnIDPageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Page_Title
	{
		get
		{
			return this._Page_Title;
		}
		set
		{
			if ((this._Page_Title != value))
			{
				this.OnPage_TitleChanging(value);
				this.SendPropertyChanging();
				this._Page_Title = value;
				this.SendPropertyChanged("Page_Title");
				this.OnPage_TitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ShortContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Page_ShortContent
	{
		get
		{
			return this._Page_ShortContent;
		}
		set
		{
			if ((this._Page_ShortContent != value))
			{
				this.OnPage_ShortContentChanging(value);
				this.SendPropertyChanging();
				this._Page_ShortContent = value;
				this.SendPropertyChanged("Page_ShortContent");
				this.OnPage_ShortContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Page_Content
	{
		get
		{
			return this._Page_Content;
		}
		set
		{
			if ((this._Page_Content != value))
			{
				this.OnPage_ContentChanging(value);
				this.SendPropertyChanging();
				this._Page_Content = value;
				this.SendPropertyChanged("Page_Content");
				this.OnPage_ContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPage_TBPageCategory", Storage="_TBPageCategories", ThisKey="IDPage", OtherKey="IDPage")]
	public EntitySet<TBPageCategory> TBPageCategories
	{
		get
		{
			return this._TBPageCategories;
		}
		set
		{
			this._TBPageCategories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPage_TBPageMedia", Storage="_TBPageMedias", ThisKey="IDPage", OtherKey="IDPage")]
	public EntitySet<TBPageMedia> TBPageMedias
	{
		get
		{
			return this._TBPageMedias;
		}
		set
		{
			this._TBPageMedias.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPage_TBPost", Storage="_TBPosts", ThisKey="IDPage", OtherKey="IDPage")]
	public EntitySet<TBPost> TBPosts
	{
		get
		{
			return this._TBPosts;
		}
		set
		{
			this._TBPosts.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBPageCategories(TBPageCategory entity)
	{
		this.SendPropertyChanging();
		entity.TBPage = this;
	}
	
	private void detach_TBPageCategories(TBPageCategory entity)
	{
		this.SendPropertyChanging();
		entity.TBPage = null;
	}
	
	private void attach_TBPageMedias(TBPageMedia entity)
	{
		this.SendPropertyChanging();
		entity.TBPage = this;
	}
	
	private void detach_TBPageMedias(TBPageMedia entity)
	{
		this.SendPropertyChanging();
		entity.TBPage = null;
	}
	
	private void attach_TBPosts(TBPost entity)
	{
		this.SendPropertyChanging();
		entity.TBPage = this;
	}
	
	private void detach_TBPosts(TBPost entity)
	{
		this.SendPropertyChanging();
		entity.TBPage = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPageCategory")]
public partial class TBPageCategory : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDPageCategory;
	
	private int _IDPage;
	
	private string _Name;
	
	private string _Description;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBPageCategory_Post> _TBPageCategory_Posts;
	
	private EntityRef<TBPage> _TBPage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPageCategoryChanging(int value);
    partial void OnIDPageCategoryChanged();
    partial void OnIDPageChanging(int value);
    partial void OnIDPageChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBPageCategory()
	{
		this._TBPageCategory_Posts = new EntitySet<TBPageCategory_Post>(new Action<TBPageCategory_Post>(this.attach_TBPageCategory_Posts), new Action<TBPageCategory_Post>(this.detach_TBPageCategory_Posts));
		this._TBPage = default(EntityRef<TBPage>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPageCategory", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDPageCategory
	{
		get
		{
			return this._IDPageCategory;
		}
		set
		{
			if ((this._IDPageCategory != value))
			{
				this.OnIDPageCategoryChanging(value);
				this.SendPropertyChanging();
				this._IDPageCategory = value;
				this.SendPropertyChanged("IDPageCategory");
				this.OnIDPageCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPage", DbType="Int NOT NULL")]
	public int IDPage
	{
		get
		{
			return this._IDPage;
		}
		set
		{
			if ((this._IDPage != value))
			{
				if (this._TBPage.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDPageChanging(value);
				this.SendPropertyChanging();
				this._IDPage = value;
				this.SendPropertyChanged("IDPage");
				this.OnIDPageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPageCategory_TBPageCategory_Post", Storage="_TBPageCategory_Posts", ThisKey="IDPageCategory", OtherKey="IDPageCategory")]
	public EntitySet<TBPageCategory_Post> TBPageCategory_Posts
	{
		get
		{
			return this._TBPageCategory_Posts;
		}
		set
		{
			this._TBPageCategory_Posts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPage_TBPageCategory", Storage="_TBPage", ThisKey="IDPage", OtherKey="IDPage", IsForeignKey=true)]
	public TBPage TBPage
	{
		get
		{
			return this._TBPage.Entity;
		}
		set
		{
			TBPage previousValue = this._TBPage.Entity;
			if (((previousValue != value) 
						|| (this._TBPage.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBPage.Entity = null;
					previousValue.TBPageCategories.Remove(this);
				}
				this._TBPage.Entity = value;
				if ((value != null))
				{
					value.TBPageCategories.Add(this);
					this._IDPage = value.IDPage;
				}
				else
				{
					this._IDPage = default(int);
				}
				this.SendPropertyChanged("TBPage");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBPageCategory_Posts(TBPageCategory_Post entity)
	{
		this.SendPropertyChanging();
		entity.TBPageCategory = this;
	}
	
	private void detach_TBPageCategory_Posts(TBPageCategory_Post entity)
	{
		this.SendPropertyChanging();
		entity.TBPageCategory = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPageCategory_Post")]
public partial class TBPageCategory_Post : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDPageCategory;
	
	private int _IDPost;
	
	private EntityRef<TBPageCategory> _TBPageCategory;
	
	private EntityRef<TBPost> _TBPost;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPageCategoryChanging(int value);
    partial void OnIDPageCategoryChanged();
    partial void OnIDPostChanging(int value);
    partial void OnIDPostChanged();
    #endregion
	
	public TBPageCategory_Post()
	{
		this._TBPageCategory = default(EntityRef<TBPageCategory>);
		this._TBPost = default(EntityRef<TBPost>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPageCategory", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDPageCategory
	{
		get
		{
			return this._IDPageCategory;
		}
		set
		{
			if ((this._IDPageCategory != value))
			{
				if (this._TBPageCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDPageCategoryChanging(value);
				this.SendPropertyChanging();
				this._IDPageCategory = value;
				this.SendPropertyChanged("IDPageCategory");
				this.OnIDPageCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPost", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDPost
	{
		get
		{
			return this._IDPost;
		}
		set
		{
			if ((this._IDPost != value))
			{
				if (this._TBPost.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDPostChanging(value);
				this.SendPropertyChanging();
				this._IDPost = value;
				this.SendPropertyChanged("IDPost");
				this.OnIDPostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPageCategory_TBPageCategory_Post", Storage="_TBPageCategory", ThisKey="IDPageCategory", OtherKey="IDPageCategory", IsForeignKey=true)]
	public TBPageCategory TBPageCategory
	{
		get
		{
			return this._TBPageCategory.Entity;
		}
		set
		{
			TBPageCategory previousValue = this._TBPageCategory.Entity;
			if (((previousValue != value) 
						|| (this._TBPageCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBPageCategory.Entity = null;
					previousValue.TBPageCategory_Posts.Remove(this);
				}
				this._TBPageCategory.Entity = value;
				if ((value != null))
				{
					value.TBPageCategory_Posts.Add(this);
					this._IDPageCategory = value.IDPageCategory;
				}
				else
				{
					this._IDPageCategory = default(int);
				}
				this.SendPropertyChanged("TBPageCategory");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPost_TBPageCategory_Post", Storage="_TBPost", ThisKey="IDPost", OtherKey="IDPost", IsForeignKey=true)]
	public TBPost TBPost
	{
		get
		{
			return this._TBPost.Entity;
		}
		set
		{
			TBPost previousValue = this._TBPost.Entity;
			if (((previousValue != value) 
						|| (this._TBPost.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBPost.Entity = null;
					previousValue.TBPageCategory_Posts.Remove(this);
				}
				this._TBPost.Entity = value;
				if ((value != null))
				{
					value.TBPageCategory_Posts.Add(this);
					this._IDPost = value.IDPost;
				}
				else
				{
					this._IDPost = default(int);
				}
				this.SendPropertyChanged("TBPost");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPageMedia")]
public partial class TBPageMedia : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDPageMedia;
	
	private int _IDPage;
	
	private string _Title;
	
	private string _Description;
	
	private string _MediaUrl;
	
	private bool _Cover;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntityRef<TBPage> _TBPage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPageMediaChanging(int value);
    partial void OnIDPageMediaChanged();
    partial void OnIDPageChanging(int value);
    partial void OnIDPageChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMediaUrlChanging(string value);
    partial void OnMediaUrlChanged();
    partial void OnCoverChanging(bool value);
    partial void OnCoverChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBPageMedia()
	{
		this._TBPage = default(EntityRef<TBPage>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPageMedia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDPageMedia
	{
		get
		{
			return this._IDPageMedia;
		}
		set
		{
			if ((this._IDPageMedia != value))
			{
				this.OnIDPageMediaChanging(value);
				this.SendPropertyChanging();
				this._IDPageMedia = value;
				this.SendPropertyChanged("IDPageMedia");
				this.OnIDPageMediaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPage", DbType="Int NOT NULL")]
	public int IDPage
	{
		get
		{
			return this._IDPage;
		}
		set
		{
			if ((this._IDPage != value))
			{
				if (this._TBPage.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDPageChanging(value);
				this.SendPropertyChanging();
				this._IDPage = value;
				this.SendPropertyChanged("IDPage");
				this.OnIDPageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaUrl", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MediaUrl
	{
		get
		{
			return this._MediaUrl;
		}
		set
		{
			if ((this._MediaUrl != value))
			{
				this.OnMediaUrlChanging(value);
				this.SendPropertyChanging();
				this._MediaUrl = value;
				this.SendPropertyChanged("MediaUrl");
				this.OnMediaUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover", DbType="Bit NOT NULL")]
	public bool Cover
	{
		get
		{
			return this._Cover;
		}
		set
		{
			if ((this._Cover != value))
			{
				this.OnCoverChanging(value);
				this.SendPropertyChanging();
				this._Cover = value;
				this.SendPropertyChanged("Cover");
				this.OnCoverChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPage_TBPageMedia", Storage="_TBPage", ThisKey="IDPage", OtherKey="IDPage", IsForeignKey=true)]
	public TBPage TBPage
	{
		get
		{
			return this._TBPage.Entity;
		}
		set
		{
			TBPage previousValue = this._TBPage.Entity;
			if (((previousValue != value) 
						|| (this._TBPage.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBPage.Entity = null;
					previousValue.TBPageMedias.Remove(this);
				}
				this._TBPage.Entity = value;
				if ((value != null))
				{
					value.TBPageMedias.Add(this);
					this._IDPage = value.IDPage;
				}
				else
				{
					this._IDPage = default(int);
				}
				this.SendPropertyChanged("TBPage");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPayment_Confirmation")]
public partial class TBPayment_Confirmation : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDPaymentConfirmation;
	
	private int _IDOrder;
	
	private string _ReferenceNumber;
	
	private string _Name;
	
	private string _Email;
	
	private string _PhoneNumber;
	
	private string _Bank;
	
	private decimal _Amount;
	
	private System.DateTime _PaymentDate;
	
	private string _Notes;
	
	private string _Image;
	
	private EntityRef<TBOrder> _TBOrder;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPaymentConfirmationChanging(int value);
    partial void OnIDPaymentConfirmationChanged();
    partial void OnIDOrderChanging(int value);
    partial void OnIDOrderChanged();
    partial void OnReferenceNumberChanging(string value);
    partial void OnReferenceNumberChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnAmountChanging(decimal value);
    partial void OnAmountChanged();
    partial void OnPaymentDateChanging(System.DateTime value);
    partial void OnPaymentDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
	
	public TBPayment_Confirmation()
	{
		this._TBOrder = default(EntityRef<TBOrder>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPaymentConfirmation", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDPaymentConfirmation
	{
		get
		{
			return this._IDPaymentConfirmation;
		}
		set
		{
			if ((this._IDPaymentConfirmation != value))
			{
				this.OnIDPaymentConfirmationChanging(value);
				this.SendPropertyChanging();
				this._IDPaymentConfirmation = value;
				this.SendPropertyChanged("IDPaymentConfirmation");
				this.OnIDPaymentConfirmationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrder", DbType="Int NOT NULL")]
	public int IDOrder
	{
		get
		{
			return this._IDOrder;
		}
		set
		{
			if ((this._IDOrder != value))
			{
				if (this._TBOrder.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDOrderChanging(value);
				this.SendPropertyChanging();
				this._IDOrder = value;
				this.SendPropertyChanged("IDOrder");
				this.OnIDOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceNumber", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string ReferenceNumber
	{
		get
		{
			return this._ReferenceNumber;
		}
		set
		{
			if ((this._ReferenceNumber != value))
			{
				this.OnReferenceNumberChanging(value);
				this.SendPropertyChanging();
				this._ReferenceNumber = value;
				this.SendPropertyChanged("ReferenceNumber");
				this.OnReferenceNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="NVarChar(20)")]
	public string PhoneNumber
	{
		get
		{
			return this._PhoneNumber;
		}
		set
		{
			if ((this._PhoneNumber != value))
			{
				this.OnPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._PhoneNumber = value;
				this.SendPropertyChanged("PhoneNumber");
				this.OnPhoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Bank
	{
		get
		{
			return this._Bank;
		}
		set
		{
			if ((this._Bank != value))
			{
				this.OnBankChanging(value);
				this.SendPropertyChanging();
				this._Bank = value;
				this.SendPropertyChanged("Bank");
				this.OnBankChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money NOT NULL")]
	public decimal Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this.OnAmountChanging(value);
				this.SendPropertyChanging();
				this._Amount = value;
				this.SendPropertyChanged("Amount");
				this.OnAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="DateTime NOT NULL")]
	public System.DateTime PaymentDate
	{
		get
		{
			return this._PaymentDate;
		}
		set
		{
			if ((this._PaymentDate != value))
			{
				this.OnPaymentDateChanging(value);
				this.SendPropertyChanging();
				this._PaymentDate = value;
				this.SendPropertyChanged("PaymentDate");
				this.OnPaymentDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(200)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_TBPayment_Confirmation", Storage="_TBOrder", ThisKey="IDOrder", OtherKey="IDOrder", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBOrder TBOrder
	{
		get
		{
			return this._TBOrder.Entity;
		}
		set
		{
			TBOrder previousValue = this._TBOrder.Entity;
			if (((previousValue != value) 
						|| (this._TBOrder.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBOrder.Entity = null;
					previousValue.TBPayment_Confirmations.Remove(this);
				}
				this._TBOrder.Entity = value;
				if ((value != null))
				{
					value.TBPayment_Confirmations.Add(this);
					this._IDOrder = value.IDOrder;
				}
				else
				{
					this._IDOrder = default(int);
				}
				this.SendPropertyChanged("TBOrder");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPayment_Method")]
public partial class TBPayment_Method : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDPaymentMethod;
	
	private string _Name;
	
	private string _Bank;
	
	private string _Owner;
	
	private string _AccountNumber;
	
	private string _Description;
	
	private string _Image;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private string _Type;
	
	private EntitySet<TBOrder> _TBOrders;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPaymentMethodChanging(int value);
    partial void OnIDPaymentMethodChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBankChanging(string value);
    partial void OnBankChanged();
    partial void OnOwnerChanging(string value);
    partial void OnOwnerChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
	
	public TBPayment_Method()
	{
		this._TBOrders = new EntitySet<TBOrder>(new Action<TBOrder>(this.attach_TBOrders), new Action<TBOrder>(this.detach_TBOrders));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPaymentMethod", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDPaymentMethod
	{
		get
		{
			return this._IDPaymentMethod;
		}
		set
		{
			if ((this._IDPaymentMethod != value))
			{
				this.OnIDPaymentMethodChanging(value);
				this.SendPropertyChanging();
				this._IDPaymentMethod = value;
				this.SendPropertyChanged("IDPaymentMethod");
				this.OnIDPaymentMethodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bank", DbType="NVarChar(50)")]
	public string Bank
	{
		get
		{
			return this._Bank;
		}
		set
		{
			if ((this._Bank != value))
			{
				this.OnBankChanging(value);
				this.SendPropertyChanging();
				this._Bank = value;
				this.SendPropertyChanged("Bank");
				this.OnBankChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owner", DbType="NVarChar(50)")]
	public string Owner
	{
		get
		{
			return this._Owner;
		}
		set
		{
			if ((this._Owner != value))
			{
				this.OnOwnerChanging(value);
				this.SendPropertyChanging();
				this._Owner = value;
				this.SendPropertyChanged("Owner");
				this.OnOwnerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="NVarChar(50)")]
	public string AccountNumber
	{
		get
		{
			return this._AccountNumber;
		}
		set
		{
			if ((this._AccountNumber != value))
			{
				this.OnAccountNumberChanging(value);
				this.SendPropertyChanging();
				this._AccountNumber = value;
				this.SendPropertyChanged("AccountNumber");
				this.OnAccountNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NChar(10)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this.OnImageChanging(value);
				this.SendPropertyChanging();
				this._Image = value;
				this.SendPropertyChanged("Image");
				this.OnImageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(150)")]
	public string Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPayment_Method_TBOrder", Storage="_TBOrders", ThisKey="IDPaymentMethod", OtherKey="IDPaymentMethod")]
	public EntitySet<TBOrder> TBOrders
	{
		get
		{
			return this._TBOrders;
		}
		set
		{
			this._TBOrders.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBPayment_Method = this;
	}
	
	private void detach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBPayment_Method = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPost")]
public partial class TBPost : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDPost;
	
	private int _IDPage;
	
	private string _Post_Title;
	
	private string _Post_ShortContent;
	
	private string _Post_Content;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBPageCategory_Post> _TBPageCategory_Posts;
	
	private EntitySet<TBPostMedia> _TBPostMedias;
	
	private EntityRef<TBPage> _TBPage;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPostChanging(int value);
    partial void OnIDPostChanged();
    partial void OnIDPageChanging(int value);
    partial void OnIDPageChanged();
    partial void OnPost_TitleChanging(string value);
    partial void OnPost_TitleChanged();
    partial void OnPost_ShortContentChanging(string value);
    partial void OnPost_ShortContentChanged();
    partial void OnPost_ContentChanging(string value);
    partial void OnPost_ContentChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBPost()
	{
		this._TBPageCategory_Posts = new EntitySet<TBPageCategory_Post>(new Action<TBPageCategory_Post>(this.attach_TBPageCategory_Posts), new Action<TBPageCategory_Post>(this.detach_TBPageCategory_Posts));
		this._TBPostMedias = new EntitySet<TBPostMedia>(new Action<TBPostMedia>(this.attach_TBPostMedias), new Action<TBPostMedia>(this.detach_TBPostMedias));
		this._TBPage = default(EntityRef<TBPage>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPost", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDPost
	{
		get
		{
			return this._IDPost;
		}
		set
		{
			if ((this._IDPost != value))
			{
				this.OnIDPostChanging(value);
				this.SendPropertyChanging();
				this._IDPost = value;
				this.SendPropertyChanged("IDPost");
				this.OnIDPostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPage", DbType="Int NOT NULL")]
	public int IDPage
	{
		get
		{
			return this._IDPage;
		}
		set
		{
			if ((this._IDPage != value))
			{
				if (this._TBPage.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDPageChanging(value);
				this.SendPropertyChanging();
				this._IDPage = value;
				this.SendPropertyChanged("IDPage");
				this.OnIDPageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Post_Title
	{
		get
		{
			return this._Post_Title;
		}
		set
		{
			if ((this._Post_Title != value))
			{
				this.OnPost_TitleChanging(value);
				this.SendPropertyChanging();
				this._Post_Title = value;
				this.SendPropertyChanged("Post_Title");
				this.OnPost_TitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_ShortContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Post_ShortContent
	{
		get
		{
			return this._Post_ShortContent;
		}
		set
		{
			if ((this._Post_ShortContent != value))
			{
				this.OnPost_ShortContentChanging(value);
				this.SendPropertyChanging();
				this._Post_ShortContent = value;
				this.SendPropertyChanged("Post_ShortContent");
				this.OnPost_ShortContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Post_Content
	{
		get
		{
			return this._Post_Content;
		}
		set
		{
			if ((this._Post_Content != value))
			{
				this.OnPost_ContentChanging(value);
				this.SendPropertyChanging();
				this._Post_Content = value;
				this.SendPropertyChanged("Post_Content");
				this.OnPost_ContentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPost_TBPageCategory_Post", Storage="_TBPageCategory_Posts", ThisKey="IDPost", OtherKey="IDPost")]
	public EntitySet<TBPageCategory_Post> TBPageCategory_Posts
	{
		get
		{
			return this._TBPageCategory_Posts;
		}
		set
		{
			this._TBPageCategory_Posts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPost_TBPostMedia", Storage="_TBPostMedias", ThisKey="IDPost", OtherKey="IDPost")]
	public EntitySet<TBPostMedia> TBPostMedias
	{
		get
		{
			return this._TBPostMedias;
		}
		set
		{
			this._TBPostMedias.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPage_TBPost", Storage="_TBPage", ThisKey="IDPage", OtherKey="IDPage", IsForeignKey=true)]
	public TBPage TBPage
	{
		get
		{
			return this._TBPage.Entity;
		}
		set
		{
			TBPage previousValue = this._TBPage.Entity;
			if (((previousValue != value) 
						|| (this._TBPage.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBPage.Entity = null;
					previousValue.TBPosts.Remove(this);
				}
				this._TBPage.Entity = value;
				if ((value != null))
				{
					value.TBPosts.Add(this);
					this._IDPage = value.IDPage;
				}
				else
				{
					this._IDPage = default(int);
				}
				this.SendPropertyChanged("TBPage");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBPageCategory_Posts(TBPageCategory_Post entity)
	{
		this.SendPropertyChanging();
		entity.TBPost = this;
	}
	
	private void detach_TBPageCategory_Posts(TBPageCategory_Post entity)
	{
		this.SendPropertyChanging();
		entity.TBPost = null;
	}
	
	private void attach_TBPostMedias(TBPostMedia entity)
	{
		this.SendPropertyChanging();
		entity.TBPost = this;
	}
	
	private void detach_TBPostMedias(TBPostMedia entity)
	{
		this.SendPropertyChanging();
		entity.TBPost = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPostMedia")]
public partial class TBPostMedia : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDPostMedia;
	
	private int _IDPost;
	
	private string _Title;
	
	private string _Description;
	
	private string _MediaUrl;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntityRef<TBPost> _TBPost;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPostMediaChanging(int value);
    partial void OnIDPostMediaChanged();
    partial void OnIDPostChanging(int value);
    partial void OnIDPostChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMediaUrlChanging(string value);
    partial void OnMediaUrlChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBPostMedia()
	{
		this._TBPost = default(EntityRef<TBPost>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPostMedia", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDPostMedia
	{
		get
		{
			return this._IDPostMedia;
		}
		set
		{
			if ((this._IDPostMedia != value))
			{
				this.OnIDPostMediaChanging(value);
				this.SendPropertyChanging();
				this._IDPostMedia = value;
				this.SendPropertyChanged("IDPostMedia");
				this.OnIDPostMediaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPost", DbType="Int NOT NULL")]
	public int IDPost
	{
		get
		{
			return this._IDPost;
		}
		set
		{
			if ((this._IDPost != value))
			{
				if (this._TBPost.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDPostChanging(value);
				this.SendPropertyChanging();
				this._IDPost = value;
				this.SendPropertyChanged("IDPost");
				this.OnIDPostChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaUrl", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MediaUrl
	{
		get
		{
			return this._MediaUrl;
		}
		set
		{
			if ((this._MediaUrl != value))
			{
				this.OnMediaUrlChanging(value);
				this.SendPropertyChanging();
				this._MediaUrl = value;
				this.SendPropertyChanged("MediaUrl");
				this.OnMediaUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPost_TBPostMedia", Storage="_TBPost", ThisKey="IDPost", OtherKey="IDPost", IsForeignKey=true)]
	public TBPost TBPost
	{
		get
		{
			return this._TBPost.Entity;
		}
		set
		{
			TBPost previousValue = this._TBPost.Entity;
			if (((previousValue != value) 
						|| (this._TBPost.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBPost.Entity = null;
					previousValue.TBPostMedias.Remove(this);
				}
				this._TBPost.Entity = value;
				if ((value != null))
				{
					value.TBPostMedias.Add(this);
					this._IDPost = value.IDPost;
				}
				else
				{
					this._IDPost = default(int);
				}
				this.SendPropertyChanged("TBPost");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBProduct")]
public partial class TBProduct : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDProduct;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private string _ReferenceCode;
	
	private string _Name;
	
	private decimal _PriceBeforeDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _TotalDiscount;
	
	private decimal _Price;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private EntitySet<TBOrder_Detail> _TBOrder_Details;
	
	private EntitySet<TBProduct_Category> _TBProduct_Categories;
	
	private EntitySet<TBProduct_Combination> _TBProduct_Combinations;
	
	private EntitySet<TBProduct_Currency> _TBProduct_Currencies;
	
	private EntitySet<TBProduct_Photo> _TBProduct_Photos;
	
	private EntitySet<TBCustomer_Product> _TBCustomer_Products;
	
	private EntityRef<TBManufacturer> _TBManufacturer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProductChanging(int value);
    partial void OnIDProductChanged();
    partial void OnIDManufacturerChanging(int value);
    partial void OnIDManufacturerChanged();
    partial void OnSequenceNumberChanging(int value);
    partial void OnSequenceNumberChanged();
    partial void OnReferenceCodeChanging(string value);
    partial void OnReferenceCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceBeforeDiscountChanging(decimal value);
    partial void OnPriceBeforeDiscountChanged();
    partial void OnTypeDiscountPercentChanging(bool value);
    partial void OnTypeDiscountPercentChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnTotalDiscountChanging(decimal value);
    partial void OnTotalDiscountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnShortDescriptionChanging(string value);
    partial void OnShortDescriptionChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    partial void OnMetaChanging(string value);
    partial void OnMetaChanged();
    partial void OnMetaDescriptionChanging(string value);
    partial void OnMetaDescriptionChanged();
    partial void OnMetaKeywordChanging(string value);
    partial void OnMetaKeywordChanged();
    #endregion
	
	public TBProduct()
	{
		this._TBOrder_Details = new EntitySet<TBOrder_Detail>(new Action<TBOrder_Detail>(this.attach_TBOrder_Details), new Action<TBOrder_Detail>(this.detach_TBOrder_Details));
		this._TBProduct_Categories = new EntitySet<TBProduct_Category>(new Action<TBProduct_Category>(this.attach_TBProduct_Categories), new Action<TBProduct_Category>(this.detach_TBProduct_Categories));
		this._TBProduct_Combinations = new EntitySet<TBProduct_Combination>(new Action<TBProduct_Combination>(this.attach_TBProduct_Combinations), new Action<TBProduct_Combination>(this.detach_TBProduct_Combinations));
		this._TBProduct_Currencies = new EntitySet<TBProduct_Currency>(new Action<TBProduct_Currency>(this.attach_TBProduct_Currencies), new Action<TBProduct_Currency>(this.detach_TBProduct_Currencies));
		this._TBProduct_Photos = new EntitySet<TBProduct_Photo>(new Action<TBProduct_Photo>(this.attach_TBProduct_Photos), new Action<TBProduct_Photo>(this.detach_TBProduct_Photos));
		this._TBCustomer_Products = new EntitySet<TBCustomer_Product>(new Action<TBCustomer_Product>(this.attach_TBCustomer_Products), new Action<TBCustomer_Product>(this.detach_TBCustomer_Products));
		this._TBManufacturer = default(EntityRef<TBManufacturer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this.OnIDProductChanging(value);
				this.SendPropertyChanging();
				this._IDProduct = value;
				this.SendPropertyChanged("IDProduct");
				this.OnIDProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				if (this._TBManufacturer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDManufacturerChanging(value);
				this.SendPropertyChanging();
				this._IDManufacturer = value;
				this.SendPropertyChanged("IDManufacturer");
				this.OnIDManufacturerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this.OnSequenceNumberChanging(value);
				this.SendPropertyChanging();
				this._SequenceNumber = value;
				this.SendPropertyChanged("SequenceNumber");
				this.OnSequenceNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this.OnReferenceCodeChanging(value);
				this.SendPropertyChanging();
				this._ReferenceCode = value;
				this.SendPropertyChanged("ReferenceCode");
				this.OnReferenceCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this.OnPriceBeforeDiscountChanging(value);
				this.SendPropertyChanging();
				this._PriceBeforeDiscount = value;
				this.SendPropertyChanged("PriceBeforeDiscount");
				this.OnPriceBeforeDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this.OnTypeDiscountPercentChanging(value);
				this.SendPropertyChanging();
				this._TypeDiscountPercent = value;
				this.SendPropertyChanged("TypeDiscountPercent");
				this.OnTypeDiscountPercentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this.OnTotalDiscountChanging(value);
				this.SendPropertyChanging();
				this._TotalDiscount = value;
				this.SendPropertyChanged("TotalDiscount");
				this.OnTotalDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this.OnShortDescriptionChanging(value);
				this.SendPropertyChanging();
				this._ShortDescription = value;
				this.SendPropertyChanged("ShortDescription");
				this.OnShortDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this.OnNoteChanging(value);
				this.SendPropertyChanging();
				this._Note = value;
				this.SendPropertyChanged("Note");
				this.OnNoteChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this.OnMetaChanging(value);
				this.SendPropertyChanging();
				this._Meta = value;
				this.SendPropertyChanged("Meta");
				this.OnMetaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this.OnMetaDescriptionChanging(value);
				this.SendPropertyChanging();
				this._MetaDescription = value;
				this.SendPropertyChanged("MetaDescription");
				this.OnMetaDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this.OnMetaKeywordChanging(value);
				this.SendPropertyChanging();
				this._MetaKeyword = value;
				this.SendPropertyChanged("MetaKeyword");
				this.OnMetaKeywordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBOrder_Detail", Storage="_TBOrder_Details", ThisKey="IDProduct", OtherKey="IDProduct")]
	public EntitySet<TBOrder_Detail> TBOrder_Details
	{
		get
		{
			return this._TBOrder_Details;
		}
		set
		{
			this._TBOrder_Details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBProduct_Category", Storage="_TBProduct_Categories", ThisKey="IDProduct", OtherKey="IDProduct")]
	public EntitySet<TBProduct_Category> TBProduct_Categories
	{
		get
		{
			return this._TBProduct_Categories;
		}
		set
		{
			this._TBProduct_Categories.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBProduct_Combination", Storage="_TBProduct_Combinations", ThisKey="IDProduct", OtherKey="IDProduct")]
	public EntitySet<TBProduct_Combination> TBProduct_Combinations
	{
		get
		{
			return this._TBProduct_Combinations;
		}
		set
		{
			this._TBProduct_Combinations.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBProduct_Currency", Storage="_TBProduct_Currencies", ThisKey="IDProduct", OtherKey="IDProduct")]
	public EntitySet<TBProduct_Currency> TBProduct_Currencies
	{
		get
		{
			return this._TBProduct_Currencies;
		}
		set
		{
			this._TBProduct_Currencies.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBProduct_Photo", Storage="_TBProduct_Photos", ThisKey="IDProduct", OtherKey="IDProduct")]
	public EntitySet<TBProduct_Photo> TBProduct_Photos
	{
		get
		{
			return this._TBProduct_Photos;
		}
		set
		{
			this._TBProduct_Photos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBCustomer_Product", Storage="_TBCustomer_Products", ThisKey="IDProduct", OtherKey="IDProduct")]
	public EntitySet<TBCustomer_Product> TBCustomer_Products
	{
		get
		{
			return this._TBCustomer_Products;
		}
		set
		{
			this._TBCustomer_Products.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBManufacturer_TBProduct", Storage="_TBManufacturer", ThisKey="IDManufacturer", OtherKey="IDManufacturer", IsForeignKey=true)]
	public TBManufacturer TBManufacturer
	{
		get
		{
			return this._TBManufacturer.Entity;
		}
		set
		{
			TBManufacturer previousValue = this._TBManufacturer.Entity;
			if (((previousValue != value) 
						|| (this._TBManufacturer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBManufacturer.Entity = null;
					previousValue.TBProducts.Remove(this);
				}
				this._TBManufacturer.Entity = value;
				if ((value != null))
				{
					value.TBProducts.Add(this);
					this._IDManufacturer = value.IDManufacturer;
				}
				else
				{
					this._IDManufacturer = default(int);
				}
				this.SendPropertyChanged("TBManufacturer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBOrder_Details(TBOrder_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = this;
	}
	
	private void detach_TBOrder_Details(TBOrder_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = null;
	}
	
	private void attach_TBProduct_Categories(TBProduct_Category entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = this;
	}
	
	private void detach_TBProduct_Categories(TBProduct_Category entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = null;
	}
	
	private void attach_TBProduct_Combinations(TBProduct_Combination entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = this;
	}
	
	private void detach_TBProduct_Combinations(TBProduct_Combination entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = null;
	}
	
	private void attach_TBProduct_Currencies(TBProduct_Currency entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = this;
	}
	
	private void detach_TBProduct_Currencies(TBProduct_Currency entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = null;
	}
	
	private void attach_TBProduct_Photos(TBProduct_Photo entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = this;
	}
	
	private void detach_TBProduct_Photos(TBProduct_Photo entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = null;
	}
	
	private void attach_TBCustomer_Products(TBCustomer_Product entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = this;
	}
	
	private void detach_TBCustomer_Products(TBCustomer_Product entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBProduct_Category")]
public partial class TBProduct_Category : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDProduct_Category;
	
	private int _IDProduct;
	
	private int _IDCategory;
	
	private bool _IsDefault;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntityRef<TBCategory> _TBCategory;
	
	private EntityRef<TBProduct> _TBProduct;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProduct_CategoryChanging(int value);
    partial void OnIDProduct_CategoryChanged();
    partial void OnIDProductChanging(int value);
    partial void OnIDProductChanged();
    partial void OnIDCategoryChanging(int value);
    partial void OnIDCategoryChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBProduct_Category()
	{
		this._TBCategory = default(EntityRef<TBCategory>);
		this._TBProduct = default(EntityRef<TBProduct>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Category", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDProduct_Category
	{
		get
		{
			return this._IDProduct_Category;
		}
		set
		{
			if ((this._IDProduct_Category != value))
			{
				this.OnIDProduct_CategoryChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Category = value;
				this.SendPropertyChanged("IDProduct_Category");
				this.OnIDProduct_CategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				if (this._TBProduct.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProductChanging(value);
				this.SendPropertyChanging();
				this._IDProduct = value;
				this.SendPropertyChanged("IDProduct");
				this.OnIDProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				if (this._TBCategory.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCategoryChanging(value);
				this.SendPropertyChanging();
				this._IDCategory = value;
				this.SendPropertyChanged("IDCategory");
				this.OnIDCategoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
	public bool IsDefault
	{
		get
		{
			return this._IsDefault;
		}
		set
		{
			if ((this._IsDefault != value))
			{
				this.OnIsDefaultChanging(value);
				this.SendPropertyChanging();
				this._IsDefault = value;
				this.SendPropertyChanged("IsDefault");
				this.OnIsDefaultChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCategory_TBProduct_Category", Storage="_TBCategory", ThisKey="IDCategory", OtherKey="IDCategory", IsForeignKey=true)]
	public TBCategory TBCategory
	{
		get
		{
			return this._TBCategory.Entity;
		}
		set
		{
			TBCategory previousValue = this._TBCategory.Entity;
			if (((previousValue != value) 
						|| (this._TBCategory.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCategory.Entity = null;
					previousValue.TBProduct_Categories.Remove(this);
				}
				this._TBCategory.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Categories.Add(this);
					this._IDCategory = value.IDCategory;
				}
				else
				{
					this._IDCategory = default(int);
				}
				this.SendPropertyChanged("TBCategory");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBProduct_Category", Storage="_TBProduct", ThisKey="IDProduct", OtherKey="IDProduct", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBProduct TBProduct
	{
		get
		{
			return this._TBProduct.Entity;
		}
		set
		{
			TBProduct previousValue = this._TBProduct.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct.Entity = null;
					previousValue.TBProduct_Categories.Remove(this);
				}
				this._TBProduct.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Categories.Add(this);
					this._IDProduct = value.IDProduct;
				}
				else
				{
					this._IDProduct = default(int);
				}
				this.SendPropertyChanged("TBProduct");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBProduct_Combination")]
public partial class TBProduct_Combination : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDProduct_Combination;
	
	private int _IDProduct;
	
	private int _SequenceNumber;
	
	private string _ReferenceCode;
	
	private string _Name;
	
	private decimal _BasePrice;
	
	private decimal _PriceBeforeImpact;
	
	private decimal _ImpactPrice;
	
	private decimal _PriceAfterImpact;
	
	private decimal _Discount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _TotalDiscount;
	
	private decimal _Price;
	
	private decimal _WeightBeforeImpact;
	
	private decimal _ImpactWeight;
	
	private decimal _Weight;
	
	private int _Quantity;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBWishlist> _TBWishlists;
	
	private EntitySet<TBLog_Stock> _TBLog_Stocks;
	
	private EntitySet<TBOrder_Detail> _TBOrder_Details;
	
	private EntitySet<TBProduct_Combination_Detail> _TBProduct_Combination_Details;
	
	private EntitySet<TBProduct_Combination_Photo> _TBProduct_Combination_Photos;
	
	private EntityRef<TBProduct> _TBProduct;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProduct_CombinationChanging(int value);
    partial void OnIDProduct_CombinationChanged();
    partial void OnIDProductChanging(int value);
    partial void OnIDProductChanged();
    partial void OnSequenceNumberChanging(int value);
    partial void OnSequenceNumberChanged();
    partial void OnReferenceCodeChanging(string value);
    partial void OnReferenceCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBasePriceChanging(decimal value);
    partial void OnBasePriceChanged();
    partial void OnPriceBeforeImpactChanging(decimal value);
    partial void OnPriceBeforeImpactChanged();
    partial void OnImpactPriceChanging(decimal value);
    partial void OnImpactPriceChanged();
    partial void OnPriceAfterImpactChanging(decimal value);
    partial void OnPriceAfterImpactChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnTypeDiscountPercentChanging(bool value);
    partial void OnTypeDiscountPercentChanged();
    partial void OnTotalDiscountChanging(decimal value);
    partial void OnTotalDiscountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnWeightBeforeImpactChanging(decimal value);
    partial void OnWeightBeforeImpactChanged();
    partial void OnImpactWeightChanging(decimal value);
    partial void OnImpactWeightChanged();
    partial void OnWeightChanging(decimal value);
    partial void OnWeightChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBProduct_Combination()
	{
		this._TBWishlists = new EntitySet<TBWishlist>(new Action<TBWishlist>(this.attach_TBWishlists), new Action<TBWishlist>(this.detach_TBWishlists));
		this._TBLog_Stocks = new EntitySet<TBLog_Stock>(new Action<TBLog_Stock>(this.attach_TBLog_Stocks), new Action<TBLog_Stock>(this.detach_TBLog_Stocks));
		this._TBOrder_Details = new EntitySet<TBOrder_Detail>(new Action<TBOrder_Detail>(this.attach_TBOrder_Details), new Action<TBOrder_Detail>(this.detach_TBOrder_Details));
		this._TBProduct_Combination_Details = new EntitySet<TBProduct_Combination_Detail>(new Action<TBProduct_Combination_Detail>(this.attach_TBProduct_Combination_Details), new Action<TBProduct_Combination_Detail>(this.detach_TBProduct_Combination_Details));
		this._TBProduct_Combination_Photos = new EntitySet<TBProduct_Combination_Photo>(new Action<TBProduct_Combination_Photo>(this.attach_TBProduct_Combination_Photos), new Action<TBProduct_Combination_Photo>(this.detach_TBProduct_Combination_Photos));
		this._TBProduct = default(EntityRef<TBProduct>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				this.OnIDProduct_CombinationChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination = value;
				this.SendPropertyChanged("IDProduct_Combination");
				this.OnIDProduct_CombinationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				if (this._TBProduct.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProductChanging(value);
				this.SendPropertyChanging();
				this._IDProduct = value;
				this.SendPropertyChanged("IDProduct");
				this.OnIDProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this.OnSequenceNumberChanging(value);
				this.SendPropertyChanging();
				this._SequenceNumber = value;
				this.SendPropertyChanged("SequenceNumber");
				this.OnSequenceNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this.OnReferenceCodeChanging(value);
				this.SendPropertyChanging();
				this._ReferenceCode = value;
				this.SendPropertyChanged("ReferenceCode");
				this.OnReferenceCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="Money NOT NULL")]
	public decimal BasePrice
	{
		get
		{
			return this._BasePrice;
		}
		set
		{
			if ((this._BasePrice != value))
			{
				this.OnBasePriceChanging(value);
				this.SendPropertyChanging();
				this._BasePrice = value;
				this.SendPropertyChanged("BasePrice");
				this.OnBasePriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeImpact", DbType="Money NOT NULL")]
	public decimal PriceBeforeImpact
	{
		get
		{
			return this._PriceBeforeImpact;
		}
		set
		{
			if ((this._PriceBeforeImpact != value))
			{
				this.OnPriceBeforeImpactChanging(value);
				this.SendPropertyChanging();
				this._PriceBeforeImpact = value;
				this.SendPropertyChanged("PriceBeforeImpact");
				this.OnPriceBeforeImpactChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpactPrice", DbType="Money NOT NULL")]
	public decimal ImpactPrice
	{
		get
		{
			return this._ImpactPrice;
		}
		set
		{
			if ((this._ImpactPrice != value))
			{
				this.OnImpactPriceChanging(value);
				this.SendPropertyChanging();
				this._ImpactPrice = value;
				this.SendPropertyChanged("ImpactPrice");
				this.OnImpactPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceAfterImpact", DbType="Money NOT NULL")]
	public decimal PriceAfterImpact
	{
		get
		{
			return this._PriceAfterImpact;
		}
		set
		{
			if ((this._PriceAfterImpact != value))
			{
				this.OnPriceAfterImpactChanging(value);
				this.SendPropertyChanging();
				this._PriceAfterImpact = value;
				this.SendPropertyChanged("PriceAfterImpact");
				this.OnPriceAfterImpactChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this.OnTypeDiscountPercentChanging(value);
				this.SendPropertyChanging();
				this._TypeDiscountPercent = value;
				this.SendPropertyChanged("TypeDiscountPercent");
				this.OnTypeDiscountPercentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this.OnTotalDiscountChanging(value);
				this.SendPropertyChanging();
				this._TotalDiscount = value;
				this.SendPropertyChanged("TotalDiscount");
				this.OnTotalDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightBeforeImpact", DbType="Decimal(18,2) NOT NULL")]
	public decimal WeightBeforeImpact
	{
		get
		{
			return this._WeightBeforeImpact;
		}
		set
		{
			if ((this._WeightBeforeImpact != value))
			{
				this.OnWeightBeforeImpactChanging(value);
				this.SendPropertyChanging();
				this._WeightBeforeImpact = value;
				this.SendPropertyChanged("WeightBeforeImpact");
				this.OnWeightBeforeImpactChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpactWeight", DbType="Decimal(18,2) NOT NULL")]
	public decimal ImpactWeight
	{
		get
		{
			return this._ImpactWeight;
		}
		set
		{
			if ((this._ImpactWeight != value))
			{
				this.OnImpactWeightChanging(value);
				this.SendPropertyChanging();
				this._ImpactWeight = value;
				this.SendPropertyChanged("ImpactWeight");
				this.OnImpactWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBWishlist", Storage="_TBWishlists", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination")]
	public EntitySet<TBWishlist> TBWishlists
	{
		get
		{
			return this._TBWishlists;
		}
		set
		{
			this._TBWishlists.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBLog_Stock", Storage="_TBLog_Stocks", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination")]
	public EntitySet<TBLog_Stock> TBLog_Stocks
	{
		get
		{
			return this._TBLog_Stocks;
		}
		set
		{
			this._TBLog_Stocks.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBOrder_Detail", Storage="_TBOrder_Details", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination")]
	public EntitySet<TBOrder_Detail> TBOrder_Details
	{
		get
		{
			return this._TBOrder_Details;
		}
		set
		{
			this._TBOrder_Details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBProduct_Combination_Detail", Storage="_TBProduct_Combination_Details", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination")]
	public EntitySet<TBProduct_Combination_Detail> TBProduct_Combination_Details
	{
		get
		{
			return this._TBProduct_Combination_Details;
		}
		set
		{
			this._TBProduct_Combination_Details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBProduct_Combination_Photo", Storage="_TBProduct_Combination_Photos", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination")]
	public EntitySet<TBProduct_Combination_Photo> TBProduct_Combination_Photos
	{
		get
		{
			return this._TBProduct_Combination_Photos;
		}
		set
		{
			this._TBProduct_Combination_Photos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBProduct_Combination", Storage="_TBProduct", ThisKey="IDProduct", OtherKey="IDProduct", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBProduct TBProduct
	{
		get
		{
			return this._TBProduct.Entity;
		}
		set
		{
			TBProduct previousValue = this._TBProduct.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct.Entity = null;
					previousValue.TBProduct_Combinations.Remove(this);
				}
				this._TBProduct.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Combinations.Add(this);
					this._IDProduct = value.IDProduct;
				}
				else
				{
					this._IDProduct = default(int);
				}
				this.SendPropertyChanged("TBProduct");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBWishlists(TBWishlist entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = this;
	}
	
	private void detach_TBWishlists(TBWishlist entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = null;
	}
	
	private void attach_TBLog_Stocks(TBLog_Stock entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = this;
	}
	
	private void detach_TBLog_Stocks(TBLog_Stock entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = null;
	}
	
	private void attach_TBOrder_Details(TBOrder_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = this;
	}
	
	private void detach_TBOrder_Details(TBOrder_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = null;
	}
	
	private void attach_TBProduct_Combination_Details(TBProduct_Combination_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = this;
	}
	
	private void detach_TBProduct_Combination_Details(TBProduct_Combination_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = null;
	}
	
	private void attach_TBProduct_Combination_Photos(TBProduct_Combination_Photo entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = this;
	}
	
	private void detach_TBProduct_Combination_Photos(TBProduct_Combination_Photo entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Combination = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBProduct_Combination_Currency")]
public partial class TBProduct_Combination_Currency : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDProduct_Combination_Currency;
	
	private int _IDProduct_Combination;
	
	private int _IDCurrency;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _TotalDiscount;
	
	private decimal _Price;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProduct_Combination_CurrencyChanging(int value);
    partial void OnIDProduct_Combination_CurrencyChanged();
    partial void OnIDProduct_CombinationChanging(int value);
    partial void OnIDProduct_CombinationChanged();
    partial void OnIDCurrencyChanging(int value);
    partial void OnIDCurrencyChanged();
    partial void OnPriceBeforeDiscountChanging(decimal value);
    partial void OnPriceBeforeDiscountChanged();
    partial void OnTotalDiscountChanging(decimal value);
    partial void OnTotalDiscountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
	
	public TBProduct_Combination_Currency()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination_Currency", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDProduct_Combination_Currency
	{
		get
		{
			return this._IDProduct_Combination_Currency;
		}
		set
		{
			if ((this._IDProduct_Combination_Currency != value))
			{
				this.OnIDProduct_Combination_CurrencyChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination_Currency = value;
				this.SendPropertyChanged("IDProduct_Combination_Currency");
				this.OnIDProduct_Combination_CurrencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int NOT NULL")]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				this.OnIDProduct_CombinationChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination = value;
				this.SendPropertyChanged("IDProduct_Combination");
				this.OnIDProduct_CombinationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCurrency", DbType="Int NOT NULL")]
	public int IDCurrency
	{
		get
		{
			return this._IDCurrency;
		}
		set
		{
			if ((this._IDCurrency != value))
			{
				this.OnIDCurrencyChanging(value);
				this.SendPropertyChanging();
				this._IDCurrency = value;
				this.SendPropertyChanged("IDCurrency");
				this.OnIDCurrencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Decimal(18,2) NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this.OnPriceBeforeDiscountChanging(value);
				this.SendPropertyChanging();
				this._PriceBeforeDiscount = value;
				this.SendPropertyChanged("PriceBeforeDiscount");
				this.OnPriceBeforeDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Decimal(18,2) NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this.OnTotalDiscountChanging(value);
				this.SendPropertyChanging();
				this._TotalDiscount = value;
				this.SendPropertyChanged("TotalDiscount");
				this.OnTotalDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBProduct_Combination_Detail")]
public partial class TBProduct_Combination_Detail : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDProduct_Combination_Detail;
	
	private int _IDProduct_Combination;
	
	private int _IDValue;
	
	private string _NameAttribute;
	
	private string _NameValue;
	
	private System.DateTime _DateInsert;
	
	private EntityRef<TBProduct_Combination> _TBProduct_Combination;
	
	private EntityRef<TBValue> _TBValue;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProduct_Combination_DetailChanging(int value);
    partial void OnIDProduct_Combination_DetailChanged();
    partial void OnIDProduct_CombinationChanging(int value);
    partial void OnIDProduct_CombinationChanged();
    partial void OnIDValueChanging(int value);
    partial void OnIDValueChanged();
    partial void OnNameAttributeChanging(string value);
    partial void OnNameAttributeChanged();
    partial void OnNameValueChanging(string value);
    partial void OnNameValueChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    #endregion
	
	public TBProduct_Combination_Detail()
	{
		this._TBProduct_Combination = default(EntityRef<TBProduct_Combination>);
		this._TBValue = default(EntityRef<TBValue>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination_Detail", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDProduct_Combination_Detail
	{
		get
		{
			return this._IDProduct_Combination_Detail;
		}
		set
		{
			if ((this._IDProduct_Combination_Detail != value))
			{
				this.OnIDProduct_Combination_DetailChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination_Detail = value;
				this.SendPropertyChanged("IDProduct_Combination_Detail");
				this.OnIDProduct_Combination_DetailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int NOT NULL")]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				if (this._TBProduct_Combination.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProduct_CombinationChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination = value;
				this.SendPropertyChanged("IDProduct_Combination");
				this.OnIDProduct_CombinationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				if (this._TBValue.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDValueChanging(value);
				this.SendPropertyChanging();
				this._IDValue = value;
				this.SendPropertyChanged("IDValue");
				this.OnIDValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameAttribute", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string NameAttribute
	{
		get
		{
			return this._NameAttribute;
		}
		set
		{
			if ((this._NameAttribute != value))
			{
				this.OnNameAttributeChanging(value);
				this.SendPropertyChanging();
				this._NameAttribute = value;
				this.SendPropertyChanged("NameAttribute");
				this.OnNameAttributeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string NameValue
	{
		get
		{
			return this._NameValue;
		}
		set
		{
			if ((this._NameValue != value))
			{
				this.OnNameValueChanging(value);
				this.SendPropertyChanging();
				this._NameValue = value;
				this.SendPropertyChanged("NameValue");
				this.OnNameValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBProduct_Combination_Detail", Storage="_TBProduct_Combination", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBProduct_Combination TBProduct_Combination
	{
		get
		{
			return this._TBProduct_Combination.Entity;
		}
		set
		{
			TBProduct_Combination previousValue = this._TBProduct_Combination.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct_Combination.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct_Combination.Entity = null;
					previousValue.TBProduct_Combination_Details.Remove(this);
				}
				this._TBProduct_Combination.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Combination_Details.Add(this);
					this._IDProduct_Combination = value.IDProduct_Combination;
				}
				else
				{
					this._IDProduct_Combination = default(int);
				}
				this.SendPropertyChanged("TBProduct_Combination");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBValue_TBProduct_Combination_Detail", Storage="_TBValue", ThisKey="IDValue", OtherKey="IDValue", IsForeignKey=true)]
	public TBValue TBValue
	{
		get
		{
			return this._TBValue.Entity;
		}
		set
		{
			TBValue previousValue = this._TBValue.Entity;
			if (((previousValue != value) 
						|| (this._TBValue.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBValue.Entity = null;
					previousValue.TBProduct_Combination_Details.Remove(this);
				}
				this._TBValue.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Combination_Details.Add(this);
					this._IDValue = value.IDValue;
				}
				else
				{
					this._IDValue = default(int);
				}
				this.SendPropertyChanged("TBValue");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBProduct_Combination_Photo")]
public partial class TBProduct_Combination_Photo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDProduct_Combination_Photo;
	
	private int _IDProduct_Combination;
	
	private int _IDProduct_Photo;
	
	private System.DateTime _DateInsert;
	
	private EntityRef<TBProduct_Combination> _TBProduct_Combination;
	
	private EntityRef<TBProduct_Photo> _TBProduct_Photo;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProduct_Combination_PhotoChanging(int value);
    partial void OnIDProduct_Combination_PhotoChanged();
    partial void OnIDProduct_CombinationChanging(int value);
    partial void OnIDProduct_CombinationChanged();
    partial void OnIDProduct_PhotoChanging(int value);
    partial void OnIDProduct_PhotoChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    #endregion
	
	public TBProduct_Combination_Photo()
	{
		this._TBProduct_Combination = default(EntityRef<TBProduct_Combination>);
		this._TBProduct_Photo = default(EntityRef<TBProduct_Photo>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination_Photo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDProduct_Combination_Photo
	{
		get
		{
			return this._IDProduct_Combination_Photo;
		}
		set
		{
			if ((this._IDProduct_Combination_Photo != value))
			{
				this.OnIDProduct_Combination_PhotoChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination_Photo = value;
				this.SendPropertyChanged("IDProduct_Combination_Photo");
				this.OnIDProduct_Combination_PhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int NOT NULL")]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				if (this._TBProduct_Combination.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProduct_CombinationChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Combination = value;
				this.SendPropertyChanged("IDProduct_Combination");
				this.OnIDProduct_CombinationChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Photo", DbType="Int NOT NULL")]
	public int IDProduct_Photo
	{
		get
		{
			return this._IDProduct_Photo;
		}
		set
		{
			if ((this._IDProduct_Photo != value))
			{
				if (this._TBProduct_Photo.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProduct_PhotoChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Photo = value;
				this.SendPropertyChanged("IDProduct_Photo");
				this.OnIDProduct_PhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Combination_TBProduct_Combination_Photo", Storage="_TBProduct_Combination", ThisKey="IDProduct_Combination", OtherKey="IDProduct_Combination", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBProduct_Combination TBProduct_Combination
	{
		get
		{
			return this._TBProduct_Combination.Entity;
		}
		set
		{
			TBProduct_Combination previousValue = this._TBProduct_Combination.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct_Combination.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct_Combination.Entity = null;
					previousValue.TBProduct_Combination_Photos.Remove(this);
				}
				this._TBProduct_Combination.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Combination_Photos.Add(this);
					this._IDProduct_Combination = value.IDProduct_Combination;
				}
				else
				{
					this._IDProduct_Combination = default(int);
				}
				this.SendPropertyChanged("TBProduct_Combination");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Photo_TBProduct_Combination_Photo", Storage="_TBProduct_Photo", ThisKey="IDProduct_Photo", OtherKey="IDProduct_Photo", IsForeignKey=true)]
	public TBProduct_Photo TBProduct_Photo
	{
		get
		{
			return this._TBProduct_Photo.Entity;
		}
		set
		{
			TBProduct_Photo previousValue = this._TBProduct_Photo.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct_Photo.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct_Photo.Entity = null;
					previousValue.TBProduct_Combination_Photos.Remove(this);
				}
				this._TBProduct_Photo.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Combination_Photos.Add(this);
					this._IDProduct_Photo = value.IDProduct_Photo;
				}
				else
				{
					this._IDProduct_Photo = default(int);
				}
				this.SendPropertyChanged("TBProduct_Photo");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBProduct_Currency")]
public partial class TBProduct_Currency : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDProduct_Currency;
	
	private int _IDProduct;
	
	private int _IDCurrency;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _TotalDiscount;
	
	private decimal _Price;
	
	private EntityRef<TBCurrency> _TBCurrency;
	
	private EntityRef<TBProduct> _TBProduct;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProduct_CurrencyChanging(int value);
    partial void OnIDProduct_CurrencyChanged();
    partial void OnIDProductChanging(int value);
    partial void OnIDProductChanged();
    partial void OnIDCurrencyChanging(int value);
    partial void OnIDCurrencyChanged();
    partial void OnPriceBeforeDiscountChanging(decimal value);
    partial void OnPriceBeforeDiscountChanged();
    partial void OnTotalDiscountChanging(decimal value);
    partial void OnTotalDiscountChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    #endregion
	
	public TBProduct_Currency()
	{
		this._TBCurrency = default(EntityRef<TBCurrency>);
		this._TBProduct = default(EntityRef<TBProduct>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Currency", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDProduct_Currency
	{
		get
		{
			return this._IDProduct_Currency;
		}
		set
		{
			if ((this._IDProduct_Currency != value))
			{
				this.OnIDProduct_CurrencyChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Currency = value;
				this.SendPropertyChanged("IDProduct_Currency");
				this.OnIDProduct_CurrencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				if (this._TBProduct.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProductChanging(value);
				this.SendPropertyChanging();
				this._IDProduct = value;
				this.SendPropertyChanged("IDProduct");
				this.OnIDProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCurrency", DbType="Int NOT NULL")]
	public int IDCurrency
	{
		get
		{
			return this._IDCurrency;
		}
		set
		{
			if ((this._IDCurrency != value))
			{
				if (this._TBCurrency.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCurrencyChanging(value);
				this.SendPropertyChanging();
				this._IDCurrency = value;
				this.SendPropertyChanged("IDCurrency");
				this.OnIDCurrencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Decimal(18,2) NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this.OnPriceBeforeDiscountChanging(value);
				this.SendPropertyChanging();
				this._PriceBeforeDiscount = value;
				this.SendPropertyChanged("PriceBeforeDiscount");
				this.OnPriceBeforeDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Decimal(18,2) NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this.OnTotalDiscountChanging(value);
				this.SendPropertyChanging();
				this._TotalDiscount = value;
				this.SendPropertyChanged("TotalDiscount");
				this.OnTotalDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2) NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCurrency_TBProduct_Currency", Storage="_TBCurrency", ThisKey="IDCurrency", OtherKey="IDCurrency", IsForeignKey=true)]
	public TBCurrency TBCurrency
	{
		get
		{
			return this._TBCurrency.Entity;
		}
		set
		{
			TBCurrency previousValue = this._TBCurrency.Entity;
			if (((previousValue != value) 
						|| (this._TBCurrency.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCurrency.Entity = null;
					previousValue.TBProduct_Currencies.Remove(this);
				}
				this._TBCurrency.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Currencies.Add(this);
					this._IDCurrency = value.IDCurrency;
				}
				else
				{
					this._IDCurrency = default(int);
				}
				this.SendPropertyChanged("TBCurrency");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBProduct_Currency", Storage="_TBProduct", ThisKey="IDProduct", OtherKey="IDProduct", IsForeignKey=true)]
	public TBProduct TBProduct
	{
		get
		{
			return this._TBProduct.Entity;
		}
		set
		{
			TBProduct previousValue = this._TBProduct.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct.Entity = null;
					previousValue.TBProduct_Currencies.Remove(this);
				}
				this._TBProduct.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Currencies.Add(this);
					this._IDProduct = value.IDProduct;
				}
				else
				{
					this._IDProduct = default(int);
				}
				this.SendPropertyChanged("TBProduct");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBProduct_Photo")]
public partial class TBProduct_Photo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDProduct_Photo;
	
	private int _IDProduct;
	
	private string _Photo;
	
	private bool _IsCover;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBProduct_Combination_Photo> _TBProduct_Combination_Photos;
	
	private EntityRef<TBProduct> _TBProduct;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProduct_PhotoChanging(int value);
    partial void OnIDProduct_PhotoChanged();
    partial void OnIDProductChanging(int value);
    partial void OnIDProductChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OnIsCoverChanging(bool value);
    partial void OnIsCoverChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBProduct_Photo()
	{
		this._TBProduct_Combination_Photos = new EntitySet<TBProduct_Combination_Photo>(new Action<TBProduct_Combination_Photo>(this.attach_TBProduct_Combination_Photos), new Action<TBProduct_Combination_Photo>(this.detach_TBProduct_Combination_Photos));
		this._TBProduct = default(EntityRef<TBProduct>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Photo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDProduct_Photo
	{
		get
		{
			return this._IDProduct_Photo;
		}
		set
		{
			if ((this._IDProduct_Photo != value))
			{
				this.OnIDProduct_PhotoChanging(value);
				this.SendPropertyChanging();
				this._IDProduct_Photo = value;
				this.SendPropertyChanged("IDProduct_Photo");
				this.OnIDProduct_PhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				if (this._TBProduct.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProductChanging(value);
				this.SendPropertyChanging();
				this._IDProduct = value;
				this.SendPropertyChanged("IDProduct");
				this.OnIDProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this.OnPhotoChanging(value);
				this.SendPropertyChanging();
				this._Photo = value;
				this.SendPropertyChanged("Photo");
				this.OnPhotoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCover", DbType="Bit NOT NULL")]
	public bool IsCover
	{
		get
		{
			return this._IsCover;
		}
		set
		{
			if ((this._IsCover != value))
			{
				this.OnIsCoverChanging(value);
				this.SendPropertyChanging();
				this._IsCover = value;
				this.SendPropertyChanged("IsCover");
				this.OnIsCoverChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_Photo_TBProduct_Combination_Photo", Storage="_TBProduct_Combination_Photos", ThisKey="IDProduct_Photo", OtherKey="IDProduct_Photo")]
	public EntitySet<TBProduct_Combination_Photo> TBProduct_Combination_Photos
	{
		get
		{
			return this._TBProduct_Combination_Photos;
		}
		set
		{
			this._TBProduct_Combination_Photos.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBProduct_Photo", Storage="_TBProduct", ThisKey="IDProduct", OtherKey="IDProduct", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBProduct TBProduct
	{
		get
		{
			return this._TBProduct.Entity;
		}
		set
		{
			TBProduct previousValue = this._TBProduct.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct.Entity = null;
					previousValue.TBProduct_Photos.Remove(this);
				}
				this._TBProduct.Entity = value;
				if ((value != null))
				{
					value.TBProduct_Photos.Add(this);
					this._IDProduct = value.IDProduct;
				}
				else
				{
					this._IDProduct = default(int);
				}
				this.SendPropertyChanged("TBProduct");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBProduct_Combination_Photos(TBProduct_Combination_Photo entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Photo = this;
	}
	
	private void detach_TBProduct_Combination_Photos(TBProduct_Combination_Photo entity)
	{
		this.SendPropertyChanging();
		entity.TBProduct_Photo = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBPromo")]
public partial class TBPromo : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDPromo;
	
	private string _Name;
	
	private string _Description;
	
	private string _MinimumRules;
	
	private decimal _MinimumValue;
	
	private int _PromoQty;
	
	private string _DiscountType;
	
	private decimal _Discount;
	
	private decimal _PriceBundling;
	
	private bool _Deflag;
	
	private bool _Active;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBCategory> _TBCategories;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPromoChanging(int value);
    partial void OnIDPromoChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMinimumRulesChanging(string value);
    partial void OnMinimumRulesChanged();
    partial void OnMinimumValueChanging(decimal value);
    partial void OnMinimumValueChanged();
    partial void OnPromoQtyChanging(int value);
    partial void OnPromoQtyChanged();
    partial void OnDiscountTypeChanging(string value);
    partial void OnDiscountTypeChanged();
    partial void OnDiscountChanging(decimal value);
    partial void OnDiscountChanged();
    partial void OnPriceBundlingChanging(decimal value);
    partial void OnPriceBundlingChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBPromo()
	{
		this._TBCategories = new EntitySet<TBCategory>(new Action<TBCategory>(this.attach_TBCategories), new Action<TBCategory>(this.detach_TBCategories));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPromo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDPromo
	{
		get
		{
			return this._IDPromo;
		}
		set
		{
			if ((this._IDPromo != value))
			{
				this.OnIDPromoChanging(value);
				this.SendPropertyChanging();
				this._IDPromo = value;
				this.SendPropertyChanged("IDPromo");
				this.OnIDPromoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumRules", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MinimumRules
	{
		get
		{
			return this._MinimumRules;
		}
		set
		{
			if ((this._MinimumRules != value))
			{
				this.OnMinimumRulesChanging(value);
				this.SendPropertyChanging();
				this._MinimumRules = value;
				this.SendPropertyChanged("MinimumRules");
				this.OnMinimumRulesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumValue", DbType="Decimal(19,2) NOT NULL")]
	public decimal MinimumValue
	{
		get
		{
			return this._MinimumValue;
		}
		set
		{
			if ((this._MinimumValue != value))
			{
				this.OnMinimumValueChanging(value);
				this.SendPropertyChanging();
				this._MinimumValue = value;
				this.SendPropertyChanged("MinimumValue");
				this.OnMinimumValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromoQty", DbType="Int NOT NULL")]
	public int PromoQty
	{
		get
		{
			return this._PromoQty;
		}
		set
		{
			if ((this._PromoQty != value))
			{
				this.OnPromoQtyChanging(value);
				this.SendPropertyChanging();
				this._PromoQty = value;
				this.SendPropertyChanged("PromoQty");
				this.OnPromoQtyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string DiscountType
	{
		get
		{
			return this._DiscountType;
		}
		set
		{
			if ((this._DiscountType != value))
			{
				this.OnDiscountTypeChanging(value);
				this.SendPropertyChanging();
				this._DiscountType = value;
				this.SendPropertyChanged("DiscountType");
				this.OnDiscountTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(19,2) NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this.OnDiscountChanging(value);
				this.SendPropertyChanging();
				this._Discount = value;
				this.SendPropertyChanged("Discount");
				this.OnDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBundling", DbType="Money NOT NULL")]
	public decimal PriceBundling
	{
		get
		{
			return this._PriceBundling;
		}
		set
		{
			if ((this._PriceBundling != value))
			{
				this.OnPriceBundlingChanging(value);
				this.SendPropertyChanging();
				this._PriceBundling = value;
				this.SendPropertyChanged("PriceBundling");
				this.OnPriceBundlingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPromo_TBCategory", Storage="_TBCategories", ThisKey="IDPromo", OtherKey="IDPromo")]
	public EntitySet<TBCategory> TBCategories
	{
		get
		{
			return this._TBCategories;
		}
		set
		{
			this._TBCategories.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBCategories(TBCategory entity)
	{
		this.SendPropertyChanging();
		entity.TBPromo = this;
	}
	
	private void detach_TBCategories(TBCategory entity)
	{
		this.SendPropertyChanging();
		entity.TBPromo = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBProvince")]
public partial class TBProvince : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDProvince;
	
	private int _IDCountry;
	
	private string _Name;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBAddress> _TBAddresses;
	
	private EntitySet<TBCity> _TBCities;
	
	private EntityRef<TBCountry> _TBCountry;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProvinceChanging(int value);
    partial void OnIDProvinceChanged();
    partial void OnIDCountryChanging(int value);
    partial void OnIDCountryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBProvince()
	{
		this._TBAddresses = new EntitySet<TBAddress>(new Action<TBAddress>(this.attach_TBAddresses), new Action<TBAddress>(this.detach_TBAddresses));
		this._TBCities = new EntitySet<TBCity>(new Action<TBCity>(this.attach_TBCities), new Action<TBCity>(this.detach_TBCities));
		this._TBCountry = default(EntityRef<TBCountry>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProvince", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDProvince
	{
		get
		{
			return this._IDProvince;
		}
		set
		{
			if ((this._IDProvince != value))
			{
				this.OnIDProvinceChanging(value);
				this.SendPropertyChanging();
				this._IDProvince = value;
				this.SendPropertyChanged("IDProvince");
				this.OnIDProvinceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCountry", DbType="Int NOT NULL")]
	public int IDCountry
	{
		get
		{
			return this._IDCountry;
		}
		set
		{
			if ((this._IDCountry != value))
			{
				if (this._TBCountry.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCountryChanging(value);
				this.SendPropertyChanging();
				this._IDCountry = value;
				this.SendPropertyChanged("IDCountry");
				this.OnIDCountryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProvince_TBAddress", Storage="_TBAddresses", ThisKey="IDProvince", OtherKey="IDProvince")]
	public EntitySet<TBAddress> TBAddresses
	{
		get
		{
			return this._TBAddresses;
		}
		set
		{
			this._TBAddresses.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProvince_TBCity", Storage="_TBCities", ThisKey="IDProvince", OtherKey="IDProvince")]
	public EntitySet<TBCity> TBCities
	{
		get
		{
			return this._TBCities;
		}
		set
		{
			this._TBCities.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCountry_TBProvince", Storage="_TBCountry", ThisKey="IDCountry", OtherKey="IDCountry", IsForeignKey=true)]
	public TBCountry TBCountry
	{
		get
		{
			return this._TBCountry.Entity;
		}
		set
		{
			TBCountry previousValue = this._TBCountry.Entity;
			if (((previousValue != value) 
						|| (this._TBCountry.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCountry.Entity = null;
					previousValue.TBProvinces.Remove(this);
				}
				this._TBCountry.Entity = value;
				if ((value != null))
				{
					value.TBProvinces.Add(this);
					this._IDCountry = value.IDCountry;
				}
				else
				{
					this._IDCountry = default(int);
				}
				this.SendPropertyChanged("TBCountry");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBProvince = this;
	}
	
	private void detach_TBAddresses(TBAddress entity)
	{
		this.SendPropertyChanging();
		entity.TBProvince = null;
	}
	
	private void attach_TBCities(TBCity entity)
	{
		this.SendPropertyChanging();
		entity.TBProvince = this;
	}
	
	private void detach_TBCities(TBCity entity)
	{
		this.SendPropertyChanging();
		entity.TBProvince = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBRole")]
public partial class TBRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDRole;
	
	private string _Name;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBEmployee> _TBEmployees;
	
	private EntitySet<TBRole_Menu> _TBRole_Menus;
	
	private EntitySet<TBRole_OrderStatus> _TBRole_OrderStatus;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRoleChanging(int value);
    partial void OnIDRoleChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBRole()
	{
		this._TBEmployees = new EntitySet<TBEmployee>(new Action<TBEmployee>(this.attach_TBEmployees), new Action<TBEmployee>(this.detach_TBEmployees));
		this._TBRole_Menus = new EntitySet<TBRole_Menu>(new Action<TBRole_Menu>(this.attach_TBRole_Menus), new Action<TBRole_Menu>(this.detach_TBRole_Menus));
		this._TBRole_OrderStatus = new EntitySet<TBRole_OrderStatus>(new Action<TBRole_OrderStatus>(this.attach_TBRole_OrderStatus), new Action<TBRole_OrderStatus>(this.detach_TBRole_OrderStatus));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRole", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDRole
	{
		get
		{
			return this._IDRole;
		}
		set
		{
			if ((this._IDRole != value))
			{
				this.OnIDRoleChanging(value);
				this.SendPropertyChanging();
				this._IDRole = value;
				this.SendPropertyChanged("IDRole");
				this.OnIDRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBRole_TBEmployee", Storage="_TBEmployees", ThisKey="IDRole", OtherKey="IDRole")]
	public EntitySet<TBEmployee> TBEmployees
	{
		get
		{
			return this._TBEmployees;
		}
		set
		{
			this._TBEmployees.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBRole_TBRole_Menu", Storage="_TBRole_Menus", ThisKey="IDRole", OtherKey="IDRole")]
	public EntitySet<TBRole_Menu> TBRole_Menus
	{
		get
		{
			return this._TBRole_Menus;
		}
		set
		{
			this._TBRole_Menus.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBRole_TBRole_OrderStatus", Storage="_TBRole_OrderStatus", ThisKey="IDRole", OtherKey="IDRole")]
	public EntitySet<TBRole_OrderStatus> TBRole_OrderStatus
	{
		get
		{
			return this._TBRole_OrderStatus;
		}
		set
		{
			this._TBRole_OrderStatus.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBEmployees(TBEmployee entity)
	{
		this.SendPropertyChanging();
		entity.TBRole = this;
	}
	
	private void detach_TBEmployees(TBEmployee entity)
	{
		this.SendPropertyChanging();
		entity.TBRole = null;
	}
	
	private void attach_TBRole_Menus(TBRole_Menu entity)
	{
		this.SendPropertyChanging();
		entity.TBRole = this;
	}
	
	private void detach_TBRole_Menus(TBRole_Menu entity)
	{
		this.SendPropertyChanging();
		entity.TBRole = null;
	}
	
	private void attach_TBRole_OrderStatus(TBRole_OrderStatus entity)
	{
		this.SendPropertyChanging();
		entity.TBRole = this;
	}
	
	private void detach_TBRole_OrderStatus(TBRole_OrderStatus entity)
	{
		this.SendPropertyChanging();
		entity.TBRole = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBRole_Menu")]
public partial class TBRole_Menu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDRole;
	
	private int _IDMenu;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntityRef<TBMenu> _TBMenu;
	
	private EntityRef<TBRole> _TBRole;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRoleChanging(int value);
    partial void OnIDRoleChanged();
    partial void OnIDMenuChanging(int value);
    partial void OnIDMenuChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBRole_Menu()
	{
		this._TBMenu = default(EntityRef<TBMenu>);
		this._TBRole = default(EntityRef<TBRole>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRole", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDRole
	{
		get
		{
			return this._IDRole;
		}
		set
		{
			if ((this._IDRole != value))
			{
				if (this._TBRole.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDRoleChanging(value);
				this.SendPropertyChanging();
				this._IDRole = value;
				this.SendPropertyChanged("IDRole");
				this.OnIDRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMenu", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDMenu
	{
		get
		{
			return this._IDMenu;
		}
		set
		{
			if ((this._IDMenu != value))
			{
				if (this._TBMenu.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDMenuChanging(value);
				this.SendPropertyChanging();
				this._IDMenu = value;
				this.SendPropertyChanged("IDMenu");
				this.OnIDMenuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBMenu_TBRole_Menu", Storage="_TBMenu", ThisKey="IDMenu", OtherKey="IDMenu", IsForeignKey=true)]
	public TBMenu TBMenu
	{
		get
		{
			return this._TBMenu.Entity;
		}
		set
		{
			TBMenu previousValue = this._TBMenu.Entity;
			if (((previousValue != value) 
						|| (this._TBMenu.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBMenu.Entity = null;
					previousValue.TBRole_Menus.Remove(this);
				}
				this._TBMenu.Entity = value;
				if ((value != null))
				{
					value.TBRole_Menus.Add(this);
					this._IDMenu = value.IDMenu;
				}
				else
				{
					this._IDMenu = default(int);
				}
				this.SendPropertyChanged("TBMenu");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBRole_TBRole_Menu", Storage="_TBRole", ThisKey="IDRole", OtherKey="IDRole", IsForeignKey=true)]
	public TBRole TBRole
	{
		get
		{
			return this._TBRole.Entity;
		}
		set
		{
			TBRole previousValue = this._TBRole.Entity;
			if (((previousValue != value) 
						|| (this._TBRole.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBRole.Entity = null;
					previousValue.TBRole_Menus.Remove(this);
				}
				this._TBRole.Entity = value;
				if ((value != null))
				{
					value.TBRole_Menus.Add(this);
					this._IDRole = value.IDRole;
				}
				else
				{
					this._IDRole = default(int);
				}
				this.SendPropertyChanged("TBRole");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBRole_OrderStatus")]
public partial class TBRole_OrderStatus : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDRole;
	
	private int _IDOrderStatus;
	
	private System.Nullable<bool> _IsNotif;
	
	private System.Nullable<System.DateTime> _DateInsert;
	
	private System.Nullable<System.DateTime> _DateLastUpdate;
	
	private EntityRef<TBOrder_Status> _TBOrder_Status;
	
	private EntityRef<TBRole> _TBRole;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRoleChanging(int value);
    partial void OnIDRoleChanged();
    partial void OnIDOrderStatusChanging(int value);
    partial void OnIDOrderStatusChanged();
    partial void OnIsNotifChanging(System.Nullable<bool> value);
    partial void OnIsNotifChanged();
    partial void OnDateInsertChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBRole_OrderStatus()
	{
		this._TBOrder_Status = default(EntityRef<TBOrder_Status>);
		this._TBRole = default(EntityRef<TBRole>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRole", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDRole
	{
		get
		{
			return this._IDRole;
		}
		set
		{
			if ((this._IDRole != value))
			{
				if (this._TBRole.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDRoleChanging(value);
				this.SendPropertyChanging();
				this._IDRole = value;
				this.SendPropertyChanged("IDRole");
				this.OnIDRoleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrderStatus", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDOrderStatus
	{
		get
		{
			return this._IDOrderStatus;
		}
		set
		{
			if ((this._IDOrderStatus != value))
			{
				if (this._TBOrder_Status.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDOrderStatusChanging(value);
				this.SendPropertyChanging();
				this._IDOrderStatus = value;
				this.SendPropertyChanged("IDOrderStatus");
				this.OnIDOrderStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotif", DbType="Bit")]
	public System.Nullable<bool> IsNotif
	{
		get
		{
			return this._IsNotif;
		}
		set
		{
			if ((this._IsNotif != value))
			{
				this.OnIsNotifChanging(value);
				this.SendPropertyChanging();
				this._IsNotif = value;
				this.SendPropertyChanged("IsNotif");
				this.OnIsNotifChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime")]
	public System.Nullable<System.DateTime> DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_Status_TBRole_OrderStatus", Storage="_TBOrder_Status", ThisKey="IDOrderStatus", OtherKey="IDOrderStatus", IsForeignKey=true)]
	public TBOrder_Status TBOrder_Status
	{
		get
		{
			return this._TBOrder_Status.Entity;
		}
		set
		{
			TBOrder_Status previousValue = this._TBOrder_Status.Entity;
			if (((previousValue != value) 
						|| (this._TBOrder_Status.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBOrder_Status.Entity = null;
					previousValue.TBRole_OrderStatus.Remove(this);
				}
				this._TBOrder_Status.Entity = value;
				if ((value != null))
				{
					value.TBRole_OrderStatus.Add(this);
					this._IDOrderStatus = value.IDOrderStatus;
				}
				else
				{
					this._IDOrderStatus = default(int);
				}
				this.SendPropertyChanged("TBOrder_Status");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBRole_TBRole_OrderStatus", Storage="_TBRole", ThisKey="IDRole", OtherKey="IDRole", IsForeignKey=true)]
	public TBRole TBRole
	{
		get
		{
			return this._TBRole.Entity;
		}
		set
		{
			TBRole previousValue = this._TBRole.Entity;
			if (((previousValue != value) 
						|| (this._TBRole.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBRole.Entity = null;
					previousValue.TBRole_OrderStatus.Remove(this);
				}
				this._TBRole.Entity = value;
				if ((value != null))
				{
					value.TBRole_OrderStatus.Add(this);
					this._IDRole = value.IDRole;
				}
				else
				{
					this._IDRole = default(int);
				}
				this.SendPropertyChanged("TBRole");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBShipping")]
public partial class TBShipping : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDShipping;
	
	private int _IDCarrier;
	
	private int _IDDistrict;
	
	private decimal _Price;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBOrder> _TBOrders;
	
	private EntityRef<TBCarrier> _TBCarrier;
	
	private EntityRef<TBDistrict> _TBDistrict;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDShippingChanging(int value);
    partial void OnIDShippingChanged();
    partial void OnIDCarrierChanging(int value);
    partial void OnIDCarrierChanged();
    partial void OnIDDistrictChanging(int value);
    partial void OnIDDistrictChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBShipping()
	{
		this._TBOrders = new EntitySet<TBOrder>(new Action<TBOrder>(this.attach_TBOrders), new Action<TBOrder>(this.detach_TBOrders));
		this._TBCarrier = default(EntityRef<TBCarrier>);
		this._TBDistrict = default(EntityRef<TBDistrict>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDShipping", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDShipping
	{
		get
		{
			return this._IDShipping;
		}
		set
		{
			if ((this._IDShipping != value))
			{
				this.OnIDShippingChanging(value);
				this.SendPropertyChanging();
				this._IDShipping = value;
				this.SendPropertyChanged("IDShipping");
				this.OnIDShippingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCarrier", DbType="Int NOT NULL")]
	public int IDCarrier
	{
		get
		{
			return this._IDCarrier;
		}
		set
		{
			if ((this._IDCarrier != value))
			{
				if (this._TBCarrier.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCarrierChanging(value);
				this.SendPropertyChanging();
				this._IDCarrier = value;
				this.SendPropertyChanged("IDCarrier");
				this.OnIDCarrierChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDistrict", DbType="Int NOT NULL")]
	public int IDDistrict
	{
		get
		{
			return this._IDDistrict;
		}
		set
		{
			if ((this._IDDistrict != value))
			{
				if (this._TBDistrict.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDDistrictChanging(value);
				this.SendPropertyChanging();
				this._IDDistrict = value;
				this.SendPropertyChanged("IDDistrict");
				this.OnIDDistrictChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this.OnPriceChanging(value);
				this.SendPropertyChanging();
				this._Price = value;
				this.SendPropertyChanged("Price");
				this.OnPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBShipping_TBOrder", Storage="_TBOrders", ThisKey="IDShipping", OtherKey="IDShipping")]
	public EntitySet<TBOrder> TBOrders
	{
		get
		{
			return this._TBOrders;
		}
		set
		{
			this._TBOrders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCarrier_TBShipping", Storage="_TBCarrier", ThisKey="IDCarrier", OtherKey="IDCarrier", IsForeignKey=true)]
	public TBCarrier TBCarrier
	{
		get
		{
			return this._TBCarrier.Entity;
		}
		set
		{
			TBCarrier previousValue = this._TBCarrier.Entity;
			if (((previousValue != value) 
						|| (this._TBCarrier.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCarrier.Entity = null;
					previousValue.TBShippings.Remove(this);
				}
				this._TBCarrier.Entity = value;
				if ((value != null))
				{
					value.TBShippings.Add(this);
					this._IDCarrier = value.IDCarrier;
				}
				else
				{
					this._IDCarrier = default(int);
				}
				this.SendPropertyChanged("TBCarrier");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBDistrict_TBShipping", Storage="_TBDistrict", ThisKey="IDDistrict", OtherKey="IDDistrict", IsForeignKey=true)]
	public TBDistrict TBDistrict
	{
		get
		{
			return this._TBDistrict.Entity;
		}
		set
		{
			TBDistrict previousValue = this._TBDistrict.Entity;
			if (((previousValue != value) 
						|| (this._TBDistrict.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBDistrict.Entity = null;
					previousValue.TBShippings.Remove(this);
				}
				this._TBDistrict.Entity = value;
				if ((value != null))
				{
					value.TBShippings.Add(this);
					this._IDDistrict = value.IDDistrict;
				}
				else
				{
					this._IDDistrict = default(int);
				}
				this.SendPropertyChanged("TBDistrict");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBShipping = this;
	}
	
	private void detach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBShipping = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBValue")]
public partial class TBValue : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDValue;
	
	private int _IDAttribute;
	
	private string _Name;
	
	private string _RGBColor;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBProduct_Combination_Detail> _TBProduct_Combination_Details;
	
	private EntityRef<TBAttribute> _TBAttribute;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDValueChanging(int value);
    partial void OnIDValueChanged();
    partial void OnIDAttributeChanging(int value);
    partial void OnIDAttributeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRGBColorChanging(string value);
    partial void OnRGBColorChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBValue()
	{
		this._TBProduct_Combination_Details = new EntitySet<TBProduct_Combination_Detail>(new Action<TBProduct_Combination_Detail>(this.attach_TBProduct_Combination_Details), new Action<TBProduct_Combination_Detail>(this.detach_TBProduct_Combination_Details));
		this._TBAttribute = default(EntityRef<TBAttribute>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this.OnIDValueChanging(value);
				this.SendPropertyChanging();
				this._IDValue = value;
				this.SendPropertyChanged("IDValue");
				this.OnIDValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAttribute", DbType="Int NOT NULL")]
	public int IDAttribute
	{
		get
		{
			return this._IDAttribute;
		}
		set
		{
			if ((this._IDAttribute != value))
			{
				if (this._TBAttribute.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDAttributeChanging(value);
				this.SendPropertyChanging();
				this._IDAttribute = value;
				this.SendPropertyChanged("IDAttribute");
				this.OnIDAttributeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGBColor", DbType="NVarChar(10)")]
	public string RGBColor
	{
		get
		{
			return this._RGBColor;
		}
		set
		{
			if ((this._RGBColor != value))
			{
				this.OnRGBColorChanging(value);
				this.SendPropertyChanging();
				this._RGBColor = value;
				this.SendPropertyChanged("RGBColor");
				this.OnRGBColorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBValue_TBProduct_Combination_Detail", Storage="_TBProduct_Combination_Details", ThisKey="IDValue", OtherKey="IDValue")]
	public EntitySet<TBProduct_Combination_Detail> TBProduct_Combination_Details
	{
		get
		{
			return this._TBProduct_Combination_Details;
		}
		set
		{
			this._TBProduct_Combination_Details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBAttribute_TBValue", Storage="_TBAttribute", ThisKey="IDAttribute", OtherKey="IDAttribute", IsForeignKey=true)]
	public TBAttribute TBAttribute
	{
		get
		{
			return this._TBAttribute.Entity;
		}
		set
		{
			TBAttribute previousValue = this._TBAttribute.Entity;
			if (((previousValue != value) 
						|| (this._TBAttribute.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBAttribute.Entity = null;
					previousValue.TBValues.Remove(this);
				}
				this._TBAttribute.Entity = value;
				if ((value != null))
				{
					value.TBValues.Add(this);
					this._IDAttribute = value.IDAttribute;
				}
				else
				{
					this._IDAttribute = default(int);
				}
				this.SendPropertyChanged("TBAttribute");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBProduct_Combination_Details(TBProduct_Combination_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBValue = this;
	}
	
	private void detach_TBProduct_Combination_Details(TBProduct_Combination_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBValue = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBVoucher")]
public partial class TBVoucher : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDVoucher;
	
	private System.Nullable<int> _IDCustomer;
	
	private string _Name;
	
	private string _Code;
	
	private string _Description;
	
	private string _VoucherType;
	
	private decimal _Value;
	
	private int _TotalAvailable;
	
	private int _Used;
	
	private decimal _MinimumAmount;
	
	private System.DateTime _StartDate;
	
	private System.DateTime _EndDate;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private EntitySet<TBOrder> _TBOrders;
	
	private EntityRef<TBCustomer> _TBCustomer;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDVoucherChanging(int value);
    partial void OnIDVoucherChanged();
    partial void OnIDCustomerChanging(System.Nullable<int> value);
    partial void OnIDCustomerChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVoucherTypeChanging(string value);
    partial void OnVoucherTypeChanged();
    partial void OnValueChanging(decimal value);
    partial void OnValueChanged();
    partial void OnTotalAvailableChanging(int value);
    partial void OnTotalAvailableChanged();
    partial void OnUsedChanging(int value);
    partial void OnUsedChanged();
    partial void OnMinimumAmountChanging(decimal value);
    partial void OnMinimumAmountChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnActiveChanging(bool value);
    partial void OnActiveChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    #endregion
	
	public TBVoucher()
	{
		this._TBOrders = new EntitySet<TBOrder>(new Action<TBOrder>(this.attach_TBOrders), new Action<TBOrder>(this.detach_TBOrders));
		this._TBCustomer = default(EntityRef<TBCustomer>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVoucher", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDVoucher
	{
		get
		{
			return this._IDVoucher;
		}
		set
		{
			if ((this._IDVoucher != value))
			{
				this.OnIDVoucherChanging(value);
				this.SendPropertyChanging();
				this._IDVoucher = value;
				this.SendPropertyChanged("IDVoucher");
				this.OnIDVoucherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer", DbType="Int")]
	public System.Nullable<int> IDCustomer
	{
		get
		{
			return this._IDCustomer;
		}
		set
		{
			if ((this._IDCustomer != value))
			{
				if (this._TBCustomer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCustomerChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer = value;
				this.SendPropertyChanged("IDCustomer");
				this.OnIDCustomerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Code
	{
		get
		{
			return this._Code;
		}
		set
		{
			if ((this._Code != value))
			{
				this.OnCodeChanging(value);
				this.SendPropertyChanging();
				this._Code = value;
				this.SendPropertyChanged("Code");
				this.OnCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VoucherType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string VoucherType
	{
		get
		{
			return this._VoucherType;
		}
		set
		{
			if ((this._VoucherType != value))
			{
				this.OnVoucherTypeChanging(value);
				this.SendPropertyChanging();
				this._VoucherType = value;
				this.SendPropertyChanged("VoucherType");
				this.OnVoucherTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(19,2) NOT NULL")]
	public decimal Value
	{
		get
		{
			return this._Value;
		}
		set
		{
			if ((this._Value != value))
			{
				this.OnValueChanging(value);
				this.SendPropertyChanging();
				this._Value = value;
				this.SendPropertyChanged("Value");
				this.OnValueChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAvailable", DbType="Int NOT NULL")]
	public int TotalAvailable
	{
		get
		{
			return this._TotalAvailable;
		}
		set
		{
			if ((this._TotalAvailable != value))
			{
				this.OnTotalAvailableChanging(value);
				this.SendPropertyChanging();
				this._TotalAvailable = value;
				this.SendPropertyChanged("TotalAvailable");
				this.OnTotalAvailableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Used", DbType="Int NOT NULL")]
	public int Used
	{
		get
		{
			return this._Used;
		}
		set
		{
			if ((this._Used != value))
			{
				this.OnUsedChanging(value);
				this.SendPropertyChanging();
				this._Used = value;
				this.SendPropertyChanged("Used");
				this.OnUsedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumAmount", DbType="Money NOT NULL")]
	public decimal MinimumAmount
	{
		get
		{
			return this._MinimumAmount;
		}
		set
		{
			if ((this._MinimumAmount != value))
			{
				this.OnMinimumAmountChanging(value);
				this.SendPropertyChanging();
				this._MinimumAmount = value;
				this.SendPropertyChanged("MinimumAmount");
				this.OnMinimumAmountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
	public System.DateTime StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
	public System.DateTime EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this.OnActiveChanging(value);
				this.SendPropertyChanging();
				this._Active = value;
				this.SendPropertyChanged("Active");
				this.OnActiveChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBVoucher_TBOrder", Storage="_TBOrders", ThisKey="IDVoucher", OtherKey="IDVoucher")]
	public EntitySet<TBOrder> TBOrders
	{
		get
		{
			return this._TBOrders;
		}
		set
		{
			this._TBOrders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBVoucher", Storage="_TBCustomer", ThisKey="IDCustomer", OtherKey="IDCustomer", IsForeignKey=true)]
	public TBCustomer TBCustomer
	{
		get
		{
			return this._TBCustomer.Entity;
		}
		set
		{
			TBCustomer previousValue = this._TBCustomer.Entity;
			if (((previousValue != value) 
						|| (this._TBCustomer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCustomer.Entity = null;
					previousValue.TBVouchers.Remove(this);
				}
				this._TBCustomer.Entity = value;
				if ((value != null))
				{
					value.TBVouchers.Add(this);
					this._IDCustomer = value.IDCustomer;
				}
				else
				{
					this._IDCustomer = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBCustomer");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBVoucher = this;
	}
	
	private void detach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBVoucher = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBCustomer_Product")]
public partial class TBCustomer_Product : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDCustomer_Product;
	
	private System.Nullable<int> _IDCustomer;
	
	private System.Nullable<int> _IDProduct;
	
	private System.Nullable<System.DateTime> _StartDate;
	
	private System.Nullable<System.DateTime> _EndDate;
	
	private System.Nullable<System.DateTime> _UpdateDate;
	
	private EntitySet<TBOrder> _TBOrders;
	
	private EntityRef<TBCustomer> _TBCustomer;
	
	private EntityRef<TBProduct> _TBProduct;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCustomer_ProductChanging(int value);
    partial void OnIDCustomer_ProductChanged();
    partial void OnIDCustomerChanging(System.Nullable<int> value);
    partial void OnIDCustomerChanged();
    partial void OnIDProductChanging(System.Nullable<int> value);
    partial void OnIDProductChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
	
	public TBCustomer_Product()
	{
		this._TBOrders = new EntitySet<TBOrder>(new Action<TBOrder>(this.attach_TBOrders), new Action<TBOrder>(this.detach_TBOrders));
		this._TBCustomer = default(EntityRef<TBCustomer>);
		this._TBProduct = default(EntityRef<TBProduct>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer_Product", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDCustomer_Product
	{
		get
		{
			return this._IDCustomer_Product;
		}
		set
		{
			if ((this._IDCustomer_Product != value))
			{
				this.OnIDCustomer_ProductChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer_Product = value;
				this.SendPropertyChanged("IDCustomer_Product");
				this.OnIDCustomer_ProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer", DbType="Int")]
	public System.Nullable<int> IDCustomer
	{
		get
		{
			return this._IDCustomer;
		}
		set
		{
			if ((this._IDCustomer != value))
			{
				if (this._TBCustomer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCustomerChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer = value;
				this.SendPropertyChanged("IDCustomer");
				this.OnIDCustomerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int")]
	public System.Nullable<int> IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				if (this._TBProduct.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDProductChanging(value);
				this.SendPropertyChanging();
				this._IDProduct = value;
				this.SendPropertyChanged("IDProduct");
				this.OnIDProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> StartDate
	{
		get
		{
			return this._StartDate;
		}
		set
		{
			if ((this._StartDate != value))
			{
				this.OnStartDateChanging(value);
				this.SendPropertyChanging();
				this._StartDate = value;
				this.SendPropertyChanged("StartDate");
				this.OnStartDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> EndDate
	{
		get
		{
			return this._EndDate;
		}
		set
		{
			if ((this._EndDate != value))
			{
				this.OnEndDateChanging(value);
				this.SendPropertyChanging();
				this._EndDate = value;
				this.SendPropertyChanged("EndDate");
				this.OnEndDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdateDate
	{
		get
		{
			return this._UpdateDate;
		}
		set
		{
			if ((this._UpdateDate != value))
			{
				this.OnUpdateDateChanging(value);
				this.SendPropertyChanging();
				this._UpdateDate = value;
				this.SendPropertyChanged("UpdateDate");
				this.OnUpdateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_Product_TBOrder", Storage="_TBOrders", ThisKey="IDCustomer_Product", OtherKey="IDCustomer_Product")]
	public EntitySet<TBOrder> TBOrders
	{
		get
		{
			return this._TBOrders;
		}
		set
		{
			this._TBOrders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBCustomer_Product", Storage="_TBCustomer", ThisKey="IDCustomer", OtherKey="IDCustomer", IsForeignKey=true)]
	public TBCustomer TBCustomer
	{
		get
		{
			return this._TBCustomer.Entity;
		}
		set
		{
			TBCustomer previousValue = this._TBCustomer.Entity;
			if (((previousValue != value) 
						|| (this._TBCustomer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCustomer.Entity = null;
					previousValue.TBCustomer_Products.Remove(this);
				}
				this._TBCustomer.Entity = value;
				if ((value != null))
				{
					value.TBCustomer_Products.Add(this);
					this._IDCustomer = value.IDCustomer;
				}
				else
				{
					this._IDCustomer = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBCustomer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBProduct_TBCustomer_Product", Storage="_TBProduct", ThisKey="IDProduct", OtherKey="IDProduct", IsForeignKey=true)]
	public TBProduct TBProduct
	{
		get
		{
			return this._TBProduct.Entity;
		}
		set
		{
			TBProduct previousValue = this._TBProduct.Entity;
			if (((previousValue != value) 
						|| (this._TBProduct.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBProduct.Entity = null;
					previousValue.TBCustomer_Products.Remove(this);
				}
				this._TBProduct.Entity = value;
				if ((value != null))
				{
					value.TBCustomer_Products.Add(this);
					this._IDProduct = value.IDProduct;
				}
				else
				{
					this._IDProduct = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBProduct");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer_Product = this;
	}
	
	private void detach_TBOrders(TBOrder entity)
	{
		this.SendPropertyChanging();
		entity.TBCustomer_Product = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBOrder")]
public partial class TBOrder : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDOrder;
	
	private int _IDCustomer;
	
	private int _IDPaymentMethod;
	
	private int _IDOrderStatus;
	
	private int _IDShipping;
	
	private int _IDDeliveryAddress;
	
	private int _IDBillingAddress;
	
	private System.Nullable<int> _IDVoucher;
	
	private System.Nullable<int> _IDCurrency;
	
	private string _InvoiceNumber;
	
	private string _Reference;
	
	private string _Payment;
	
	private string _ShippingNumber;
	
	private System.Nullable<decimal> _ConversionRate;
	
	private System.Nullable<decimal> _TotalWeight;
	
	private System.Nullable<decimal> _TotalShipping;
	
	private System.Nullable<decimal> _TotalDiscount;
	
	private System.Nullable<decimal> _TotalPrice;
	
	private System.Nullable<decimal> _TotalPaid;
	
	private string _Notes;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	private string _OrderType;
	
	private System.Nullable<int> _IDCustomer_Product;
	
	private string _ProcessStatus;
	
	private EntitySet<TBLog_Order> _TBLog_Orders;
	
	private EntitySet<TBOrder_Detail> _TBOrder_Details;
	
	private EntitySet<TBPayment_Confirmation> _TBPayment_Confirmations;
	
	private EntityRef<TBCurrency> _TBCurrency;
	
	private EntityRef<TBCustomer> _TBCustomer;
	
	private EntityRef<TBAddress> _TBAddress;
	
	private EntityRef<TBAddress> _TBAddress1;
	
	private EntityRef<TBCustomer_Product> _TBCustomer_Product;
	
	private EntityRef<TBOrder_Status> _TBOrder_Status;
	
	private EntityRef<TBPayment_Method> _TBPayment_Method;
	
	private EntityRef<TBShipping> _TBShipping;
	
	private EntityRef<TBVoucher> _TBVoucher;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDOrderChanging(int value);
    partial void OnIDOrderChanged();
    partial void OnIDCustomerChanging(int value);
    partial void OnIDCustomerChanged();
    partial void OnIDPaymentMethodChanging(int value);
    partial void OnIDPaymentMethodChanged();
    partial void OnIDOrderStatusChanging(int value);
    partial void OnIDOrderStatusChanged();
    partial void OnIDShippingChanging(int value);
    partial void OnIDShippingChanged();
    partial void OnIDDeliveryAddressChanging(int value);
    partial void OnIDDeliveryAddressChanged();
    partial void OnIDBillingAddressChanging(int value);
    partial void OnIDBillingAddressChanged();
    partial void OnIDVoucherChanging(System.Nullable<int> value);
    partial void OnIDVoucherChanged();
    partial void OnIDCurrencyChanging(System.Nullable<int> value);
    partial void OnIDCurrencyChanged();
    partial void OnInvoiceNumberChanging(string value);
    partial void OnInvoiceNumberChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    partial void OnPaymentChanging(string value);
    partial void OnPaymentChanged();
    partial void OnShippingNumberChanging(string value);
    partial void OnShippingNumberChanged();
    partial void OnConversionRateChanging(System.Nullable<decimal> value);
    partial void OnConversionRateChanged();
    partial void OnTotalWeightChanging(System.Nullable<decimal> value);
    partial void OnTotalWeightChanged();
    partial void OnTotalShippingChanging(System.Nullable<decimal> value);
    partial void OnTotalShippingChanged();
    partial void OnTotalDiscountChanging(System.Nullable<decimal> value);
    partial void OnTotalDiscountChanged();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnTotalPaidChanging(System.Nullable<decimal> value);
    partial void OnTotalPaidChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnDeflagChanging(bool value);
    partial void OnDeflagChanged();
    partial void OnDateInsertChanging(System.DateTime value);
    partial void OnDateInsertChanged();
    partial void OnDateLastUpdateChanging(System.DateTime value);
    partial void OnDateLastUpdateChanged();
    partial void OnOrderTypeChanging(string value);
    partial void OnOrderTypeChanged();
    partial void OnIDCustomer_ProductChanging(System.Nullable<int> value);
    partial void OnIDCustomer_ProductChanged();
    partial void OnProcessStatusChanging(string value);
    partial void OnProcessStatusChanged();
    #endregion
	
	public TBOrder()
	{
		this._TBLog_Orders = new EntitySet<TBLog_Order>(new Action<TBLog_Order>(this.attach_TBLog_Orders), new Action<TBLog_Order>(this.detach_TBLog_Orders));
		this._TBOrder_Details = new EntitySet<TBOrder_Detail>(new Action<TBOrder_Detail>(this.attach_TBOrder_Details), new Action<TBOrder_Detail>(this.detach_TBOrder_Details));
		this._TBPayment_Confirmations = new EntitySet<TBPayment_Confirmation>(new Action<TBPayment_Confirmation>(this.attach_TBPayment_Confirmations), new Action<TBPayment_Confirmation>(this.detach_TBPayment_Confirmations));
		this._TBCurrency = default(EntityRef<TBCurrency>);
		this._TBCustomer = default(EntityRef<TBCustomer>);
		this._TBAddress = default(EntityRef<TBAddress>);
		this._TBAddress1 = default(EntityRef<TBAddress>);
		this._TBCustomer_Product = default(EntityRef<TBCustomer_Product>);
		this._TBOrder_Status = default(EntityRef<TBOrder_Status>);
		this._TBPayment_Method = default(EntityRef<TBPayment_Method>);
		this._TBShipping = default(EntityRef<TBShipping>);
		this._TBVoucher = default(EntityRef<TBVoucher>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrder", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int IDOrder
	{
		get
		{
			return this._IDOrder;
		}
		set
		{
			if ((this._IDOrder != value))
			{
				this.OnIDOrderChanging(value);
				this.SendPropertyChanging();
				this._IDOrder = value;
				this.SendPropertyChanged("IDOrder");
				this.OnIDOrderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer", DbType="Int NOT NULL")]
	public int IDCustomer
	{
		get
		{
			return this._IDCustomer;
		}
		set
		{
			if ((this._IDCustomer != value))
			{
				if (this._TBCustomer.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCustomerChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer = value;
				this.SendPropertyChanged("IDCustomer");
				this.OnIDCustomerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPaymentMethod", DbType="Int NOT NULL")]
	public int IDPaymentMethod
	{
		get
		{
			return this._IDPaymentMethod;
		}
		set
		{
			if ((this._IDPaymentMethod != value))
			{
				if (this._TBPayment_Method.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDPaymentMethodChanging(value);
				this.SendPropertyChanging();
				this._IDPaymentMethod = value;
				this.SendPropertyChanged("IDPaymentMethod");
				this.OnIDPaymentMethodChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrderStatus", DbType="Int NOT NULL")]
	public int IDOrderStatus
	{
		get
		{
			return this._IDOrderStatus;
		}
		set
		{
			if ((this._IDOrderStatus != value))
			{
				if (this._TBOrder_Status.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDOrderStatusChanging(value);
				this.SendPropertyChanging();
				this._IDOrderStatus = value;
				this.SendPropertyChanged("IDOrderStatus");
				this.OnIDOrderStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDShipping", DbType="Int NOT NULL")]
	public int IDShipping
	{
		get
		{
			return this._IDShipping;
		}
		set
		{
			if ((this._IDShipping != value))
			{
				if (this._TBShipping.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDShippingChanging(value);
				this.SendPropertyChanging();
				this._IDShipping = value;
				this.SendPropertyChanged("IDShipping");
				this.OnIDShippingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDeliveryAddress", DbType="Int NOT NULL")]
	public int IDDeliveryAddress
	{
		get
		{
			return this._IDDeliveryAddress;
		}
		set
		{
			if ((this._IDDeliveryAddress != value))
			{
				if (this._TBAddress.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDDeliveryAddressChanging(value);
				this.SendPropertyChanging();
				this._IDDeliveryAddress = value;
				this.SendPropertyChanged("IDDeliveryAddress");
				this.OnIDDeliveryAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDBillingAddress", DbType="Int NOT NULL")]
	public int IDBillingAddress
	{
		get
		{
			return this._IDBillingAddress;
		}
		set
		{
			if ((this._IDBillingAddress != value))
			{
				if (this._TBAddress1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDBillingAddressChanging(value);
				this.SendPropertyChanging();
				this._IDBillingAddress = value;
				this.SendPropertyChanged("IDBillingAddress");
				this.OnIDBillingAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDVoucher", DbType="Int")]
	public System.Nullable<int> IDVoucher
	{
		get
		{
			return this._IDVoucher;
		}
		set
		{
			if ((this._IDVoucher != value))
			{
				if (this._TBVoucher.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDVoucherChanging(value);
				this.SendPropertyChanging();
				this._IDVoucher = value;
				this.SendPropertyChanged("IDVoucher");
				this.OnIDVoucherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCurrency", DbType="Int")]
	public System.Nullable<int> IDCurrency
	{
		get
		{
			return this._IDCurrency;
		}
		set
		{
			if ((this._IDCurrency != value))
			{
				if (this._TBCurrency.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCurrencyChanging(value);
				this.SendPropertyChanging();
				this._IDCurrency = value;
				this.SendPropertyChanged("IDCurrency");
				this.OnIDCurrencyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceNumber", DbType="NVarChar(50)")]
	public string InvoiceNumber
	{
		get
		{
			return this._InvoiceNumber;
		}
		set
		{
			if ((this._InvoiceNumber != value))
			{
				this.OnInvoiceNumberChanging(value);
				this.SendPropertyChanging();
				this._InvoiceNumber = value;
				this.SendPropertyChanged("InvoiceNumber");
				this.OnInvoiceNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(20)")]
	public string Reference
	{
		get
		{
			return this._Reference;
		}
		set
		{
			if ((this._Reference != value))
			{
				this.OnReferenceChanging(value);
				this.SendPropertyChanging();
				this._Reference = value;
				this.SendPropertyChanged("Reference");
				this.OnReferenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="NVarChar(50)")]
	public string Payment
	{
		get
		{
			return this._Payment;
		}
		set
		{
			if ((this._Payment != value))
			{
				this.OnPaymentChanging(value);
				this.SendPropertyChanging();
				this._Payment = value;
				this.SendPropertyChanged("Payment");
				this.OnPaymentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShippingNumber", DbType="NVarChar(50)")]
	public string ShippingNumber
	{
		get
		{
			return this._ShippingNumber;
		}
		set
		{
			if ((this._ShippingNumber != value))
			{
				this.OnShippingNumberChanging(value);
				this.SendPropertyChanging();
				this._ShippingNumber = value;
				this.SendPropertyChanged("ShippingNumber");
				this.OnShippingNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConversionRate", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> ConversionRate
	{
		get
		{
			return this._ConversionRate;
		}
		set
		{
			if ((this._ConversionRate != value))
			{
				this.OnConversionRateChanging(value);
				this.SendPropertyChanging();
				this._ConversionRate = value;
				this.SendPropertyChanged("ConversionRate");
				this.OnConversionRateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalWeight", DbType="Decimal(18,2)")]
	public System.Nullable<decimal> TotalWeight
	{
		get
		{
			return this._TotalWeight;
		}
		set
		{
			if ((this._TotalWeight != value))
			{
				this.OnTotalWeightChanging(value);
				this.SendPropertyChanging();
				this._TotalWeight = value;
				this.SendPropertyChanged("TotalWeight");
				this.OnTotalWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalShipping", DbType="Money")]
	public System.Nullable<decimal> TotalShipping
	{
		get
		{
			return this._TotalShipping;
		}
		set
		{
			if ((this._TotalShipping != value))
			{
				this.OnTotalShippingChanging(value);
				this.SendPropertyChanging();
				this._TotalShipping = value;
				this.SendPropertyChanged("TotalShipping");
				this.OnTotalShippingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money")]
	public System.Nullable<decimal> TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this.OnTotalDiscountChanging(value);
				this.SendPropertyChanging();
				this._TotalDiscount = value;
				this.SendPropertyChanged("TotalDiscount");
				this.OnTotalDiscountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
	public System.Nullable<decimal> TotalPrice
	{
		get
		{
			return this._TotalPrice;
		}
		set
		{
			if ((this._TotalPrice != value))
			{
				this.OnTotalPriceChanging(value);
				this.SendPropertyChanging();
				this._TotalPrice = value;
				this.SendPropertyChanged("TotalPrice");
				this.OnTotalPriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPaid", DbType="Money")]
	public System.Nullable<decimal> TotalPaid
	{
		get
		{
			return this._TotalPaid;
		}
		set
		{
			if ((this._TotalPaid != value))
			{
				this.OnTotalPaidChanging(value);
				this.SendPropertyChanging();
				this._TotalPaid = value;
				this.SendPropertyChanged("TotalPaid");
				this.OnTotalPaidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Notes
	{
		get
		{
			return this._Notes;
		}
		set
		{
			if ((this._Notes != value))
			{
				this.OnNotesChanging(value);
				this.SendPropertyChanging();
				this._Notes = value;
				this.SendPropertyChanged("Notes");
				this.OnNotesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this.OnDeflagChanging(value);
				this.SendPropertyChanging();
				this._Deflag = value;
				this.SendPropertyChanged("Deflag");
				this.OnDeflagChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this.OnDateInsertChanging(value);
				this.SendPropertyChanging();
				this._DateInsert = value;
				this.SendPropertyChanged("DateInsert");
				this.OnDateInsertChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this.OnDateLastUpdateChanging(value);
				this.SendPropertyChanging();
				this._DateLastUpdate = value;
				this.SendPropertyChanged("DateLastUpdate");
				this.OnDateLastUpdateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderType", DbType="NVarChar(MAX)")]
	public string OrderType
	{
		get
		{
			return this._OrderType;
		}
		set
		{
			if ((this._OrderType != value))
			{
				this.OnOrderTypeChanging(value);
				this.SendPropertyChanging();
				this._OrderType = value;
				this.SendPropertyChanged("OrderType");
				this.OnOrderTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer_Product", DbType="Int")]
	public System.Nullable<int> IDCustomer_Product
	{
		get
		{
			return this._IDCustomer_Product;
		}
		set
		{
			if ((this._IDCustomer_Product != value))
			{
				if (this._TBCustomer_Product.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDCustomer_ProductChanging(value);
				this.SendPropertyChanging();
				this._IDCustomer_Product = value;
				this.SendPropertyChanged("IDCustomer_Product");
				this.OnIDCustomer_ProductChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcessStatus", DbType="NVarChar(MAX)")]
	public string ProcessStatus
	{
		get
		{
			return this._ProcessStatus;
		}
		set
		{
			if ((this._ProcessStatus != value))
			{
				this.OnProcessStatusChanging(value);
				this.SendPropertyChanging();
				this._ProcessStatus = value;
				this.SendPropertyChanged("ProcessStatus");
				this.OnProcessStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_TBLog_Order", Storage="_TBLog_Orders", ThisKey="IDOrder", OtherKey="IDOrder")]
	public EntitySet<TBLog_Order> TBLog_Orders
	{
		get
		{
			return this._TBLog_Orders;
		}
		set
		{
			this._TBLog_Orders.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_TBOrder_Detail", Storage="_TBOrder_Details", ThisKey="IDOrder", OtherKey="IDOrder")]
	public EntitySet<TBOrder_Detail> TBOrder_Details
	{
		get
		{
			return this._TBOrder_Details;
		}
		set
		{
			this._TBOrder_Details.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_TBPayment_Confirmation", Storage="_TBPayment_Confirmations", ThisKey="IDOrder", OtherKey="IDOrder")]
	public EntitySet<TBPayment_Confirmation> TBPayment_Confirmations
	{
		get
		{
			return this._TBPayment_Confirmations;
		}
		set
		{
			this._TBPayment_Confirmations.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCurrency_TBOrder", Storage="_TBCurrency", ThisKey="IDCurrency", OtherKey="IDCurrency", IsForeignKey=true)]
	public TBCurrency TBCurrency
	{
		get
		{
			return this._TBCurrency.Entity;
		}
		set
		{
			TBCurrency previousValue = this._TBCurrency.Entity;
			if (((previousValue != value) 
						|| (this._TBCurrency.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCurrency.Entity = null;
					previousValue.TBOrders.Remove(this);
				}
				this._TBCurrency.Entity = value;
				if ((value != null))
				{
					value.TBOrders.Add(this);
					this._IDCurrency = value.IDCurrency;
				}
				else
				{
					this._IDCurrency = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBCurrency");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_TBOrder", Storage="_TBCustomer", ThisKey="IDCustomer", OtherKey="IDCustomer", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBCustomer TBCustomer
	{
		get
		{
			return this._TBCustomer.Entity;
		}
		set
		{
			TBCustomer previousValue = this._TBCustomer.Entity;
			if (((previousValue != value) 
						|| (this._TBCustomer.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCustomer.Entity = null;
					previousValue.TBOrders.Remove(this);
				}
				this._TBCustomer.Entity = value;
				if ((value != null))
				{
					value.TBOrders.Add(this);
					this._IDCustomer = value.IDCustomer;
				}
				else
				{
					this._IDCustomer = default(int);
				}
				this.SendPropertyChanged("TBCustomer");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBAddress_TBOrder", Storage="_TBAddress", ThisKey="IDDeliveryAddress", OtherKey="IDAddress", IsForeignKey=true)]
	public TBAddress TBAddress
	{
		get
		{
			return this._TBAddress.Entity;
		}
		set
		{
			TBAddress previousValue = this._TBAddress.Entity;
			if (((previousValue != value) 
						|| (this._TBAddress.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBAddress.Entity = null;
					previousValue.TBOrders.Remove(this);
				}
				this._TBAddress.Entity = value;
				if ((value != null))
				{
					value.TBOrders.Add(this);
					this._IDDeliveryAddress = value.IDAddress;
				}
				else
				{
					this._IDDeliveryAddress = default(int);
				}
				this.SendPropertyChanged("TBAddress");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBAddress_TBOrder1", Storage="_TBAddress1", ThisKey="IDBillingAddress", OtherKey="IDAddress", IsForeignKey=true)]
	public TBAddress TBAddress1
	{
		get
		{
			return this._TBAddress1.Entity;
		}
		set
		{
			TBAddress previousValue = this._TBAddress1.Entity;
			if (((previousValue != value) 
						|| (this._TBAddress1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBAddress1.Entity = null;
					previousValue.TBOrders1.Remove(this);
				}
				this._TBAddress1.Entity = value;
				if ((value != null))
				{
					value.TBOrders1.Add(this);
					this._IDBillingAddress = value.IDAddress;
				}
				else
				{
					this._IDBillingAddress = default(int);
				}
				this.SendPropertyChanged("TBAddress1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBCustomer_Product_TBOrder", Storage="_TBCustomer_Product", ThisKey="IDCustomer_Product", OtherKey="IDCustomer_Product", IsForeignKey=true)]
	public TBCustomer_Product TBCustomer_Product
	{
		get
		{
			return this._TBCustomer_Product.Entity;
		}
		set
		{
			TBCustomer_Product previousValue = this._TBCustomer_Product.Entity;
			if (((previousValue != value) 
						|| (this._TBCustomer_Product.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBCustomer_Product.Entity = null;
					previousValue.TBOrders.Remove(this);
				}
				this._TBCustomer_Product.Entity = value;
				if ((value != null))
				{
					value.TBOrders.Add(this);
					this._IDCustomer_Product = value.IDCustomer_Product;
				}
				else
				{
					this._IDCustomer_Product = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBCustomer_Product");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBOrder_Status_TBOrder", Storage="_TBOrder_Status", ThisKey="IDOrderStatus", OtherKey="IDOrderStatus", IsForeignKey=true)]
	public TBOrder_Status TBOrder_Status
	{
		get
		{
			return this._TBOrder_Status.Entity;
		}
		set
		{
			TBOrder_Status previousValue = this._TBOrder_Status.Entity;
			if (((previousValue != value) 
						|| (this._TBOrder_Status.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBOrder_Status.Entity = null;
					previousValue.TBOrders.Remove(this);
				}
				this._TBOrder_Status.Entity = value;
				if ((value != null))
				{
					value.TBOrders.Add(this);
					this._IDOrderStatus = value.IDOrderStatus;
				}
				else
				{
					this._IDOrderStatus = default(int);
				}
				this.SendPropertyChanged("TBOrder_Status");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBPayment_Method_TBOrder", Storage="_TBPayment_Method", ThisKey="IDPaymentMethod", OtherKey="IDPaymentMethod", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
	public TBPayment_Method TBPayment_Method
	{
		get
		{
			return this._TBPayment_Method.Entity;
		}
		set
		{
			TBPayment_Method previousValue = this._TBPayment_Method.Entity;
			if (((previousValue != value) 
						|| (this._TBPayment_Method.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBPayment_Method.Entity = null;
					previousValue.TBOrders.Remove(this);
				}
				this._TBPayment_Method.Entity = value;
				if ((value != null))
				{
					value.TBOrders.Add(this);
					this._IDPaymentMethod = value.IDPaymentMethod;
				}
				else
				{
					this._IDPaymentMethod = default(int);
				}
				this.SendPropertyChanged("TBPayment_Method");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBShipping_TBOrder", Storage="_TBShipping", ThisKey="IDShipping", OtherKey="IDShipping", IsForeignKey=true)]
	public TBShipping TBShipping
	{
		get
		{
			return this._TBShipping.Entity;
		}
		set
		{
			TBShipping previousValue = this._TBShipping.Entity;
			if (((previousValue != value) 
						|| (this._TBShipping.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBShipping.Entity = null;
					previousValue.TBOrders.Remove(this);
				}
				this._TBShipping.Entity = value;
				if ((value != null))
				{
					value.TBOrders.Add(this);
					this._IDShipping = value.IDShipping;
				}
				else
				{
					this._IDShipping = default(int);
				}
				this.SendPropertyChanged("TBShipping");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TBVoucher_TBOrder", Storage="_TBVoucher", ThisKey="IDVoucher", OtherKey="IDVoucher", IsForeignKey=true)]
	public TBVoucher TBVoucher
	{
		get
		{
			return this._TBVoucher.Entity;
		}
		set
		{
			TBVoucher previousValue = this._TBVoucher.Entity;
			if (((previousValue != value) 
						|| (this._TBVoucher.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TBVoucher.Entity = null;
					previousValue.TBOrders.Remove(this);
				}
				this._TBVoucher.Entity = value;
				if ((value != null))
				{
					value.TBOrders.Add(this);
					this._IDVoucher = value.IDVoucher;
				}
				else
				{
					this._IDVoucher = default(Nullable<int>);
				}
				this.SendPropertyChanged("TBVoucher");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TBLog_Orders(TBLog_Order entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder = this;
	}
	
	private void detach_TBLog_Orders(TBLog_Order entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder = null;
	}
	
	private void attach_TBOrder_Details(TBOrder_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder = this;
	}
	
	private void detach_TBOrder_Details(TBOrder_Detail entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder = null;
	}
	
	private void attach_TBPayment_Confirmations(TBPayment_Confirmation entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder = this;
	}
	
	private void detach_TBPayment_Confirmations(TBPayment_Confirmation entity)
	{
		this.SendPropertyChanging();
		entity.TBOrder = null;
	}
}

public partial class FUNC_Value_GetDetailResult
{
	
	private int _IDValue;
	
	private int _IDAttribute;
	
	private string _AttributeName;
	
	private bool _IsColor;
	
	private string _Name;
	
	private string _RGBColor;
	
	public FUNC_Value_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAttribute", DbType="Int NOT NULL")]
	public int IDAttribute
	{
		get
		{
			return this._IDAttribute;
		}
		set
		{
			if ((this._IDAttribute != value))
			{
				this._IDAttribute = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string AttributeName
	{
		get
		{
			return this._AttributeName;
		}
		set
		{
			if ((this._AttributeName != value))
			{
				this._AttributeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsColor", DbType="Bit NOT NULL")]
	public bool IsColor
	{
		get
		{
			return this._IsColor;
		}
		set
		{
			if ((this._IsColor != value))
			{
				this._IsColor = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGBColor", DbType="NVarChar(10)")]
	public string RGBColor
	{
		get
		{
			return this._RGBColor;
		}
		set
		{
			if ((this._RGBColor != value))
			{
				this._RGBColor = value;
			}
		}
	}
}

public partial class SP_GetSizeCombination_ByIDProductResult
{
	
	private System.Nullable<int> _IDProduct_Combination;
	
	private System.Nullable<int> _IDProduct_Combination_Detail;
	
	private System.Nullable<int> _IDProduct;
	
	private System.Nullable<int> _IDValue;
	
	private string _CombinationName;
	
	private string _Name;
	
	private System.Nullable<int> _Quantity;
	
	private string _ReferenceCode;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<decimal> _Weight;
	
	public SP_GetSizeCombination_ByIDProductResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int")]
	public System.Nullable<int> IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				this._IDProduct_Combination = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination_Detail", DbType="Int")]
	public System.Nullable<int> IDProduct_Combination_Detail
	{
		get
		{
			return this._IDProduct_Combination_Detail;
		}
		set
		{
			if ((this._IDProduct_Combination_Detail != value))
			{
				this._IDProduct_Combination_Detail = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int")]
	public System.Nullable<int> IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int")]
	public System.Nullable<int> IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombinationName", DbType="NVarChar(50)")]
	public string CombinationName
	{
		get
		{
			return this._CombinationName;
		}
		set
		{
			if ((this._CombinationName != value))
			{
				this._CombinationName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(50)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
}

public partial class SP_GetSizeCombination_ByIDProductAndIDColorResult
{
	
	private System.Nullable<int> _IDProduct_Combination;
	
	private System.Nullable<int> _IDProduct_Combination_Detail;
	
	private System.Nullable<int> _IDProduct;
	
	private System.Nullable<int> _IDValue;
	
	private string _CombinationName;
	
	private string _Name;
	
	private System.Nullable<int> _Quantity;
	
	private string _ReferenceCode;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<decimal> _Weight;
	
	public SP_GetSizeCombination_ByIDProductAndIDColorResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int")]
	public System.Nullable<int> IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				this._IDProduct_Combination = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination_Detail", DbType="Int")]
	public System.Nullable<int> IDProduct_Combination_Detail
	{
		get
		{
			return this._IDProduct_Combination_Detail;
		}
		set
		{
			if ((this._IDProduct_Combination_Detail != value))
			{
				this._IDProduct_Combination_Detail = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int")]
	public System.Nullable<int> IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int")]
	public System.Nullable<int> IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombinationName", DbType="NVarChar(50)")]
	public string CombinationName
	{
		get
		{
			return this._CombinationName;
		}
		set
		{
			if ((this._CombinationName != value))
			{
				this._CombinationName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(50)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
}

public partial class SP_Insert_CustomerResult
{
	
	private System.Nullable<decimal> _newID;
	
	public SP_Insert_CustomerResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_newID", DbType="Decimal(38,0)")]
	public System.Nullable<decimal> newID
	{
		get
		{
			return this._newID;
		}
		set
		{
			if ((this._newID != value))
			{
				this._newID = value;
			}
		}
	}
}

public partial class SP_RegisterGuestCustomerResult
{
	
	private System.Nullable<int> _IDCustomer;
	
	private System.Nullable<int> _IDAddress;
	
	public SP_RegisterGuestCustomerResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer", DbType="Int")]
	public System.Nullable<int> IDCustomer
	{
		get
		{
			return this._IDCustomer;
		}
		set
		{
			if ((this._IDCustomer != value))
			{
				this._IDCustomer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAddress", DbType="Int")]
	public System.Nullable<int> IDAddress
	{
		get
		{
			return this._IDAddress;
		}
		set
		{
			if ((this._IDAddress != value))
			{
				this._IDAddress = value;
			}
		}
	}
}

public partial class SP_Report_GetCategoryDistributionResult
{
	
	private int _IDCategory;
	
	private string _Name;
	
	private System.Nullable<int> _TotalOrders;
	
	private System.Nullable<decimal> _TotalSales;
	
	public SP_Report_GetCategoryDistributionResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOrders", DbType="Int")]
	public System.Nullable<int> TotalOrders
	{
		get
		{
			return this._TotalOrders;
		}
		set
		{
			if ((this._TotalOrders != value))
			{
				this._TotalOrders = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSales", DbType="Money")]
	public System.Nullable<decimal> TotalSales
	{
		get
		{
			return this._TotalSales;
		}
		set
		{
			if ((this._TotalSales != value))
			{
				this._TotalSales = value;
			}
		}
	}
}

public partial class SP_Report_GetCityDistributionResult
{
	
	private int _IDCity;
	
	private string _Name;
	
	private System.Nullable<int> _TotalOrders;
	
	private System.Nullable<decimal> _TotalSales;
	
	public SP_Report_GetCityDistributionResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCity", DbType="Int NOT NULL")]
	public int IDCity
	{
		get
		{
			return this._IDCity;
		}
		set
		{
			if ((this._IDCity != value))
			{
				this._IDCity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOrders", DbType="Int")]
	public System.Nullable<int> TotalOrders
	{
		get
		{
			return this._TotalOrders;
		}
		set
		{
			if ((this._TotalOrders != value))
			{
				this._TotalOrders = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSales", DbType="Money")]
	public System.Nullable<decimal> TotalSales
	{
		get
		{
			return this._TotalSales;
		}
		set
		{
			if ((this._TotalSales != value))
			{
				this._TotalSales = value;
			}
		}
	}
}

public partial class SP_Report_GetManufacturerDistributionResult
{
	
	private int _IDManufacturer;
	
	private string _Name;
	
	private System.Nullable<int> _TotalOrders;
	
	private System.Nullable<int> _ProductSales;
	
	private System.Nullable<decimal> _TotalSales;
	
	public SP_Report_GetManufacturerDistributionResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOrders", DbType="Int")]
	public System.Nullable<int> TotalOrders
	{
		get
		{
			return this._TotalOrders;
		}
		set
		{
			if ((this._TotalOrders != value))
			{
				this._TotalOrders = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductSales", DbType="Int")]
	public System.Nullable<int> ProductSales
	{
		get
		{
			return this._ProductSales;
		}
		set
		{
			if ((this._ProductSales != value))
			{
				this._ProductSales = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSales", DbType="Money")]
	public System.Nullable<decimal> TotalSales
	{
		get
		{
			return this._TotalSales;
		}
		set
		{
			if ((this._TotalSales != value))
			{
				this._TotalSales = value;
			}
		}
	}
}

public partial class SP_Report_GetProvinceDistributionResult
{
	
	private int _IDProvince;
	
	private string _Name;
	
	private System.Nullable<int> _TotalOrders;
	
	private System.Nullable<decimal> _TotalSales;
	
	public SP_Report_GetProvinceDistributionResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProvince", DbType="Int NOT NULL")]
	public int IDProvince
	{
		get
		{
			return this._IDProvince;
		}
		set
		{
			if ((this._IDProvince != value))
			{
				this._IDProvince = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalOrders", DbType="Int")]
	public System.Nullable<int> TotalOrders
	{
		get
		{
			return this._TotalOrders;
		}
		set
		{
			if ((this._TotalOrders != value))
			{
				this._TotalOrders = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSales", DbType="Money")]
	public System.Nullable<decimal> TotalSales
	{
		get
		{
			return this._TotalSales;
		}
		set
		{
			if ((this._TotalSales != value))
			{
				this._TotalSales = value;
			}
		}
	}
}

public partial class SP_Stats_GetBestCategoriesResult
{
	
	private int _IDCategory;
	
	private string _Name;
	
	private System.Nullable<int> _Quantity;
	
	public SP_Stats_GetBestCategoriesResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
}

public partial class SP_Stats_GetBestCustomerResult
{
	
	private int _IDCustomer;
	
	private string _Email;
	
	private string _FirstName;
	
	private string _LastName;
	
	private System.Nullable<int> _Quantity;
	
	private System.Nullable<decimal> _Amount;
	
	public SP_Stats_GetBestCustomerResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCustomer", DbType="Int NOT NULL")]
	public int IDCustomer
	{
		get
		{
			return this._IDCustomer;
		}
		set
		{
			if ((this._IDCustomer != value))
			{
				this._IDCustomer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string FirstName
	{
		get
		{
			return this._FirstName;
		}
		set
		{
			if ((this._FirstName != value))
			{
				this._FirstName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50)")]
	public string LastName
	{
		get
		{
			return this._LastName;
		}
		set
		{
			if ((this._LastName != value))
			{
				this._LastName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Money")]
	public System.Nullable<decimal> Amount
	{
		get
		{
			return this._Amount;
		}
		set
		{
			if ((this._Amount != value))
			{
				this._Amount = value;
			}
		}
	}
}

public partial class SP_Stats_GetBestManufacturerResult
{
	
	private int _IDManufacturer;
	
	private string _Name;
	
	private System.Nullable<int> _Quantity;
	
	public SP_Stats_GetBestManufacturerResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
}

public partial class FUNC_Attribute_GetAllResult
{
	
	private System.Nullable<int> _IDAttribute;
	
	private string _Name;
	
	private System.Nullable<bool> _IsColor;
	
	private System.Nullable<int> _TotalValue;
	
	public FUNC_Attribute_GetAllResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAttribute", DbType="Int")]
	public System.Nullable<int> IDAttribute
	{
		get
		{
			return this._IDAttribute;
		}
		set
		{
			if ((this._IDAttribute != value))
			{
				this._IDAttribute = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsColor", DbType="Bit")]
	public System.Nullable<bool> IsColor
	{
		get
		{
			return this._IsColor;
		}
		set
		{
			if ((this._IsColor != value))
			{
				this._IsColor = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalValue", DbType="Int")]
	public System.Nullable<int> TotalValue
	{
		get
		{
			return this._TotalValue;
		}
		set
		{
			if ((this._TotalValue != value))
			{
				this._TotalValue = value;
			}
		}
	}
}

public partial class FUNC_Attribute_GetDetailResult
{
	
	private System.Nullable<int> _IDAttribute;
	
	private string _Name;
	
	private System.Nullable<bool> _IsColor;
	
	private System.Nullable<int> _TotalValue;
	
	public FUNC_Attribute_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAttribute", DbType="Int")]
	public System.Nullable<int> IDAttribute
	{
		get
		{
			return this._IDAttribute;
		}
		set
		{
			if ((this._IDAttribute != value))
			{
				this._IDAttribute = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsColor", DbType="Bit")]
	public System.Nullable<bool> IsColor
	{
		get
		{
			return this._IsColor;
		}
		set
		{
			if ((this._IsColor != value))
			{
				this._IsColor = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalValue", DbType="Int")]
	public System.Nullable<int> TotalValue
	{
		get
		{
			return this._TotalValue;
		}
		set
		{
			if ((this._TotalValue != value))
			{
				this._TotalValue = value;
			}
		}
	}
}

public partial class FUNC_Category_GetAllResult
{
	
	private int _IDCategory;
	
	private System.Nullable<int> _IDCategoryParent;
	
	private string _ParentName;
	
	private string _Name;
	
	private string _Image;
	
	private string _Description;
	
	private bool _Active;
	
	public FUNC_Category_GetAllResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategoryParent", DbType="Int")]
	public System.Nullable<int> IDCategoryParent
	{
		get
		{
			return this._IDCategoryParent;
		}
		set
		{
			if ((this._IDCategoryParent != value))
			{
				this._IDCategoryParent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(50)")]
	public string ParentName
	{
		get
		{
			return this._ParentName;
		}
		set
		{
			if ((this._ParentName != value))
			{
				this._ParentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(20)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this._Image = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
}

public partial class FUNC_Category_GetData_ByIDCategoryParentResult
{
	
	private int _IDCategory;
	
	private System.Nullable<int> _IDCategoryParent;
	
	private string _ParentName;
	
	private string _Name;
	
	private string _Image;
	
	private string _Description;
	
	private bool _Active;
	
	public FUNC_Category_GetData_ByIDCategoryParentResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategoryParent", DbType="Int")]
	public System.Nullable<int> IDCategoryParent
	{
		get
		{
			return this._IDCategoryParent;
		}
		set
		{
			if ((this._IDCategoryParent != value))
			{
				this._IDCategoryParent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(50)")]
	public string ParentName
	{
		get
		{
			return this._ParentName;
		}
		set
		{
			if ((this._ParentName != value))
			{
				this._ParentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(20)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this._Image = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
}

public partial class FUNC_Category_GetData_ByIDCategoryParentNullResult
{
	
	private int _IDCategory;
	
	private System.Nullable<int> _IDCategoryParent;
	
	private string _ParentName;
	
	private string _Name;
	
	private string _Image;
	
	private string _Description;
	
	private bool _Active;
	
	public FUNC_Category_GetData_ByIDCategoryParentNullResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategoryParent", DbType="Int")]
	public System.Nullable<int> IDCategoryParent
	{
		get
		{
			return this._IDCategoryParent;
		}
		set
		{
			if ((this._IDCategoryParent != value))
			{
				this._IDCategoryParent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(50)")]
	public string ParentName
	{
		get
		{
			return this._ParentName;
		}
		set
		{
			if ((this._ParentName != value))
			{
				this._ParentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(20)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this._Image = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
}

public partial class FUNC_Category_GetDetailResult
{
	
	private int _IDCategory;
	
	private System.Nullable<int> _IDCategoryParent;
	
	private string _ParentName;
	
	private string _Name;
	
	private string _Image;
	
	private string _Description;
	
	private bool _Active;
	
	private System.Nullable<int> _IDPromo;
	
	public FUNC_Category_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategoryParent", DbType="Int")]
	public System.Nullable<int> IDCategoryParent
	{
		get
		{
			return this._IDCategoryParent;
		}
		set
		{
			if ((this._IDCategoryParent != value))
			{
				this._IDCategoryParent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentName", DbType="NVarChar(50)")]
	public string ParentName
	{
		get
		{
			return this._ParentName;
		}
		set
		{
			if ((this._ParentName != value))
			{
				this._ParentName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(20)")]
	public string Image
	{
		get
		{
			return this._Image;
		}
		set
		{
			if ((this._Image != value))
			{
				this._Image = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPromo", DbType="Int")]
	public System.Nullable<int> IDPromo
	{
		get
		{
			return this._IDPromo;
		}
		set
		{
			if ((this._IDPromo != value))
			{
				this._IDPromo = value;
			}
		}
	}
}

public partial class FUNC_GetColor_ByIDProductResult
{
	
	private int _IDValue;
	
	private string _Name;
	
	private string _RGBColor;
	
	private System.Nullable<int> _IDProduct_Combination;
	
	public FUNC_GetColor_ByIDProductResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGBColor", DbType="NVarChar(10)")]
	public string RGBColor
	{
		get
		{
			return this._RGBColor;
		}
		set
		{
			if ((this._RGBColor != value))
			{
				this._RGBColor = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int")]
	public System.Nullable<int> IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				this._IDProduct_Combination = value;
			}
		}
	}
}

public partial class FUNC_GetSize_ByIDProductAndIDColorResult
{
	
	private int _IDValue;
	
	private string _NameValue;
	
	public FUNC_GetSize_ByIDProductAndIDColorResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string NameValue
	{
		get
		{
			return this._NameValue;
		}
		set
		{
			if ((this._NameValue != value))
			{
				this._NameValue = value;
			}
		}
	}
}

public partial class FUNC_Manufacturer_GetAllResult
{
	
	private int _IDManufacturer;
	
	private string _Logo;
	
	private string _Name;
	
	private string _Email;
	
	private string _Phone;
	
	private string _Address;
	
	private string _Description;
	
	private bool _Active;
	
	public FUNC_Manufacturer_GetAllResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="NVarChar(20)")]
	public string Logo
	{
		get
		{
			return this._Logo;
		}
		set
		{
			if ((this._Logo != value))
			{
				this._Logo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this._Phone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this._Address = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
}

public partial class FUNC_Manufacturer_GetData_ByActiveResult
{
	
	private int _IDManufacturer;
	
	private string _Logo;
	
	private string _Name;
	
	private string _Email;
	
	private string _Phone;
	
	private string _Address;
	
	private string _Description;
	
	private bool _Active;
	
	public FUNC_Manufacturer_GetData_ByActiveResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="NVarChar(20)")]
	public string Logo
	{
		get
		{
			return this._Logo;
		}
		set
		{
			if ((this._Logo != value))
			{
				this._Logo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this._Phone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this._Address = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
}

public partial class FUNC_Manufacturer_GetDetailResult
{
	
	private int _IDManufacturer;
	
	private string _Logo;
	
	private string _Name;
	
	private string _Email;
	
	private string _Phone;
	
	private string _Address;
	
	private string _Description;
	
	private bool _Active;
	
	public FUNC_Manufacturer_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logo", DbType="NVarChar(20)")]
	public string Logo
	{
		get
		{
			return this._Logo;
		}
		set
		{
			if ((this._Logo != value))
			{
				this._Logo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this._Email = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(20)")]
	public string Phone
	{
		get
		{
			return this._Phone;
		}
		set
		{
			if ((this._Phone != value))
			{
				this._Phone = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this._Address = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
}

public partial class FUNC_Page_GetDetailResult
{
	
	private int _IDPage;
	
	private string _Page_Title;
	
	private string _Page_ShortContent;
	
	private string _Page_Content;
	
	private bool _Active;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	public FUNC_Page_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPage", DbType="Int NOT NULL")]
	public int IDPage
	{
		get
		{
			return this._IDPage;
		}
		set
		{
			if ((this._IDPage != value))
			{
				this._IDPage = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Page_Title
	{
		get
		{
			return this._Page_Title;
		}
		set
		{
			if ((this._Page_Title != value))
			{
				this._Page_Title = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ShortContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Page_ShortContent
	{
		get
		{
			return this._Page_ShortContent;
		}
		set
		{
			if ((this._Page_ShortContent != value))
			{
				this._Page_ShortContent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Page_Content
	{
		get
		{
			return this._Page_Content;
		}
		set
		{
			if ((this._Page_Content != value))
			{
				this._Page_Content = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this._DateInsert = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this._DateLastUpdate = value;
			}
		}
	}
}

public partial class FUNC_Page_GetDetail_InformationResult
{
	
	private int _IDPage;
	
	private string _Page_Title;
	
	private string _Page_ShortContent;
	
	private string _Page_Content;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	public FUNC_Page_GetDetail_InformationResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPage", DbType="Int NOT NULL")]
	public int IDPage
	{
		get
		{
			return this._IDPage;
		}
		set
		{
			if ((this._IDPage != value))
			{
				this._IDPage = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Page_Title
	{
		get
		{
			return this._Page_Title;
		}
		set
		{
			if ((this._Page_Title != value))
			{
				this._Page_Title = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_ShortContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Page_ShortContent
	{
		get
		{
			return this._Page_ShortContent;
		}
		set
		{
			if ((this._Page_ShortContent != value))
			{
				this._Page_ShortContent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Page_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Page_Content
	{
		get
		{
			return this._Page_Content;
		}
		set
		{
			if ((this._Page_Content != value))
			{
				this._Page_Content = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this._Deflag = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this._DateInsert = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this._DateLastUpdate = value;
			}
		}
	}
}

public partial class FUNC_Page_Photo_GetData_ByIDPageResult
{
	
	private int _IDPage;
	
	private int _IDPageMedia;
	
	private string _Title;
	
	private string _Description;
	
	private string _MediaUrl;
	
	private bool _Cover;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	public FUNC_Page_Photo_GetData_ByIDPageResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPage", DbType="Int NOT NULL")]
	public int IDPage
	{
		get
		{
			return this._IDPage;
		}
		set
		{
			if ((this._IDPage != value))
			{
				this._IDPage = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPageMedia", DbType="Int NOT NULL")]
	public int IDPageMedia
	{
		get
		{
			return this._IDPageMedia;
		}
		set
		{
			if ((this._IDPageMedia != value))
			{
				this._IDPageMedia = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this._Title = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaUrl", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MediaUrl
	{
		get
		{
			return this._MediaUrl;
		}
		set
		{
			if ((this._MediaUrl != value))
			{
				this._MediaUrl = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover", DbType="Bit NOT NULL")]
	public bool Cover
	{
		get
		{
			return this._Cover;
		}
		set
		{
			if ((this._Cover != value))
			{
				this._Cover = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this._Deflag = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this._DateInsert = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this._DateLastUpdate = value;
			}
		}
	}
}

public partial class FUNC_Page_Photo_GetDetailResult
{
	
	private int _IDPageMedia;
	
	private int _IDPage;
	
	private string _MediaUrl;
	
	private bool _Cover;
	
	public FUNC_Page_Photo_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPageMedia", DbType="Int NOT NULL")]
	public int IDPageMedia
	{
		get
		{
			return this._IDPageMedia;
		}
		set
		{
			if ((this._IDPageMedia != value))
			{
				this._IDPageMedia = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPage", DbType="Int NOT NULL")]
	public int IDPage
	{
		get
		{
			return this._IDPage;
		}
		set
		{
			if ((this._IDPage != value))
			{
				this._IDPage = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaUrl", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MediaUrl
	{
		get
		{
			return this._MediaUrl;
		}
		set
		{
			if ((this._MediaUrl != value))
			{
				this._MediaUrl = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover", DbType="Bit NOT NULL")]
	public bool Cover
	{
		get
		{
			return this._Cover;
		}
		set
		{
			if ((this._Cover != value))
			{
				this._Cover = value;
			}
		}
	}
}

public partial class FUNC_Post_GetDetail_InformationResult
{
	
	private int _IDPost;
	
	private string _Post_Title;
	
	private string _Post_ShortContent;
	
	private string _Post_Content;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	public FUNC_Post_GetDetail_InformationResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPost", DbType="Int NOT NULL")]
	public int IDPost
	{
		get
		{
			return this._IDPost;
		}
		set
		{
			if ((this._IDPost != value))
			{
				this._IDPost = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Post_Title
	{
		get
		{
			return this._Post_Title;
		}
		set
		{
			if ((this._Post_Title != value))
			{
				this._Post_Title = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_ShortContent", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Post_ShortContent
	{
		get
		{
			return this._Post_ShortContent;
		}
		set
		{
			if ((this._Post_ShortContent != value))
			{
				this._Post_ShortContent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Post_Content", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string Post_Content
	{
		get
		{
			return this._Post_Content;
		}
		set
		{
			if ((this._Post_Content != value))
			{
				this._Post_Content = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this._Deflag = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this._DateInsert = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this._DateLastUpdate = value;
			}
		}
	}
}

public partial class FUNC_Post_Photo_GetData_ByIDPostResult
{
	
	private int _IDPost;
	
	private int _IDPostMedia;
	
	private string _Title;
	
	private string _Description;
	
	private string _MediaUrl;
	
	private bool _Active;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	public FUNC_Post_Photo_GetData_ByIDPostResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPost", DbType="Int NOT NULL")]
	public int IDPost
	{
		get
		{
			return this._IDPost;
		}
		set
		{
			if ((this._IDPost != value))
			{
				this._IDPost = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPostMedia", DbType="Int NOT NULL")]
	public int IDPostMedia
	{
		get
		{
			return this._IDPostMedia;
		}
		set
		{
			if ((this._IDPostMedia != value))
			{
				this._IDPostMedia = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this._Title = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaUrl", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MediaUrl
	{
		get
		{
			return this._MediaUrl;
		}
		set
		{
			if ((this._MediaUrl != value))
			{
				this._MediaUrl = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this._Deflag = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this._DateInsert = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this._DateLastUpdate = value;
			}
		}
	}
}

public partial class FUNC_Post_Photo_GetDetailResult
{
	
	private int _IDPostMedia;
	
	private int _IDPost;
	
	private string _MediaUrl;
	
	private bool _Active;
	
	public FUNC_Post_Photo_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPostMedia", DbType="Int NOT NULL")]
	public int IDPostMedia
	{
		get
		{
			return this._IDPostMedia;
		}
		set
		{
			if ((this._IDPostMedia != value))
			{
				this._IDPostMedia = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPost", DbType="Int NOT NULL")]
	public int IDPost
	{
		get
		{
			return this._IDPost;
		}
		set
		{
			if ((this._IDPost != value))
			{
				this._IDPost = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaUrl", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string MediaUrl
	{
		get
		{
			return this._MediaUrl;
		}
		set
		{
			if ((this._MediaUrl != value))
			{
				this._MediaUrl = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
}

public partial class FUNC_Product_Category_GetAllResult
{
	
	private int _IDProduct_Category;
	
	private int _IDProduct;
	
	private int _IDCategory;
	
	private string _Name;
	
	private bool _IsDefault;
	
	public FUNC_Product_Category_GetAllResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Category", DbType="Int NOT NULL")]
	public int IDProduct_Category
	{
		get
		{
			return this._IDProduct_Category;
		}
		set
		{
			if ((this._IDProduct_Category != value))
			{
				this._IDProduct_Category = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
	public bool IsDefault
	{
		get
		{
			return this._IsDefault;
		}
		set
		{
			if ((this._IsDefault != value))
			{
				this._IsDefault = value;
			}
		}
	}
}

public partial class FUNC_Product_Category_GetData_ByIDProductResult
{
	
	private int _IDProduct_Category;
	
	private int _IDProduct;
	
	private int _IDCategory;
	
	private string _Name;
	
	private bool _IsDefault;
	
	public FUNC_Product_Category_GetData_ByIDProductResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Category", DbType="Int NOT NULL")]
	public int IDProduct_Category
	{
		get
		{
			return this._IDProduct_Category;
		}
		set
		{
			if ((this._IDProduct_Category != value))
			{
				this._IDProduct_Category = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
	public bool IsDefault
	{
		get
		{
			return this._IsDefault;
		}
		set
		{
			if ((this._IsDefault != value))
			{
				this._IsDefault = value;
			}
		}
	}
}

public partial class FUNC_Product_Category_GetData_DefaultResult
{
	
	private int _IDProduct_Category;
	
	private int _IDProduct;
	
	private int _IDCategory;
	
	private string _Name;
	
	private bool _IsDefault;
	
	public FUNC_Product_Category_GetData_DefaultResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Category", DbType="Int NOT NULL")]
	public int IDProduct_Category
	{
		get
		{
			return this._IDProduct_Category;
		}
		set
		{
			if ((this._IDProduct_Category != value))
			{
				this._IDProduct_Category = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
	public bool IsDefault
	{
		get
		{
			return this._IsDefault;
		}
		set
		{
			if ((this._IsDefault != value))
			{
				this._IsDefault = value;
			}
		}
	}
}

public partial class FUNC_Product_Category_GetDetailResult
{
	
	private int _IDProduct_Category;
	
	private int _IDProduct;
	
	private int _IDCategory;
	
	private string _Name;
	
	private bool _IsDefault;
	
	public FUNC_Product_Category_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Category", DbType="Int NOT NULL")]
	public int IDProduct_Category
	{
		get
		{
			return this._IDProduct_Category;
		}
		set
		{
			if ((this._IDProduct_Category != value))
			{
				this._IDProduct_Category = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
	public bool IsDefault
	{
		get
		{
			return this._IsDefault;
		}
		set
		{
			if ((this._IsDefault != value))
			{
				this._IsDefault = value;
			}
		}
	}
}

public partial class FUNC_Product_Combination_Getdata_ByIDProductResult
{
	
	private int _IDProduct_Combination;
	
	private int _IDProduct;
	
	private int _SequenceNumber;
	
	private string _ReferenceCode;
	
	private string _Name;
	
	private decimal _BasePrice;
	
	private decimal _PriceBeforeImpact;
	
	private decimal _ImpactPrice;
	
	private decimal _PriceAfterImpact;
	
	private decimal _Discount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _TotalDiscount;
	
	private decimal _Price;
	
	private decimal _WeightBeforeImpact;
	
	private decimal _ImpactWeight;
	
	private decimal _Weight;
	
	private int _Quantity;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	public FUNC_Product_Combination_Getdata_ByIDProductResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int NOT NULL")]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				this._IDProduct_Combination = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="Money NOT NULL")]
	public decimal BasePrice
	{
		get
		{
			return this._BasePrice;
		}
		set
		{
			if ((this._BasePrice != value))
			{
				this._BasePrice = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeImpact", DbType="Money NOT NULL")]
	public decimal PriceBeforeImpact
	{
		get
		{
			return this._PriceBeforeImpact;
		}
		set
		{
			if ((this._PriceBeforeImpact != value))
			{
				this._PriceBeforeImpact = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpactPrice", DbType="Money NOT NULL")]
	public decimal ImpactPrice
	{
		get
		{
			return this._ImpactPrice;
		}
		set
		{
			if ((this._ImpactPrice != value))
			{
				this._ImpactPrice = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceAfterImpact", DbType="Money NOT NULL")]
	public decimal PriceAfterImpact
	{
		get
		{
			return this._PriceAfterImpact;
		}
		set
		{
			if ((this._PriceAfterImpact != value))
			{
				this._PriceAfterImpact = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightBeforeImpact", DbType="Decimal(18,2) NOT NULL")]
	public decimal WeightBeforeImpact
	{
		get
		{
			return this._WeightBeforeImpact;
		}
		set
		{
			if ((this._WeightBeforeImpact != value))
			{
				this._WeightBeforeImpact = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpactWeight", DbType="Decimal(18,2) NOT NULL")]
	public decimal ImpactWeight
	{
		get
		{
			return this._ImpactWeight;
		}
		set
		{
			if ((this._ImpactWeight != value))
			{
				this._ImpactWeight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this._Deflag = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this._DateInsert = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this._DateLastUpdate = value;
			}
		}
	}
}

public partial class FUNC_Product_Combination_GetDetail_ByIDCombinationResult
{
	
	private int _IDProduct_Combination;
	
	private int _IDProduct;
	
	private int _SequenceNumber;
	
	private string _ReferenceCode;
	
	private string _Name;
	
	private decimal _BasePrice;
	
	private decimal _PriceBeforeImpact;
	
	private decimal _ImpactPrice;
	
	private decimal _PriceAfterImpact;
	
	private decimal _Discount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _TotalDiscount;
	
	private decimal _Price;
	
	private decimal _WeightBeforeImpact;
	
	private decimal _ImpactWeight;
	
	private decimal _Weight;
	
	private int _Quantity;
	
	private bool _Deflag;
	
	private System.DateTime _DateInsert;
	
	private System.DateTime _DateLastUpdate;
	
	public FUNC_Product_Combination_GetDetail_ByIDCombinationResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int NOT NULL")]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				this._IDProduct_Combination = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BasePrice", DbType="Money NOT NULL")]
	public decimal BasePrice
	{
		get
		{
			return this._BasePrice;
		}
		set
		{
			if ((this._BasePrice != value))
			{
				this._BasePrice = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeImpact", DbType="Money NOT NULL")]
	public decimal PriceBeforeImpact
	{
		get
		{
			return this._PriceBeforeImpact;
		}
		set
		{
			if ((this._PriceBeforeImpact != value))
			{
				this._PriceBeforeImpact = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpactPrice", DbType="Money NOT NULL")]
	public decimal ImpactPrice
	{
		get
		{
			return this._ImpactPrice;
		}
		set
		{
			if ((this._ImpactPrice != value))
			{
				this._ImpactPrice = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceAfterImpact", DbType="Money NOT NULL")]
	public decimal PriceAfterImpact
	{
		get
		{
			return this._PriceAfterImpact;
		}
		set
		{
			if ((this._PriceAfterImpact != value))
			{
				this._PriceAfterImpact = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WeightBeforeImpact", DbType="Decimal(18,2) NOT NULL")]
	public decimal WeightBeforeImpact
	{
		get
		{
			return this._WeightBeforeImpact;
		}
		set
		{
			if ((this._WeightBeforeImpact != value))
			{
				this._WeightBeforeImpact = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImpactWeight", DbType="Decimal(18,2) NOT NULL")]
	public decimal ImpactWeight
	{
		get
		{
			return this._ImpactWeight;
		}
		set
		{
			if ((this._ImpactWeight != value))
			{
				this._ImpactWeight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
	public int Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deflag", DbType="Bit NOT NULL")]
	public bool Deflag
	{
		get
		{
			return this._Deflag;
		}
		set
		{
			if ((this._Deflag != value))
			{
				this._Deflag = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime NOT NULL")]
	public System.DateTime DateInsert
	{
		get
		{
			return this._DateInsert;
		}
		set
		{
			if ((this._DateInsert != value))
			{
				this._DateInsert = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateLastUpdate", DbType="DateTime NOT NULL")]
	public System.DateTime DateLastUpdate
	{
		get
		{
			return this._DateLastUpdate;
		}
		set
		{
			if ((this._DateLastUpdate != value))
			{
				this._DateLastUpdate = value;
			}
		}
	}
}

public partial class FUNC_Product_Combination_Photo_GetData_ByIDProduct_CombinationResult
{
	
	private int _IDProduct_Combination_Photo;
	
	private int _IDProduct_Combination;
	
	private int _IDProduct_Photo;
	
	private string _Photo;
	
	private bool _IsCover;
	
	public FUNC_Product_Combination_Photo_GetData_ByIDProduct_CombinationResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination_Photo", DbType="Int NOT NULL")]
	public int IDProduct_Combination_Photo
	{
		get
		{
			return this._IDProduct_Combination_Photo;
		}
		set
		{
			if ((this._IDProduct_Combination_Photo != value))
			{
				this._IDProduct_Combination_Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Combination", DbType="Int NOT NULL")]
	public int IDProduct_Combination
	{
		get
		{
			return this._IDProduct_Combination;
		}
		set
		{
			if ((this._IDProduct_Combination != value))
			{
				this._IDProduct_Combination = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Photo", DbType="Int NOT NULL")]
	public int IDProduct_Photo
	{
		get
		{
			return this._IDProduct_Photo;
		}
		set
		{
			if ((this._IDProduct_Photo != value))
			{
				this._IDProduct_Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCover", DbType="Bit NOT NULL")]
	public bool IsCover
	{
		get
		{
			return this._IsCover;
		}
		set
		{
			if ((this._IsCover != value))
			{
				this._IsCover = value;
			}
		}
	}
}

public partial class FUNC_Product_GetAllResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private System.Nullable<int> _Quantity;
	
	private bool _Active;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private decimal _TotalDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private string _Photo;
	
	private string _Category;
	
	private string _Manufacturer;
	
	public FUNC_Product_GetAllResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this._Category = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Manufacturer
	{
		get
		{
			return this._Manufacturer;
		}
		set
		{
			if ((this._Manufacturer != value))
			{
				this._Manufacturer = value;
			}
		}
	}
}

public partial class FUNC_Product_GetAll_ByIDCategoryResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private System.Nullable<int> _Quantity;
	
	private bool _Active;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private decimal _TotalDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private int _IDCategory;
	
	private bool _IsDefault;
	
	private string _Photo;
	
	private string _Category;
	
	private string _Manufacturer;
	
	public FUNC_Product_GetAll_ByIDCategoryResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategory", DbType="Int NOT NULL")]
	public int IDCategory
	{
		get
		{
			return this._IDCategory;
		}
		set
		{
			if ((this._IDCategory != value))
			{
				this._IDCategory = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
	public bool IsDefault
	{
		get
		{
			return this._IsDefault;
		}
		set
		{
			if ((this._IsDefault != value))
			{
				this._IsDefault = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this._Category = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Manufacturer
	{
		get
		{
			return this._Manufacturer;
		}
		set
		{
			if ((this._Manufacturer != value))
			{
				this._Manufacturer = value;
			}
		}
	}
}

public partial class FUNC_Product_GetAll_ByIDCategory_And_PriceRangeResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private System.Nullable<int> _Quantity;
	
	private bool _Active;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private decimal _TotalDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private int _IDValue;
	
	private string _Photo;
	
	private string _Category;
	
	public FUNC_Product_GetAll_ByIDCategory_And_PriceRangeResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this._Category = value;
			}
		}
	}
}

public partial class FUNC_Product_GetAll_ByIDValueResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private System.Nullable<int> _Quantity;
	
	private bool _Active;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private decimal _TotalDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private int _IDValue;
	
	private string _Photo;
	
	private string _Category;
	
	public FUNC_Product_GetAll_ByIDValueResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this._Category = value;
			}
		}
	}
}

public partial class FUNC_Product_GetAll_ByIDValue_And_IDCategoryResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private System.Nullable<int> _Quantity;
	
	private bool _Active;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private decimal _TotalDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private int _IDValue;
	
	private string _Photo;
	
	private string _Category;
	
	public FUNC_Product_GetAll_ByIDValue_And_IDCategoryResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this._Category = value;
			}
		}
	}
}

public partial class FUNC_Product_GetAll_ByIDValue_And_IDCategory_And_PriceRangeResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private System.Nullable<int> _Quantity;
	
	private bool _Active;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private decimal _TotalDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private int _IDValue;
	
	private string _Photo;
	
	private string _Category;
	
	public FUNC_Product_GetAll_ByIDValue_And_IDCategory_And_PriceRangeResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(50)")]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this._Category = value;
			}
		}
	}
}

public partial class FUNC_Product_GetAll_CurrencyResult
{
	
	private System.Nullable<int> _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private System.Nullable<decimal> _PriceBeforeDiscount;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<int> _Quantity;
	
	private System.Nullable<bool> _Active;
	
	private System.Nullable<int> _IDManufacturer;
	
	private System.Nullable<int> _SequenceNumber;
	
	private System.Nullable<decimal> _TotalDiscount;
	
	private System.Nullable<bool> _TypeDiscountPercent;
	
	private System.Nullable<decimal> _Discount;
	
	private System.Nullable<decimal> _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private string _Photo;
	
	private string _Category;
	
	private string _Manufacturer;
	
	public FUNC_Product_GetAll_CurrencyResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int")]
	public System.Nullable<int> IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money")]
	public System.Nullable<decimal> PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
	public System.Nullable<bool> Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int")]
	public System.Nullable<int> IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int")]
	public System.Nullable<int> SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money")]
	public System.Nullable<decimal> TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit")]
	public System.Nullable<bool> TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money")]
	public System.Nullable<decimal> Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this._Category = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50)")]
	public string Manufacturer
	{
		get
		{
			return this._Manufacturer;
		}
		set
		{
			if ((this._Manufacturer != value))
			{
				this._Manufacturer = value;
			}
		}
	}
}

public partial class FUNC_Product_GetAll_InformationResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private bool _Active;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private decimal _TotalDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private string _Manufacturer;
	
	public FUNC_Product_GetAll_InformationResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Manufacturer
	{
		get
		{
			return this._Manufacturer;
		}
		set
		{
			if ((this._Manufacturer != value))
			{
				this._Manufacturer = value;
			}
		}
	}
}

public partial class FUNC_Product_GetDetailResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private System.Nullable<int> _Quantity;
	
	private bool _Active;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private decimal _TotalDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private string _Photo;
	
	private string _Manufacturer;
	
	public FUNC_Product_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Manufacturer
	{
		get
		{
			return this._Manufacturer;
		}
		set
		{
			if ((this._Manufacturer != value))
			{
				this._Manufacturer = value;
			}
		}
	}
}

public partial class FUNC_Product_GetDetail_CurrencyResult
{
	
	private System.Nullable<int> _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private System.Nullable<decimal> _PriceBeforeDiscount;
	
	private System.Nullable<decimal> _Price;
	
	private System.Nullable<int> _Quantity;
	
	private System.Nullable<bool> _Active;
	
	private System.Nullable<int> _IDManufacturer;
	
	private System.Nullable<int> _SequenceNumber;
	
	private System.Nullable<decimal> _TotalDiscount;
	
	private System.Nullable<bool> _TypeDiscountPercent;
	
	private System.Nullable<decimal> _Discount;
	
	private System.Nullable<decimal> _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private string _Photo;
	
	private string _Category;
	
	private string _Manufacturer;
	
	public FUNC_Product_GetDetail_CurrencyResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int")]
	public System.Nullable<int> IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money")]
	public System.Nullable<decimal> PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
	public System.Nullable<decimal> Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
	public System.Nullable<bool> Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int")]
	public System.Nullable<int> IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int")]
	public System.Nullable<int> SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money")]
	public System.Nullable<decimal> TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit")]
	public System.Nullable<bool> TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money")]
	public System.Nullable<decimal> Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,0)")]
	public System.Nullable<decimal> Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Category
	{
		get
		{
			return this._Category;
		}
		set
		{
			if ((this._Category != value))
			{
				this._Category = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(50)")]
	public string Manufacturer
	{
		get
		{
			return this._Manufacturer;
		}
		set
		{
			if ((this._Manufacturer != value))
			{
				this._Manufacturer = value;
			}
		}
	}
}

public partial class FUNC_Product_GetDetail_InformationResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private bool _Active;
	
	private int _IDManufacturer;
	
	private int _SequenceNumber;
	
	private decimal _TotalDiscount;
	
	private bool _TypeDiscountPercent;
	
	private decimal _Discount;
	
	private decimal _Weight;
	
	private string _ShortDescription;
	
	private string _Description;
	
	private string _Note;
	
	private string _Meta;
	
	private string _MetaDescription;
	
	private string _MetaKeyword;
	
	private string _Manufacturer;
	
	public FUNC_Product_GetDetail_InformationResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManufacturer", DbType="Int NOT NULL")]
	public int IDManufacturer
	{
		get
		{
			return this._IDManufacturer;
		}
		set
		{
			if ((this._IDManufacturer != value))
			{
				this._IDManufacturer = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalDiscount", DbType="Money NOT NULL")]
	public decimal TotalDiscount
	{
		get
		{
			return this._TotalDiscount;
		}
		set
		{
			if ((this._TotalDiscount != value))
			{
				this._TotalDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDiscountPercent", DbType="Bit NOT NULL")]
	public bool TypeDiscountPercent
	{
		get
		{
			return this._TypeDiscountPercent;
		}
		set
		{
			if ((this._TypeDiscountPercent != value))
			{
				this._TypeDiscountPercent = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Money NOT NULL")]
	public decimal Discount
	{
		get
		{
			return this._Discount;
		}
		set
		{
			if ((this._Discount != value))
			{
				this._Discount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Decimal(18,2) NOT NULL")]
	public decimal Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this._Weight = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string ShortDescription
	{
		get
		{
			return this._ShortDescription;
		}
		set
		{
			if ((this._ShortDescription != value))
			{
				this._ShortDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Note
	{
		get
		{
			return this._Note;
		}
		set
		{
			if ((this._Note != value))
			{
				this._Note = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Meta", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Meta
	{
		get
		{
			return this._Meta;
		}
		set
		{
			if ((this._Meta != value))
			{
				this._Meta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaDescription", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaDescription
	{
		get
		{
			return this._MetaDescription;
		}
		set
		{
			if ((this._MetaDescription != value))
			{
				this._MetaDescription = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MetaKeyword", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MetaKeyword
	{
		get
		{
			return this._MetaKeyword;
		}
		set
		{
			if ((this._MetaKeyword != value))
			{
				this._MetaKeyword = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Manufacturer", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Manufacturer
	{
		get
		{
			return this._Manufacturer;
		}
		set
		{
			if ((this._Manufacturer != value))
			{
				this._Manufacturer = value;
			}
		}
	}
}

public partial class FUNC_Product_GetTableResult
{
	
	private int _IDProduct;
	
	private string _Name;
	
	private string _ReferenceCode;
	
	private decimal _PriceBeforeDiscount;
	
	private decimal _Price;
	
	private System.Nullable<int> _Quantity;
	
	private bool _Active;
	
	private int _SequenceNumber;
	
	private string _Photo;
	
	public FUNC_Product_GetTableResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReferenceCode", DbType="NVarChar(20)")]
	public string ReferenceCode
	{
		get
		{
			return this._ReferenceCode;
		}
		set
		{
			if ((this._ReferenceCode != value))
			{
				this._ReferenceCode = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBeforeDiscount", DbType="Money NOT NULL")]
	public decimal PriceBeforeDiscount
	{
		get
		{
			return this._PriceBeforeDiscount;
		}
		set
		{
			if ((this._PriceBeforeDiscount != value))
			{
				this._PriceBeforeDiscount = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
	public decimal Price
	{
		get
		{
			return this._Price;
		}
		set
		{
			if ((this._Price != value))
			{
				this._Price = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
	public System.Nullable<int> Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this._Quantity = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit NOT NULL")]
	public bool Active
	{
		get
		{
			return this._Active;
		}
		set
		{
			if ((this._Active != value))
			{
				this._Active = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SequenceNumber", DbType="Int NOT NULL")]
	public int SequenceNumber
	{
		get
		{
			return this._SequenceNumber;
		}
		set
		{
			if ((this._SequenceNumber != value))
			{
				this._SequenceNumber = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
}

public partial class FUNC_Product_Photo_GetAllResult
{
	
	private int _IDProduct_Photo;
	
	private int _IDProduct;
	
	private string _Photo;
	
	private bool _IsCover;
	
	public FUNC_Product_Photo_GetAllResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Photo", DbType="Int NOT NULL")]
	public int IDProduct_Photo
	{
		get
		{
			return this._IDProduct_Photo;
		}
		set
		{
			if ((this._IDProduct_Photo != value))
			{
				this._IDProduct_Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCover", DbType="Bit NOT NULL")]
	public bool IsCover
	{
		get
		{
			return this._IsCover;
		}
		set
		{
			if ((this._IsCover != value))
			{
				this._IsCover = value;
			}
		}
	}
}

public partial class FUNC_Product_Photo_GetData_ByIDProductResult
{
	
	private int _IDProduct_Photo;
	
	private int _IDProduct;
	
	private string _Photo;
	
	private bool _IsCover;
	
	public FUNC_Product_Photo_GetData_ByIDProductResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Photo", DbType="Int NOT NULL")]
	public int IDProduct_Photo
	{
		get
		{
			return this._IDProduct_Photo;
		}
		set
		{
			if ((this._IDProduct_Photo != value))
			{
				this._IDProduct_Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCover", DbType="Bit NOT NULL")]
	public bool IsCover
	{
		get
		{
			return this._IsCover;
		}
		set
		{
			if ((this._IsCover != value))
			{
				this._IsCover = value;
			}
		}
	}
}

public partial class FUNC_Product_Photo_GetDetailResult
{
	
	private int _IDProduct_Photo;
	
	private int _IDProduct;
	
	private string _Photo;
	
	private bool _IsCover;
	
	public FUNC_Product_Photo_GetDetailResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct_Photo", DbType="Int NOT NULL")]
	public int IDProduct_Photo
	{
		get
		{
			return this._IDProduct_Photo;
		}
		set
		{
			if ((this._IDProduct_Photo != value))
			{
				this._IDProduct_Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProduct", DbType="Int NOT NULL")]
	public int IDProduct
	{
		get
		{
			return this._IDProduct;
		}
		set
		{
			if ((this._IDProduct != value))
			{
				this._IDProduct = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(70)")]
	public string Photo
	{
		get
		{
			return this._Photo;
		}
		set
		{
			if ((this._Photo != value))
			{
				this._Photo = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCover", DbType="Bit NOT NULL")]
	public bool IsCover
	{
		get
		{
			return this._IsCover;
		}
		set
		{
			if ((this._IsCover != value))
			{
				this._IsCover = value;
			}
		}
	}
}

public partial class FUNC_Role_Menu_GetData_ByIDRoleResult
{
	
	private int _IDRole;
	
	private int _IDMenu;
	
	private string _Name;
	
	private string _Link;
	
	public FUNC_Role_Menu_GetData_ByIDRoleResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRole", DbType="Int NOT NULL")]
	public int IDRole
	{
		get
		{
			return this._IDRole;
		}
		set
		{
			if ((this._IDRole != value))
			{
				this._IDRole = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMenu", DbType="Int NOT NULL")]
	public int IDMenu
	{
		get
		{
			return this._IDMenu;
		}
		set
		{
			if ((this._IDMenu != value))
			{
				this._IDMenu = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string Link
	{
		get
		{
			return this._Link;
		}
		set
		{
			if ((this._Link != value))
			{
				this._Link = value;
			}
		}
	}
}

public partial class FUNC_Role_OrderStatus_GetData_ByIDRoleResult
{
	
	private int _IDRole;
	
	private int _IDOrderStatus;
	
	private System.Nullable<bool> _IsNotif;
	
	private string _Name;
	
	public FUNC_Role_OrderStatus_GetData_ByIDRoleResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRole", DbType="Int NOT NULL")]
	public int IDRole
	{
		get
		{
			return this._IDRole;
		}
		set
		{
			if ((this._IDRole != value))
			{
				this._IDRole = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDOrderStatus", DbType="Int NOT NULL")]
	public int IDOrderStatus
	{
		get
		{
			return this._IDOrderStatus;
		}
		set
		{
			if ((this._IDOrderStatus != value))
			{
				this._IDOrderStatus = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNotif", DbType="Bit")]
	public System.Nullable<bool> IsNotif
	{
		get
		{
			return this._IsNotif;
		}
		set
		{
			if ((this._IsNotif != value))
			{
				this._IsNotif = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
}

public partial class FUNC_Value_GetAllResult
{
	
	private int _IDValue;
	
	private int _IDAttribute;
	
	private string _AttributeName;
	
	private bool _IsColor;
	
	private string _Name;
	
	private string _RGBColor;
	
	public FUNC_Value_GetAllResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAttribute", DbType="Int NOT NULL")]
	public int IDAttribute
	{
		get
		{
			return this._IDAttribute;
		}
		set
		{
			if ((this._IDAttribute != value))
			{
				this._IDAttribute = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string AttributeName
	{
		get
		{
			return this._AttributeName;
		}
		set
		{
			if ((this._AttributeName != value))
			{
				this._AttributeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsColor", DbType="Bit NOT NULL")]
	public bool IsColor
	{
		get
		{
			return this._IsColor;
		}
		set
		{
			if ((this._IsColor != value))
			{
				this._IsColor = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGBColor", DbType="NVarChar(10)")]
	public string RGBColor
	{
		get
		{
			return this._RGBColor;
		}
		set
		{
			if ((this._RGBColor != value))
			{
				this._RGBColor = value;
			}
		}
	}
}

public partial class FUNC_Value_GetData_ByIDAttributeResult
{
	
	private int _IDValue;
	
	private int _IDAttribute;
	
	private string _AttributeName;
	
	private bool _IsColor;
	
	private string _Name;
	
	private string _RGBColor;
	
	public FUNC_Value_GetData_ByIDAttributeResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDValue", DbType="Int NOT NULL")]
	public int IDValue
	{
		get
		{
			return this._IDValue;
		}
		set
		{
			if ((this._IDValue != value))
			{
				this._IDValue = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAttribute", DbType="Int NOT NULL")]
	public int IDAttribute
	{
		get
		{
			return this._IDAttribute;
		}
		set
		{
			if ((this._IDAttribute != value))
			{
				this._IDAttribute = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttributeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string AttributeName
	{
		get
		{
			return this._AttributeName;
		}
		set
		{
			if ((this._AttributeName != value))
			{
				this._AttributeName = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsColor", DbType="Bit NOT NULL")]
	public bool IsColor
	{
		get
		{
			return this._IsColor;
		}
		set
		{
			if ((this._IsColor != value))
			{
				this._IsColor = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RGBColor", DbType="NVarChar(10)")]
	public string RGBColor
	{
		get
		{
			return this._RGBColor;
		}
		set
		{
			if ((this._RGBColor != value))
			{
				this._RGBColor = value;
			}
		}
	}
}
#pragma warning restore 1591
